__label__summary azure blob file system implementation of abstract file system
__label__summary test get file status and related listing operations
__label__summary class representing a filesystem contract that a filesystemimplementation is expected implement
__label__summary this class is an abstract base class for testing tensorboard and tensor flow and launch commands
__label__summary this is the api for the applications comprising of constants that yarn setsup for the applications and the containers
__label__summary contains all the state data that needs to be stored persistentlyfor an application
__label__summary an @link input format that tries to deduce the types of the input filesautomatically
__label__summary balancing policy
__label__summary base class for all the router rm admin service test cases
__label__summary a grouping of scheduling requests which are sent to the placement algorithmto place as a batch iterator type
__label__summary an implementation of @see block placement status
__label__summary this class maintains the map from a block to its metadata
__label__summary utils functions to help block functions
__label__summary a utility class that maintains encoding state during an encode call usingbyte array inputs
__label__summary this class implements a @link plan follower this is invoked on a timer andit is in charge to publish the state of the @link plans to the underlying@link capacity scheduler
__label__summary commandline utility for getting the full classpath needed to launch a hadoopclient application
__label__summary generic implementation of version comparison represents a numeric item in the version item list represents a string in the version item list usually a qualifier represents a version list item this class is used both for the global item list and for sublists which startwith number in the version specification
__label__summary exception to throw in case of a configuration problem
__label__summary the class contains the fields that can be determined whencoderm containercode finishes and that need to be stored persistently
__label__summary utility for sampling and computing cpu usage
__label__summary user visible configs based rocks db tuning page
__label__summary default rumen json serializer
__label__summary a @link ssl socket factory that can delegate to various ssl implementations
__label__summary a delegation token identifier that is specific to hdfs
__label__summary the request to code federation state storecode to delete the mapping ofhome subcluster of a submitted application
__label__summary this class contains constants for configuration keys and default values used in hdfs
__label__summary a base class for the servlets in dfs
__label__summary disk balancer cluster represents the nodes that we are working against
__label__summary object used by the application master when distributed scheduling is enabled
__label__summary encapsulates the docker kill command and its command line arguments
__label__summary edit log tailer represents a thread which periodically reads from editsjournals and applies the transactions contained within to a given fs namesystem
__label__summary this manages erasure coding policies predefined and activated in the system
__label__summary event watcher the resend a message after timeout
__label__summary interface describing an expression to be used in the@link orgapachehadoopfsshellfind find command
__label__summary an ordering policy which orders schedulable entities for fairness see fair scheduler fair share policy generally processes with lesser usage are lesser
__label__summary generic policy exception
__label__summary helper class for settinggetting data elements in an object backed by aprotobuf implementation
__label__summary exception thrown by the @code federation membership state store input validator
__label__summary file system implementation of @link application history store
__label__summary file system related constants
__label__summary protocol buffer based implementation of@link get application home sub cluster response
__label__summary api response for listing hdfs namespaces present in the state store
__label__summary the response sent by the code resource managercode to a client requestingnodes to attributes mapping
__label__summary protobuf implementation of the state store api object get safe mode request
__label__summary protocol buffer based implementation of@link get sub cluster policy configuration request
__label__summary indicates that a method has been passed illegal or invalid argument
__label__summary order the destinations based on consistent hashing
__label__summary an i data loader loads data on demand
__label__summary s client factory used for testing with eventual consistency fault injection
__label__summary executes info object
__label__summary thrown when an arguments are combined to construct acodeamrm client container requestcode in an invalid way
__label__summary test read write and seek
__label__summary contract test
__label__summary test the lowlevel binding of the sa fs to the magic commit mechanismand handling of the commit operations
__label__summary test list performance
__label__summary test the s select feature with some basic sql commands
__label__summary test the s select cli through some operations against landsatand files generated from it
__label__summary the code kerberos delegation token authenticatorcode provides support for kerberos spnego authentication mechanism and support for hadoop delegation token operations
__label__summary pb impl of @link localization status
__label__summary this class defines a file status that includes a files block locations
__label__summary a @link logged task represents a hadoop task that is part of a hadoop job
__label__summary common utility functions for @link log parser
__label__summary lru cache with a configurable maximum cache size and access order
__label__summary the context that is given to the @link mapper
__label__summary exception meta block with the same name already exists
__label__summary a metrics cache for sinks that dont support sparse updates context of the queues in scheduler
__label__summary this sample parser will parse the sample log and extract the resourceskyline
__label__summary this class is for maintaining the various nfs gateway activity statistics andpublishing them through the metrics interfaces
__label__summary success or error status is reported in nfs responses
__label__summary this data structure maintains the list of containers that is on a datanode
__label__summary p taxonomy of the code node statecode that acode nodecode might transition intop
__label__summary consume all outputs and put them in devnull
__label__summary this class stores om node details builder class for om node details
__label__summary protocol buffer implementation of opportunistic containers status
__label__summary class representing an unique ozone object
__label__summary a class for parsing outputs
__label__summary interface for an @link orgapachehadoopmapreduce output committerimplementing partial commit of task output as during preemption
__label__summary this class represents queueuser resource usage info for a given partition
__label__summary this exception is thrown if the user quota is exceed while accepting orupdating a reservation
__label__summary helper functionality to read the pid from a file
__label__summary a mapreduce program that estimates the value of pi
__label__summary check if a record matches a query
__label__summary represents a queue name
__label__summary data generator tool to generate as much keys as possible
__label__summary class for finalizing reencrypt edek operations class representing the task for one batch of a reencryption command italso contains statistics about how far this single batch has been executed class that encapsulates reencryption details of a file
__label__summary internal constants for the registry
__label__summary registry operations
__label__summary @link resource blacklist request encapsulates the list of resourcenameswhich should be added or removed from the emblacklistem of resourcesfor the application
__label__summary performs value verifications on@link orgapachehadoopyarnserverresourcemanagerwebappdao resource request infoobjects against the values of @link resource request builder class for @link resource requests json verifications
__label__summary this class extends retriable command to implement the creation of directorieswith retries on failure
__label__summary defines the contract to be implemented by the request intercepter classes
__label__summary a raw coder factory for the legacy raw reed solomon coder in java
__label__summary context of the queues in scheduler
__label__summary an @link record reader for @link sequence files
__label__summary a simple shellbased implementation of @link group mapping service provider
__label__summary specialized socket factory to create sockets with a socks proxy
__label__summary @link state store driver implementation based on a filesystem
__label__summary shared functionality for hadoop streaming formats
__label__summary this program generates a random namespace structure
__label__summary thrown to indicate that data locality cant be calculated or requested path is incorrect
__label__summary this implements the clientside of the swift rest api
__label__summary class that maintains table configuration
__label__summary test add block op is written and read correctly
__label__summary test delete contract test
__label__summary test seek operation on adl file system
__label__summary basic test case that the conf servlet can write configurationto its output in xml and json format
__label__summary this class tests the client connection
__label__summary test custom o auth token providers
__label__summary test aspects of data driven db input format
__label__summary test the edit log file output stream
__label__summary unit test for @link federation policy utils
__label__summary unit test for file size count task
__label__summary tests handler interface
__label__summary this test checks correctness of port usage by hdfs components name node data node secondary namenode and backup node
__label__summary tests @link key input stream
__label__summary test the metric visitor interface
__label__summary tests for the upload buffering and flush logic in wasb
__label__summary this class tests om multipart key info codec
__label__summary base test class for volume request
__label__summary test class for @link ozone native authorizer
__label__summary test for testing protocol buffer based rpc mechanism
__label__summary rdb store tests
__label__summary test for registry security operations
__label__summary test the @link rolling file system sink class in the context of the local filesystem
__label__summary test class to validate router web service util methods
__label__summary tests for s bucket manager
__label__summary test various failure scenarios during save namespace operation
__label__summary this class tests the behavior of scm datanode heartbeat dispatcher
__label__summary support for flat files of binary keyvalue pairs
__label__summary test that we can start several and run with namenodes on the same minicluster
__label__summary this is the full filesystem contract test which requires the default config set up to point to a filesystem
__label__summary special committer that does not cleanup temporary files inabort task
__label__summary tests context api and @link status reporter#get progress via@link task attempt context#get progress api 
__label__summary test class for top cli
__label__summary endtoend test case for upgrade domain
__label__summary an @link input format for plain text files files are broken into lines
__label__summary encapsulates information regarding which data to retrieve for each entitywhile queryingbr
__label__summary this abstract class is for monitoring health of timeline storage
__label__summary implementation of runtime factory with tony runtime
__label__summary basic event implementation
__label__summary uniform size input format extends the input format class to produceinputsplits for dist cp
__label__summary a utility class it provides a path filter utility to filter out outputpart files in the output dir
__label__summary volume set to manage hdds volumes in a data node
__label__summary a comparator for @link writable comparables
__label__summary an implementation of the interface will provide authorization relatedinformation and enforce permission check
__label__summary submit a job to cluster
__label__summary response to @link chunk fetch request when a chunk exists and has been successfully fetched
__label__summary a plugin which can be automatically instantiated within each spark executor
__label__summary a function that returns zero or more output records from each input record
__label__summary perform streaming testing using welchs sample ttest on a stream of data where the datastream arrives as text files in a directory stops when the two groups are statisticallysignificant pvalue or after a userspecified timeout in number of batches is exceeded
__label__summary abstraction for a local keyvalue store for storing app data
__label__summary implementation of kv store that uses level db as the underlying data store
__label__summary implementation of the @link shuffle data io plugin system that replicates the local shufflestorage and index file functionality that has historically been used from spark and earlier
__label__summary a wrapper message that holds two separate pieces a header and a body
__label__summary request to remove a set of blocks
__label__summary identifier for a fixed number of chunks to read from a stream created by an open blocksmessage
__label__summary the set of fields this struct contains along with convenience methods for finding and manipulating them
__label__summary a request to upload a block which the destination should receive as a stream
__label__summary it is a parent for all standard property tabs in new cdt model
__label__summary base class for parser action classes which support trial undo and final actions
__label__summary ruler action to add breakpoint with a dialog properties
__label__summary a delegate for the add line breakpoint action
__label__summary adds memory blocks to the memory view
__label__summary this is a test suite the test cases created to test template engine are added to testsuite
__label__summary this class provides the macro call parameter parsing for the autoconf editor hover
__label__summary tests for @link binding classifier
__label__summary semantic actions called by the c parser to build an ast
__label__summary c configuration description cache is a proxy class for serialization of configuration description data
__label__summary the clang toolchain
__label__summary common utilities for core build launch configuration tabs
__label__summary core launch configuration provider used by generic target types
__label__summary cspecific implementation allows actions to visit the problem
__label__summary reference operator for declarators
__label__summary represents a reference to a member function instance which cannot be resolved because an argument depends on a template parameter
__label__summary represents a variable implicitly created in c code
__label__summary collection of static methods to perform template instantiation member specialization and type instantiation
__label__summary a property tester that determines if a file is an executable or a cc project
__label__summary this class implements the setting of the cui initial preference store settings
__label__summary this is a helper class for the text editor to be able to determine given a particular offset in a document various candidates segments for things like context help proposals and hovering
__label__summary the default implementation of the i context info used by the environment variable provider
__label__summary this class implements the dependency manager and output name provider interfaces for a very quick dirty ifort toolchain on win
__label__summary dsf executor which uses the display thread to run the submitted runnables and callables
__label__summary project property page for setting documentation comment owner
__label__summary this class is just to replace a category reference in orgeclipsecdtui
__label__summary dynamic menu contribution that shows available number formats in the current selection of the view
__label__summary configures c editor folding preferences
__label__summary tests to verify the operation of formatted values vm util
__label__summary a specialization of expression vm provider
__label__summary default implementation of @link igdb source lookup
__label__summary this is a specialized makefile generator that takes advantage of the extensions present in gnu make
__label__summary command handler to trigger grouping of debug contexts operation
__label__summary action used for the include browser forward backward buttons
__label__summary representation in the project model of language settings entries of pathkind such as include paths i or include files and others
__label__summary representation in the project model of language settings entries such as library file l gcc option
__label__summary this is the interface that an ast service uses to delegate the construction of a code reader
__label__summary represents an instance of an alias template 
__label__summary this interface represents a linkage specification eg extern c 
__label__summary a virtspecifier at the end of a function declaration
__label__summary this interface is used to provide a description of a debug element usually a stack frame when no source can be located for it
__label__summary a factory to create dsf services
__label__summary the trace control service provides access to the debugger tracing functionality
__label__summary represents an include declaration in a c translation unit
__label__summary a java script switch case from the a hrefhttpsgithubcomestreeestreeblobmasterspecmd#switchcasees tree specificationa
__label__summary service for controlling the back end process
__label__summary represents a microsoft attribute specifier introduced by declspec
__label__summary control flow graph node factory
__label__summary implemented by classes which can optionally participate in property change events and report whether an event would affect them without adapting to it
__label__summary a retargetable action target which allows a debugger to refresh all of its active views with fresh data from the debug target
__label__summary service extension of i registers to manage user defined register groups
__label__summary parses a line of command output looking for scanner info entries
__label__summary represents status of the test item
__label__summary provides the ability to view a variable in the memory view
__label__summary helper class handling serialization and notifications for language settings entries @link ic language setting entry those are for readability of xml only dummy class to represent illdefined provider those are for readability of xml only language settings provider listenercfg description association those are for readability of xml only wrapper for workspace providers to ensure level of indirection that way workspace providers can be changedreplaced without notifyingchanging the configurations which keep the providers in their lists those are for readability of xml only language settings change event implementation
__label__summary this class handles these type of situations by firing mi error event when such an error appears
__label__summary provides synchronization between breakpoints set from outside of the eclipse breakpoint framework gdb console trace files etc and the breakpoints view
__label__summary show a list of register names for the current target
__label__summary add directory pathdir to beginning of search path for source files
__label__summary this class permits to enable disable or toggle the reverse debugging mode
__label__summary same as with frame objects this is a base class for the i variable dm data object that uses an mi arg object to provide the data base class for the i frame dm data object that uses an mi frame object to provide the data
__label__summary tab group for launch group
__label__summary represents declarations definitions and references to bindings except for macros
__label__summary listens to resource deltas and filters for marker changes of type i markerproblem
__label__summary this class implements external process launching for internal builder
__label__summary a data structure for storing lists of pdom names that are indexed by a string key
__label__summary represents a view part showing the testing results count statistics redgreen bar tests hierarchy and test messages persistence tags represents view orientatio
__label__summary test for @see return checker test class
__label__summary the description of an extension to the codeorgeclipseuiworkbenchtexteditorruler columnscode extension point
__label__summary enumeration class for scanner configuration affecting command line options
__label__summary tests that interaction with source lookups works as expected
__label__summary spell event fired for words detected by a spell check iterator
__label__summary c element label provider that respects settings from the appearance preference page
__label__summary dialog field containing a label and a text control
__label__summary collects the data from the tests runner provider plugin extension points and provides the convenient access to it
__label__summary toggles a dynamic printf in a cc editor
__label__summary property page for tracepoint actions
__label__summary a console that is used to print traces the console is attached to a launch
__label__summary cell modifier used to edit the trigger value
__label__summary command handler to trigger an uncall operation
__label__summary enumeration of keywords that upc adds to c
__label__summary implementation of the i language extension point adds upc as a language to cdt
__label__summary helper class implementation of the @link i has children update update object
__label__summary manage code formatter white space options on a higher level
__label__summary proposal to ignore the word during the current editing session
__label__summary contains unit test cases for working copies
__label__summary base class for collection testers
__label__summary abstract @link listening executor service implementation that creates @link listenable futureinstances for each @link runnable and @link callable submitted to it
__label__summary this class provides a skeletal implementation of the @code cache interface
__label__summary a skeleton @code multimap implementation not necessarily in terms of a @code map
__label__summary superclass for all @code multimap testers
__label__summary basic implementation of a @link sorted set multimap with a sorted key set
__label__summary supplies an arbitrary default instance for a wide range of types often useful in testingutilities
__label__summary a dummy superclass to support gwt serialization of the element types of an @link array list multimap
__label__summary unit test for @link atomic double array
__label__summary benchmark for @code base encoding performance
__label__summary a bloom filter for instances of @code t a bloom filter offers an approximate containment testwith onesided error if it claims that an element is contained in it this might be in errorbut if it claims that an element is inoti contained in it then this is definitely true
__label__summary a builder of @link loading cache and @link cache instances
__label__summary unit tests for @link cache loader
__label__summary a map each entry of which maps a java a hrefhttptinyurlcomcmwkzraw typea to aninstance of that type in addition to implementing @code map the additional typesafeoperations @link #put instance and @link #get instance are available
__label__summary unit tests for @link closeables
__label__summary concrete instantiation of @link abstract collection test suite builder for testing collections thatdo not have a more specific tester like @link list test suite builder or @link set test suite builder
__label__summary thrown when requirements on a tester method or class conflict with each other
__label__summary an output stream that counts the number of bytes written
__label__summary a skeleton implementation of a descending multiset
__label__summary tester for equals and hash code methods of a class
__label__summary creates based on your criteria a j unit test suite that exhaustively tests the object generatedby a g
__label__summary test for @link forwarding blocking deque
__label__summary gwt implementation of @link immutable set that forwards to another @code set implementation
__label__summary tests for @code forwarding queue
__label__summary runs all gwt tests
__label__summary an enum that contains all of the known hash functions
__label__summary an immutable representation of a host and port
__label__summary benchmark of implementations of @link immutable set#hash flooding detected object
__label__summary this class contains static utility methods for writing @link immutable table gwt fieldserializers
__label__summary quick and dirty benchmark of @link throwables#lazy stack trace throwable
__label__summary benchmarks for the nonrounding methods of @code long math
__label__summary a generic j unit test which tests @code put all operations on a map
__label__summary basic serialization test for maps
__label__summary a builder for a multimap implementation that allows customization of the backing map and valuecollection implementations used in a particular multimap
__label__summary tests for @link multimap builder
__label__summary this class implements the gwt serialization of @link nulls last ordering
__label__summary object count hash map is an implementation of @code abstract object count map that uses arrays tostore key objects and count values
__label__summary an iterator that supports a oneelement lookahead while iterating
__label__summary static convenience methods that help a method or constructor check whether it was invokedcorrectly that is whether its ipreconditionsi were met
__label__summary this class implements the gwt serialization of @link regular immutable list
__label__summary reserializes the sets created by another test set generator
__label__summary provides utility methods for working with resources in the classpath
__label__summary the primary feature of a rate limiter is its stable rate the maximum rate that is shouldallow at normal conditions this is enforced by throttling incoming requests as needed iecompute for an incoming request the appropriate throttle time and make the calling threadwait as muchp in summary the time it takes to move to the left spend k permits is equal to the area ofthe function of width k
__label__summary a generic j unit test which tests operations on a sorted set
__label__summary tests for @link subscriber
__label__summary encapsulates the constraints that a class under test must satisfy in order for a tester method tobe run against that class
__label__summary an abstract @code scheduled executor service that allows subclasses to @linkplain#wrap task callable wrap tasks before they are submitted to the underlying executor
__label__summary a support class for @link modules which reduces repetition and results in a more readableconfiguration
__label__summary collects configuration information primarily ibindingsi which will be used to create an@link injector guice provides this object to your applications @link module implementors sothey may each contribute their own bindings and other registrations
__label__summary tests for interception of default methods
__label__summary an internal binding annotation applied to each element in a multibinding
__label__summary central routingdispatch class handles lifecycle of managed filters and delegates to the servletpipeline
__label__summary handles @code bindernew private binder elements
__label__summary utilities for testing the multibinder map binder extension spi
__label__summary an abstract base class for focusable components
__label__summary shared state for @code abstract multi select
__label__summary abstract base class for @link property implementations handles listener management for @link value change listeners and@link read only status change listeners
__label__summary default shared state implementation for abstract single component container
__label__summary test to see if tooltips obey quick open delay when moving between directly adjacent elements
__label__summary helper class for reading configuration options from the bootstap wraps a native javascript object containing fields for an error message
__label__summary a representation of a bootstrap page being generated
__label__summary a renderer that displays a button with a textual caption
__label__summary serializes @link client rpc client rpc invocations to json
__label__summary rpc interface for abstract color picker
__label__summary shared state for the combo box component
__label__summary value provider class for declarative support provides a straightforward mapping between an item and its value
__label__summary validator for validating that a @link double is inside a given range
__label__summary handler for @link grid double click events that happen in the footer of the grid
__label__summary a grid component for displaying tabular data
__label__summary test ui for grid initial rendering performance profiling
__label__summary the serverside interface that controls grids selection state
__label__summary a header row in a grid
__label__summary annotation enabling using multiple @link java script @ java scriptannotations
__label__summary mini tutorial code for
__label__summary a component for displaying a two different views to data the minimized viewis normally used to render the component and when it is clicked the fullview is displayed on a popup the inner class @link popup view content isused to deliver contents to this component
__label__summary request handler which provides a dummy html response to any resource requestwith the resource id dummy
__label__summary test for vrequired style
__label__summary provides vaadin serverside container data source to a@link comvaadinvclientconnectors grid connector grid connector this is currentlyimplemented as an extension hardcoded to support a specific connector type class for keeping track of current items and value change listeners
__label__summary a select all event fired by the grid when it needs all rows in data sourceto be selected or when all rows have been selected and are now deselected
__label__summary delegate used by @link design context to determine whether container datashould be written out for a component
__label__summary a hash map backed implementation of @link target details for terminan
__label__summary connector used as a placeholder for extensions that are not present in thewidgetset
__label__summary portlet base class this replaces the servlet in servletportlet deployments and handles various portlet requests from the browser
__label__summary listener for @link vaadin service initialization events the listener canadd listeners and request handlers the service
__label__summary private helper class
__label__summary v scroll table is a flow panel having two widgets in it table head component scroll panel table head contains tables header and widgets logic for resizingreordering and hiding columns scroll panel contains v scroll table body object which handles content to savesome bandwidth and to improve clients responsiveness with loads of data in v scroll table body all rows are not necessary rendered there are spacers in v scroll table body to use the exact same space as nonrendered rows would use this way we can use seamlessly traditional scrollbars and scrolling to fetchmore rows instead of paging
__label__summary this class represents a multiline textfield textarea
__label__summary a component that represents a floating popup window that can be added to a@link ui a window is added to a @code ui using@link ui#add window window
__label__summary xhr connection error provides detail about an error which occurred during an xhr request to the server
__label__expand this impl delegates to the old file system
__label__expand the tree parameters kept small to avoid killing object store test runs too much accept everything the tree parameters kept small to avoid killing object store test runs too much accept nothing the tree parameters kept small to avoid killing object store test runs too much path filter which only expects paths whose final name elementequals the @code match field the tree parameters kept small to avoid killing object store test runs too much a filesystem filter which exposes the protected method@link #list located status path path filter
__label__expand dynamically create the output committer based on subclass type and settings
__label__expand the type of launch for the container environment for applications some of the environment variables for applications are emfinalemie they cannot be modified by the applications
__label__expand it can currently handle text and sequence files
__label__expand since a datanode may contain multiple block pools@link pool implies @link nodebut not the other way around
__label__expand the placement algorithm tends to give more optimalplacements if more requests are batched together
__label__expand blocks metadata currently includes block collection it belongs to andthe datanodes that store the block
__label__expand a utility class that maintains encoding state during an encode call usingbyte array inputs
__label__expand this implementation does so byaddingremovingresizing leaf queues in the scheduler thus affecting thedynamic behavior of the scheduler in a way that is consistent with thecontent of the plan it also updates the plans view on how much resourcesare available in the cluster
__label__expand if the hadoop script is called with classpath as thecommand then it simply prints the classpath and exits immediately withoutlaunching a jvm the output likely will include wildcards in the classpath if there are arguments passed to the classpath command then this class getscalled with the glob argument it prints the full classpath with wildcardsexpanded this is useful in situations where wildcard syntax isnt usable with the jar argument it writes the classpath as a manifest in a jar file this is useful in environments with short limitations on the maximum commandline length where it may not be possible to specify the full classpath in acommand for example the maximum command line length on windows is characters
__label__expand specifically either open ssl or jsse can be used open ssl offers betterperformance than jsse and is made available via thea hrefhttpsgithubcomwildflywildflyopensslwildlfyopensslalibrary
__label__expand a delegation token identifier that is specific to hdfs
__label__expand please note semantics of inclusion list and exclusion listsp if a nonempty inclusion list is specified then the disk balancer assumes thatthe user is only interested in processing that list of nodes this node listis checked against the exclusion list and only the nodes in inclusion list butnot in exclusion list is processedpif inclusion list is empty then we assume that all live nodes in the nodes isto be processed by disk balancer in that case disk balancer will avoid anynodes specified in the exclusion list but will process all nodes in theclusterp in other words an empty inclusion list is means all the nodes otherwiseonly a given list is processed and exclusion list is always honored
__label__expand in order to forward the @link allocate request for guaranteed containers tothe resource manager and to notify the resource manager about the allocationof opportunistic containers through the distributed scheduler
__label__expand the thread which does the actual work of tailing edits journals andapplying the transactions to the fsns
__label__expand it loads customized policies and syncs with persisted ones in name node image
__label__expand in thisimplementation one application will have just one file in the file systemwhich contains all the history data of one application and its attempts andcontainers @link #application started application start data is supposed tobe invoked first when writing any history data of one application and it willopen a file while @link #application finished application finish data issupposed to be last writing operation and will close the file
__label__expand thisexception is thrown instead of illegal argument exception to differentiate theexception thrown in hadoop implementation from the one thrown in jdk
__label__expand responsible to keep all abfs http headers here
__label__expand executed if the destination store declares its support for the feature
__label__expand it falls back to the @link pseudo delegation token authenticator if the htt pendpoint does not trigger a spnego authentication
__label__expand it knows about the pssibly empty sequence of attempts its io footprintand its runtime
__label__expand lru cache with a configurable maximum cache size and access order
__label__expand cached record
__label__expand p the expected log format is normalized job name num instances submit time start time end time job instance name mem usage core usage
__label__expand this information is built from the dn container reports
__label__expand p taxonomy of the code node statecode that acode nodecode might transition intop
__label__expand consume all outputs and put them in devnull
__label__expand ozone objects supported for acl
__label__expand using a quasi monte carlo q mc method arbitrary integrals can be approximated numerically by q mc methods there are better methods for computing pi we emphasize numerical approximation of arbitrary integrals in this example for computing many digits of pi consider using bbp the implementation is discussed below mapper generate points in a unit squareand then count points insideoutside of the inscribed circle of the square reducer accumulate points insideoutside results from the mappers mapper class for pi estimation generate points in a unit squareand then count points insideoutside of the inscribed circle of the square reducer class for pi estimation accumulate points insideoutside results from the mappers
__label__expand the query is usually a partial record
__label__expand wrapper to hold ozone key validate entry validates the write done in ozone cluster
__label__expand by updating file xattrs withedeks returned from reencryptionp the tasks are submitted by reencryption handlerp it is assumed only updater will be running since updating file xattrsrequires namespace write lock and performance gain from multithreadingis limited class to track reencryption submissions of a single zone it containsall the submitted futures and statistics about how far the futures areprocessed it contains thefile inode stores the initial edek of the file and the new edekafter reencryptionp assumptions are the object initialization happens when dir lock is heldand inode is valid and is encrypted during initializationp namespace changes may happen during reencryption and if inode is changedthe reencryption is skipped
__label__expand with the help of the@link builder users can also make verifications of the custom resourcetypes and its values
__label__expand that execs the codegroupscode shell command to fetch the groupmemberships of a given user
__label__expand the commonimplementation uses hdfs as a backend
__label__expand this program generates a random namespace structure with the followingconstraints the number of subdirectories is a random number in min width max width the maximum depth of each subdirectory is a random numbermax depth max depth files are randomly placed in the empty directories the size of eachfile follows gaussian distribution the generated namespace structure is described by two files in the outputdirectory each line of the first filecontains the full name of a leaf directory each line of the second file containsthe full name of a file and its size separated by a blank
__label__expand the core actions put get and query data in the swift object storeafter authenticating the clientb loggingb logging at debug level displays detail about the actions of thisclient including http requests and responses excluding authenticationdetails
__label__expand test add block op is written and read correctly
__label__expand basic test case that the conf servlet can write configurationto its output in xml and json format
__label__expand caching in a single nodeminicluster
__label__expand instead this just checks that the creation works and that everythingis propagated
__label__expand comparatorcomparesched sched means that sched should get acontainer before sched
__label__expand the correct behavior isbr when a specific port is provided the server must either start on that portor fail by throwing @link javanet bind exceptionbr if the port ephemeral then the server should choosea free port and start on it
__label__expand just an arbitrary number so that the values i write have a predictable
__label__expand this test depends on testproto definition of types in srctestprotoand protobuf service definition from srctesttestrpcserviceproto
__label__expand cases coveredolli recover from failure while saving into the second storage directorylili recover from failure while moving current into lastcheckpointtmplili recover from failure while moving lastcheckpointtmp intopreviouscheckpointlili recover from failure while rolling edits fileliol
__label__expand support for flat files of binary keyvalue pairs
__label__expand we can start several and run with namenodes on the same minicluster
__label__expand the test configs upgrade domain for nodes via admin jsonconfig file and put some nodes to decommission state the test then verifies replicas are placed on the nodes thatsatisfy the upgrade domain policy
__label__expand either linefeed or carriagereturn are used to signal end of line keys arethe position in the file and values are the line of text
__label__expand data to retrieve contains the following brullibconfs to retrieveb used for deciding which configs to returnin response this is represented as a @link timeline filter list objectcontaining @link timeline prefix filter objects these can either beexact config keys or prefixes which are then compared against configkeys to decide configsinside entities to return in response if nullor empty all configurations will be fetched if fields to retrievecontains @link field#configs or @link field#all this should not beconfused with config filters which is used to decide which entities toreturn insteadlilibmetrics to retrieveb used for deciding which metrics to returnin response this is represented as a @link timeline filter list objectcontaining @link timeline prefix filter objects these can either beexact metric ids or prefixes which are then compared against metricids to decide metricsinside entities to return in response if nullor empty all metrics will be fetched if fields to retrieve contains@link field#metrics or @link field#all this should not be confusedwith metric filters which is used to decide which entities to returninsteadlilibfields to retrieveb specifies which fields of the entityobject to retrieve see @link field if null retrieves fieldsnamely entity id entity type and entity created time all fields willbe returned if @link field#all is specifiedlilibmetrics limitb if fields to retrieve contains metricsall ormetrics to retrieve is specified this limit defines an upper limit to thenumber of metrics to return this parameter is ignored if metrics are not tobe fetchedlilibmetrics time startb metric values before this timestamp would notbe retrieved if null or @literal defaults to lilibmetrics time endb metric values after this timestamp would notbe retrieved if null or @literal defaults to @link long#maxvalueliul
__label__expand it looks at the copylisting and groups the contents into inputsplits suchthat the totalnumber of bytes to be copied for each input split isuniform
__label__expand this class filters outputpart files from the given directory it does not accept files with filenames logs and success this class filters log files from directory given it doesnt accept paths having logs
__label__expand p this base implementation uses the natural ordering to define alternateorderings override @link #compare writable comparable writable comparable
__label__expand it is excepted that any of themethods defined in this interface should be nonblocking call and should notinvolve expensive computation as these method could be invoked in rpc
__label__expand similarly the clientside decoding will reuse the netty byte buf as the buffer
__label__expand users can specify plugins which should be created with the sparkexecutorplugins configuration an instance of each plugin will be created for every executor including those created by dynamic allocation before the executor starts running any tasks
__label__expand the rows of the text files must be in the form boolean double for examplefalse true 
__label__expand p there are two main features provided by the implementations of this interfaceph serializationhp if the underlying data store requires serialization data will be serialized to and deserializedusing a @link kv store serializer which can be customized by the application the serializer isbased on jackson so it supports all the jackson annotations for controlling the serialization ofappdefined typespp data is also automatically compressed to save disk spaceph automatic key managementhp when using the builtin key management the implementation will automatically create uniquekeys for each type written to the store keys are based on the type name and always startwith the prefix character so that its easy to use both manual and automatic keymanagement ap is without conflictspp another feature of automatic key management is indexing by annotating fields or methods ofobjects written to the store with @link kv index indices are created to sort the databy the values of those properties this makes it possible to provide sorting without havingto load all instances of those types from the storeppkv store instances are threadsafe for both reads and writesp
__label__expand the actual block data is not contained here it will be passed to the stream callback with i dthat is returned from rpc handlerreceive stream
__label__expand action for a null rule
__label__expand initially derived from add function breakpoint action delegate
__label__expand p cdt adapter logic will link us to a c memory block retrieval extension if and only if the cdi backend support memory spaces when this is the case the platform will call us to add a memory monitor to the memory view we must put up a dialog handle the user input create the memory blocks with default renderings and add them to the view p
__label__expand the test suite will execute all the testcases added to the suite
__label__expand it is modified from the cdt class c parameter list validator
__label__expand theres little different from the gcc toolchain other than the toolchain type and name
__label__expand a compiler would resolve it during instantiation
__label__expand the implementation is based on the default dsf executor which still creates its own thread however this thread blocks when running each executable in the display thread
__label__expand helper class that stores some element paths and nodes using a certain forma
__label__expand that uses a gdbspecific variable vm node
__label__expand there are two virtspecifiers final and override
__label__expand an instance is usually provided by an adapter
__label__expand gdb specific part marker interface for a context on which trace operations can be performed gdb specific part specific trace record context it describes tracing data gdb specific part this is the model data interface that corresponds to i trace record dm context gdb specific part trace events gdb specific part 
__label__expand event indicating that the back end process has started or terminated
__label__expand base interface to the structural item of test hierarchy test suite or test case @note order of values is significant cause enumeration values comparison is necessary
__label__expand catchpoint expressions gdb tracepoint commands class to store an event that needs to be performed by the synchronizer @see mi breakpoints synchronizer class documentation for design comment
__label__expand if no arguments are given it shows a list of the names of all the registers if integer numbers are given as arguments it will print a list of the names of the registers corresponding to the arguments to ensure consistency between a register name and its number the output list may include empty register names
__label__expand class to track stack depth and debug frames for our internal cach
__label__expand threadgroupaddedidi
__label__expand visitors used to filter the element delta change
__label__expand this is equivalent to the java type map string listpdom name
__label__expand p all of these tests use one of source lookupexe that was built from a file that was moved since build time at build time the source lookupcc file was located in the @link #buildpath directory but it is now located in the @link base test case#sourcepath directory p
__label__expand triggers a viewer update when a preference changes
__label__expand all of these tests use one of source lookupexe that was built from a file that was moved since build time at build time the source lookupcc file was located in the @link #buildpath directory but it is now located in the @link base test case#sourcepath directory p
__label__expand these tasks are runwith the abstract @link #execute execute runnable method
__label__expand p covers arrays enums and common types defined in @code javalang @code javalangreflect@code javaio @code javanio @code javamath @code javautil @codejavautilconcurrent @code javautilregex @code comgooglecommonbase @codecomgooglecommoncollect and @code comgooglecommonprimitives in addition if the typeexposes at least one public static final constant of the same type one of the constants will beused or if the class exposes a public parameterless constructor then it will be newd andreturned
__label__expand the gwt supersource for this class contains a field for each type
__label__expand p the false positive probability @code fpp of a bloom filter is defined as the probabilitythat @linkplain #might contain object will erroneously return @code true for an object thathas not actually been put in the @code bloom filterp bloom filters are serializable they also support a more compact serial representation via the@link #write to and @link #read from methods both serialized forms will continue to besupported by future versions of this library however serial forms generated by newer versionsof the code may not be readable by older versions of the code eg a serialized bloom filtergenerated today may inoti be readable by a binary that was compiled months ago
__label__expand having any combination of thefollowing featuresulliautomatic loading of entries into the cachelileastrecentlyused eviction when a maximum size is exceededlitimebased expiration of entries measured since last access or last writelikeys automatically wrapped in @linkplain weak reference weak referenceslivalues automatically wrapped in @linkplain weak reference weak or @linkplain soft reference soft referenceslinotification of evicted or otherwise removed entriesliaccumulation of cache access statisticsulp entries are automatically evicted from the cache when any of @linkplain #maximum sizelongmaximum size @linkplain #maximum weightlong maximum weight @linkplain #expire after writeexpire after write @linkplain #expire after access expire after access @linkplain #weak keysweak keys @linkplain #weak values weak values or @linkplain #soft values soft values arerequested
__label__expand p like any other @code map class object this map may contain entries for primitive typesand a primitive type and its corresponding wrapper type may map to different values
__label__expand p checks proper closing behavior and ensures that io exceptions on closeableclose are notpropagated out from the @link closeables#close method if @code swallow exception is true
__label__expand selecting appropriate tests by matching them against specified features
__label__expand this can be used to easily configure multimap data structure implementations not providedexplicitly in @code comgooglecommoncollect
__label__expand p if the precondition is not met the @code preconditions method throws an unchecked exceptionof a specified type which helps the method in which the exception was thrown communicate thatits caller has made a mistake this allows constructs such aspre@codepublic static double sqrtdouble value if value throw new illegal argument exceptioninput is negative value calculate square rootpre
__label__expand a byte source that reads from a url using @link url#open stream
__label__expand the simplest way to maintain a rate of qps is to keep the timestamp of the last grantedrequest and ensure that qps seconds have elapsed since then for example for a rate of qps tokens per second if we ensure that a request isnt granted earlier than ms afterthe last one then we achieve the intended rate if a request comes and the last request wasgranted only ms ago then we wait for another ms at this rate serving fresh permitsie for an acquire request naturally takes seconds it is important to realize that such a rate limiter has a very superficial memory of the pastit only remembers the last request what if the rate limiter was unused for a long period oftime then a request arrived and was immediately granted this rate limiter would immediatelyforget about that past underutilization this may result in either underutilization oroverflow depending on the real world consequences of not using the expected rate past underutilization could mean that excess resources are available then the rate limitershould speed up for a while to take advantage of these resources this is important when therate is applied to networking limiting bandwidth where past underutilization typicallytranslates to almost empty buffers which can be filled immediately on the other hand past underutilization could mean that the server responsible for handlingthe request has become less ready for future requests ie its caches become stale andrequests become more likely to trigger expensive operations a more extreme case of thisexample is when a server has just booted and it is mostly busy with getting itself up tospeed to deal with such scenarios we add an extra dimension that of past underutilizationmodeled by stored permits variable this variable is zero when there is no underutilizationand it can grow up to max stored permits for sufficiently large underutilization so therequested permits by an invocation acquirepermits are served from stored permits if available fresh permits for any remaining permits this implements the following function where cold interval cold factorstable intervalpre throttling cold interval ← warmup period is the area of the trapezoid between threshold permits and max permits stable warm interval up period → stored permits threshold permits max permitspre before going into the details of this particular function lets keep in mind the basicsolli the state of the rate limiter stored permits is a vertical line in this figureli when the rate limiter is not used this goes right up to max permitsli when the rate limiter is used this goes left down to zero since if we havestored permits we serve from those firstli when unused we go right at a constant rate the rate at which we move to the right ischosen as max permits warmup period this ensures that the time it takes to go from tomax permits is equal to warmup periodli when used the time it takes as explained in the introductory class note is equal tothe integral of our function between x permits and xk permits assuming we want tospend k saved permitsol
__label__expand all elements areassigned a globallyunique id to allow different modules to contribute multibindingsindependently
__label__expand the kind of binding the result of the binding
__label__expand includes api for setting thetab index programmatic focusing and adding focus and blur listeners
__label__expand an code eventcode object specifying the property whose readonlystatus has been changed
__label__expand the bootstrap pagecontains of the full dom of the html document as well as the http headersthat will be included in the corresponding http response
__label__expand the value of thecorresponding property is used as the caption
__label__expand constructors methods inherited from abstract component container these are unnecessarybut mandatory most of them are not supported in this implementation this event is received by the popup visibility listeners when thevisibility of the popup changes you can get the new visibility directlywith @link #is popup visible or get the popup view that produced theevent with @link #get popup view constructors methods inherited from abstract component container these are unnecessarybut mandatory most of them are not supported in this implementation defines a listener that can receive a popup visibility event when thevisibility of the popup changes
__label__expand base class for portlet requests that need access to http servlet portlet request for liferay portlet request for gate in portlet request for web sphere portal
__label__expand listener instances are by default discovered and instantiated using@link service loader this means that all implementations must have azeroargument constructor and the fully qualified name of the implementationclass must be listed on a separate line in a metainfservicescomvaadinserver vaadin service init listener file present inthe jar file containing the implementation class integrations for specific runtime environments such as os gi or spring mightalso provide other ways of discovering listeners
__label__expand in v scroll table we listen to scroll events on horizontal scrolling we alsoupdate table heads scroll position which has its scrollbars hidden onvertical scroll events we will check if we are reaching the end of area wherewe have rows rendered and
__label__expand the contents of a window is set using @link #set content component or byusing the @link # window string component constructorppa window can be positioned on the screen using absolute coordinates pixelsor set to be centered using @link #centerpp the caption is displayed in the window headerpp in vaadin versions prior to window was also used as application levelwindows this function is now covered by the @link ui class event which is fired when the window order position is changed an interface used for listening to window order change events an interface used for listening to window close events add the close listener to a window and@link close listener#window close close event will be called whenever theuser closes the window an interface used for listening to window maximize restore events addthe window mode change listener to a window and@link window mode change listener#window mode changed window mode change eventwill be called whenever the window is maximized @link window mode#maximized or restored @link window mode#normal resize events are fired whenever the clientside fires a resizeeventeg the browser window is resized the frequency may vary acrossbrowsers a @link shortcut listener specifically made to define a keyboardshortcut that closes the window
__label__rational part of this contract class is to allow fs implementations toprovide specific opt outs and limits so that tests can beskip unsupported features eg case sensitivity testsdangerous operations eg trying to delete the root directoryand limit filesize and other numeric variables for scale tests
__label__rational this class is an abstract base class for testing tensorboard and tensor flow and launch commands
__label__rational needs to be stored persistentlyfor an application
__label__rational cluster is balanced if each node is balanced cluster is balanced if each pool in each node is balanced
__label__rational for@see block placement policy with node group
__label__rational utils functions to help block functions
__label__rational this implementation of plan follower is relatively stateless and it cansynchronize schedulers and plans that have arbitrary changes performing setdifferences among existing queues this makes it resilient to frequency ofsynchronization and rm restart issues no catch up is necessary
__label__rational the class contains the fields that can be determined whencoderm containercode finishes and that need to be stored persistently
__label__rational utility for sampling and computing cpu usage
__label__rational p defaultjsse is not truly the the default jsse implementation becausethe gcm cipher is disabled when running on java however the namewas not changed in order to preserve backwards compatibility insteada new mode called defaultjssewithgcm delegates to the default jss eimplementation with no changes to the list of enabled ciphersp
__label__rational this class contains constants for configuration keys and default values used in hdfs
__label__rational manage the active namenode proxy this cannot just be the a single proxy since we couldfailover across a number of name nodes rather than just between an active and a standbyp we lazily get a proxy to one of the configured namenodes and attempt to make the requestagainst it if it doesnt succeed either because the proxy failed to be created or the requestfailed we try the next nn in the list we try this up to the configuration maximum number ofretries before throwing up our hands a working proxy is retained across attempts since weexpect the active name node to switch rarelyp this mechanism is bvery badb for cases where we care about being ifasti it justblindly goes and tries namenodes
__label__rational event watcher will send the tracked payloadevent after a timeout periodunless a confirmation from the original event completion event is arrived
__label__rational to be used in the@link orgapachehadoopfsshellfind find command
__label__rational for settinggetting data elements in an object backed by aprotobuf implementation
__label__rational uses packageprivate methods in abfs configuration which is why it is inthis package
__label__rational used to create channel transfer data and command between java and native
__label__rational this class represents queueuser resource usage info for a given partition
__label__rational class for finalizing reencrypt edek operations
__label__rational these are the things which arent visible to users
__label__rational this is a unit test not an ee integration test because that wouldrequire o auth auth setup always
__label__rational various scenarios to test in how often we flush data while uploading
__label__rational base test class for volume request
__label__rational some of the tests override the base class tests theseare where swift fs does not implement those features orwhen the behavior of swift fs does not match the normalcontract which normally means that directories and equal filesare being treated as equal
__label__rational the frameworks file output committer cleans up any temporaryfiles left behind in abort task we want the test case tofind these files and hence shortcircuit abort task
__label__rational for monitoring health of timeline storage
__label__rational to implement custom events
__label__rational it is excepted that any of themethods defined in this interface should be nonblocking call and should notinvolve expensive computation as these method could be invoked in rpc
__label__rational in this case well able to use a lot of utility methods via provider link in particular it allows to get current project configuration etc see ic property provider interface a standard way to create buttons inseditdel etc and to handle their events see button pressedint several utility methods to create widgets in the uniform manner setup label setup text etc means to handle control messages which are the main communication way for new cdt model pages and tabs
__label__rational used to represent the configuration project workspace and eclipse environment contexts
__label__rational that we exclude because we do not bring in the orgeclipsecdtmanagedbuildui plugin
__label__rational the purpose is to find a path where stdc library is located
__label__rational using this interface allows to easily have different service implementation for different backends
__label__rational it is used to do such things as start and stop tracing
__label__rational in some cases gdb reports exec commands failure after the running event is fired for instance if an invalid breakpoint is set no error is reported but the consequent execcontinue command fails
__label__rational a map of thread id frames cache info that can be cleared based on a context we use this cache for a few reasons br first two commands such as pre stackinfodepth stackinfodepth pre would both be sent to gdb because the command cache sees them as different this cache allows us to know that if we already asked for a stack depth we can potentially reuse the answer br the same concept is applicable for the stacklistframes command with different limits also the stack depth can be deduced from the frames list so we dont need to ask gdb for it again p the second reason is that gdb is unreliable when it comes to returning frames the mi protocol only allows to reply with data or with error when gdb is unwinding sometimes it gets both and while the console cli protocol has no problem with that for mi gdb replies randomly sometimes with data sometimes with error if we cache the valid data it will eliminate the issue with invalid data on subsequent invocations we dont cache errors base class for the i frame dm data object that uses an mi frame object toprovide the data subclasses must provide the mi frame object
__label__rational we dont actually make the console readonly because it is nice for the user to be able to add delimiters such as empty lines within the traces
__label__rational to minimize theeffort required to implement this interface
__label__rational p this superclass allows @code tree multimap to override methods to return navigable set andmap types in nongwt only while gwt code will inherit the sorted map sorted set overrides
__label__rational p this testsullicomparing each object against itself returns truelicomparing each object against null returns falselicomparing each object against an instance of an incompatible class returns falselicomparing each pair of objects within the same equality group returns truelicomparing each pair of objects from different equality groups returns falselithe hash codes of any two equal objects are equalul
__label__rational grouping them into a suite is much faster than running each as a onetestsuite as the persuite setup is expensive
__label__rational we benchmark a callerfinder implementation that might be used in a logging framework
__label__rational comparing to using a traditional @code hash mapimplementation which stores keys and count values as map entries @code object count hash mapminimizes object allocation and reduces memory footprint
__label__rational this implements a bursty rate limiter where stored permits are translated to zero throttling the maximum number of permits that can be saved when the rate limiter is unused is defined interms of time in this sense if a rate limiter is qps and this time is specified as seconds we can save up to permits it is important to realize that such a rate limiter has a very superficial memory of the pastit only remembers the last request what if the rate limiter was unused for a long period oftime then a request arrived and was immediately granted this rate limiter would immediatelyforget about that past underutilization this may result in either underutilization oroverflow depending on the real world consequences of not using the expected rate
__label__rational an enum cannot be implemented by anything so it should not be possible to have a successful valid ji table binding
__label__rational constructors methods inherited from abstract component container these are unnecessarybut mandatory most of them are not supported in this implementation
__label__rational a select all event fired by the grid when it needs all rows in data sourceto be selected or when all rows have been selected and are now deselected
__label__rational delegate used by @link design context to determine whether container datashould be written out for a component
__label__rational event fired when a spacer element is hidden or shown in escalator
__label__rational to detect if the first visible these are used when jumping between pages when pressing home and end changes to manage mouse down and mouse up overridden due table might not survive of visibility change scroll poslost example i tab panel just set contained components invisible and backwhen changing tabs updates first visible row for the case we cannot wait this method has logic which rows needs to be requested from server whenuser scrolls this panel can only contain v scroll table row type of widgets thissimulates very large table keeping spacers which take room ofunrendered rows
__label__usage it provides utilitymethods that can be used by the concrete test case classes
__label__usage placement algorithm output attempt the number of times the requests in this
__label__usage generic implementation of version comparisonp featuresullimixing of codecode dash and codecode dot separatorslilitransition between characters and digits also constitutes a separatorcodealpha gt alpha codeliliunlimited number of version componentsliliversion components in the text can be digits or stringslilistrings are checked for wellknown qualifiers and the qualifier ordering is used for version ordering wellknown qualifiers case insensitive areullicodealphacode or codeacodelilicodebetacode or codebcodelilicodemilestonecode or codemcodelilicoderccode or codecrcodelilicodesnapshotcodelilicodethe empty stringcode or codegacode or codefinalcodelilicodespcodeliul unknown qualifiers are considered after known qualifiers with lexical order always case insensitivelilia dash usually precedes a qualifier and is always less important than something preceded with a dotliulp
__label__usage documentation for optionsphttpsgithubcomfacebookrocksdbblobmasterincluderocksdboptionshp most tuning parameters are based on this urlphttpsgithubcomfacebookrocksdbwiki setup optionsand basic tuning
__label__usage p the factory has several different modes of operationulli open ssl uses the wildlyopenssl library to delegate to thesystem installed open ssl if the wildflyopenssl integration is notproperly setup an exception is thrownlili default attempts to use the open ssl mode if it cannot load thenecessary libraries it falls back to the defaultjsee modelili defaultjsse delegates to the jsse implementation of ssl butit disables the gcm cipher when running on java lili defaultjssewithgcm delegates to the jsse implementation of ssl with no modification to the list of enabled ciphersliulp this should only be modified within the #initialize default factory default indicates ordered preferred open ssl if failed to load then fallback to defaultjsse
__label__usage this class is instantiated by the fs namesystem
__label__usage ifsized based weight is set to true then an application with high demandmay be prioritized ahead of an application with less usage thisis to offset the tendency to favor small apps which could result instarvation for large apps if many small ones enter and leave the queuecontinuously optional default false
__label__usage this client is for testing ionlyi it is in the production@code hadoopaws module to enable integration tests to use thisjust by editing the hadoop configuration used to bring up the client
__label__usage this is done with an inconsistent client
__label__usage all of the public methods are simply accessors for the instance variables wewant to write out in the json files
__label__usage @param keyin the key input type to the mapper@param valuein the value input type to the mapper@param keyout the key output type from the mapper@param valueout the value output type from the mapper
__label__usage in this examplewe use a q mc method to approximate the integral i \ints fx dxwhere s is a unit squarexxx is a dimensional pointand f is a function describing the inscribed circle of the square sfx if xx lt and fx otherwise it is easy to see that pi is equal to i so an approximation of pi is obtained once i is evaluated numerically there are better methods for computing pi we emphasize numerical approximation of arbitrary integrals in this example for computing many digits of pi consider using bbp
__label__usage that can be used to intercept and inspect messages sent from the client tothe resource manager
__label__usage client cannot modified namespace until the safe mode is off
__label__usage the path can be specified settingdfsfederationrouterdriverfspathhdfshostportpathtostore
__label__usage a custom reader can bedefined to be a record reader with the constructor below and is selected withthe option binhadoop streaming inputreader 
__label__usage the synopsis of the command isjava structure generator max depth max depth maximum depth of the directory tree default is min width min width minimum number of subdirectories per directories default is max width max width maximum number of subdirectories per directories default is num of files # of files the total number of files default is avg file size avg file size in blocks average size of blocks default is out dir out dir output directory default is the current directory seed seed random number generator seed default is the current time in memory representation of a directory in memory representation of a file
__label__usage special committer that always requires commit
__label__usage @param t
__label__usage this class filters outputpart files from the given directory it does not accept files with filenames logs and success this can be used to list paths of output directory as follows path file list file utilstat pathsfslist statusout dirnew output files filter this class filters log files from directory given it doesnt accept paths having logs this can be used to list paths of output directory as follows path file list file utilstat pathsfslist statusout dirnew output log filter
__label__usage p this base implementation uses the natural ordering to define alternateorderings override @link #compare writable comparable writable comparablep one may optimize compareintensive operations by overriding@link #comparebyteintintbyteintint static utility methods areprovided to assist in optimized implementations of this method
__label__usage java bean class to be used with the example java sql network word count
__label__usage usage java streaming test example data dir batch duration num batches timeout to run on your local machine using the directory data dir with seconds between each batch anda timeout after insignificant batches call binrunexample mllib java streaming test example data dir as you add text files to data dir the significance test wil continually update everybatch duration seconds until the test becomes significant pvalue or the number ofbatches processed exceeds num batches timeout
__label__usage although its enough for new tabs to implement ic property tab interface only it would be better to extend them from this class
__label__usage in order to avoid duplicating the add memory blocks methodone version for expressions one for memoryspaceaddress we pass in a an opaque parameter and let the logic within add memory blocks differentiate where needed via isinstanceof request object used to get the memory spaces
__label__usage @noextend this class is not intended to be subclassed by clients
__label__usage an inspection of the scenario where user changes project properties and saves it yieldsfollowing sequence of eventsolli initializationulli after eclipse started a project is being opened a new c configuration description cache is createdwith c configuration description cacheic storage element storage c project description parent constructorli any clients needed ic configuration description get c configuration description using constructor c configuration descriptionc configuration data data string build system id ic data proxy container crwhere the c configuration description cache is passed as data the reference to cache is kept in field f cfg cacheli f cfg cache is used to get spec settings c configuration spec settings after that f cfg cache is set to nullulli user enters project propertiessettingsulli another c configuration description settings configuration created using the same constructor setting f cfg cacheto the c configuration description cacheulli user changes settings in the settings configuration c configuration description and saves itulli new c configuration description cache is created from the c configuration description via constructor c configuration description cacheic configuration description base description wherebase description is saved as f base descriptionli c configuration description cacheapply data is used to persist the data at that pointreference f base description gets set to nullulol@see ic configuration description@see c configuration description@see c project description event
__label__usage for example the initializer of a structured binding decomposition dclstructbind codeauto first second decomposedcode the codeinitializer evaluationcode has to be supplied
__label__usage @noextend this class is not intended to be subclassed by clients
__label__usage em this class is not intended for use outside of cdtem @noextend this class is not intended to be subclassed by clients @noinstantiate this class is not intended to be instantiated by clients
__label__usage currently the shell script is only for linux
__label__usage @noextend this interface is not intended to be extended by clients @noinstantiate this class is not intended to be instantiated by clients
__label__usage @noinstantiate this class is not intended to be instantiated by clients string constants for makefile contents and messages private static final string autodep comment autodeps nonnls private static final string message managed make buildermessage nonnls private static final string builderror message error nonnls private static final string depincl comment moduledepincludes nonnls private static final string modincl comment modulemakeincludes nonnls private i tool build tools private boolean build tools used private i managed build info info private set output extensions set maps of macro names string to values list dependency file variables private vector dependency makefiles i paths relative to the top build directory or absolute i managed builder makefile generator m e t h o d s m a k e f i l e s p o p u l a t i o n m e t h o d s m a i n makefile m a k e f i l e m e t h o d s s o u r c e s sourcesmk m a k e f i l e m e t h o d s f r a g m e n t subdirmk m a k e f i l e m e t h o d s m a k e f i l e g e n e r a t i o n c o m m o n m e t h o d s adds a macro addition prefix to a map of macro names to entries entry prefixes look likecsrcs \addprefix root \ r e s o u r c e v i s i t o r m e t h o d s o t h e r m e t h o d s process a string denoting a filepath in a way compatible for gnu make rules handlingwindows drive letters and whitespace appropriatelypp the context these paths appear in is on the right hand side of a rule header iepptarget dep dep depp@param path the string denoting the path to process@throws null pointer exception is path is null@return a suitable make rule compatible path this class walks the delta supplied by the build system to determinewhat resources have been changed the logic is very simple if abuildable resource nonheader has been added or removed the directoriesin which they are located are dirty so the makefile fragments for themhave to be regeneratedp the actual dependencies are recalculated as a result of the build stepitself we are relying on make to do the right things when confrontedwith a dependency on a moved header file that said make will treatthe missing header file in a dependency rule as a target it has to buildunless told otherwise these dummy targets are added to the makefileto avoid a missing target error string constants for makefile contents and messages private static final string autodep comment autodeps nonnls private static final string message managed make buildermessage nonnls private static final string builderror message error nonnls private static final string depincl comment moduledepincludes nonnls private static final string modincl comment modulemakeincludes nonnls private i tool build tools private boolean build tools used private i managed build info info private set output extensions set maps of macro names string to values list dependency file variables private vector dependency makefiles i paths relative to the top build directory or absolute i managed builder makefile generator m e t h o d s m a k e f i l e s p o p u l a t i o n m e t h o d s m a i n makefile m a k e f i l e m e t h o d s s o u r c e s sourcesmk m a k e f i l e m e t h o d s f r a g m e n t subdirmk m a k e f i l e m e t h o d s m a k e f i l e g e n e r a t i o n c o m m o n m e t h o d s adds a macro addition prefix to a map of macro names to entries entry prefixes look likecsrcs \addprefix root \ r e s o u r c e v i s i t o r m e t h o d s o t h e r m e t h o d s process a string denoting a filepath in a way compatible for gnu make rules handlingwindows drive letters and whitespace appropriatelypp the context these paths appear in is on the right hand side of a rule header iepptarget dep dep depp@param path the string denoting the path to process@throws null pointer exception is path is null@return a suitable make rule compatible path this class is used to recursively walk the project and determine whichmodules contribute buildable source files
__label__usage @noextend this class is not intended to be subclassed by clients @noimplement this interface is not intended to be implemented by clients
__label__usage @noreference this interface is not intended to be referenced by clients
__label__usage @noextend this class is not intended to be subclassed by clients @noimplement this interface is not intended to be implemented by clients
__label__usage @noextend this interface is not intended to be extended by clients @noimplement this interface is not intended to be implemented by clients
__label__usage @noextend this interface is not intended to be extended by clients @noimplement this interface is not intended to be implemented by clients
__label__usage @noimplement this interface is not intended to be implemented by clients @noextend this interface is not intended to be extended by clients
__label__usage @noextend this class is not intended to be subclassed by clients @noimplement this interface is not intended to be implemented by clients
__label__usage @noextend this interface is not intended to be extended by clients @noimplement this interface is not intended to be implemented by clients
__label__usage @noextend this interface is not intended to be extended by clients @noimplement this interface is not intended to be implemented by clients
__label__usage @noextend this interface is not intended to be extended by clients @noimplement this interface is not intended to be implemented by clients
__label__usage @noextend this interface is not intended to be extended by clients
__label__usage p clients may implement this interface p
__label__usage @noextend this interface is not intended to be extended by clients @noimplement this interface is not intended to be implemented by clients
__label__usage @noextend this class is not intended to be subclassed by clients
__label__usage @noextend this class is not intended to be subclassed by clients
__label__usage datalistregisternames regno 
__label__usage environmentdirectory r pathdir r will first reset the path to its default
__label__usage subclasses must supply the mi arg object
__label__usage @noextend this class is not intended to be subclassed by clients
__label__usage @noextend this class is not intended to be subclassed by clients @noinstantiate this class is not intended to be instantiated by clients
__label__usage viewers showing error ticks should register as listener to this type
__label__usage instances are immutable instances can be obtained from a @link ruler column registry @noinstantiate this class is not intended to be instantiated by clients
__label__usage the wild card in source lookupexe can be one of the following to cover thedifferent effective types of source lookups that need to be done depending onhow the program was compiled each of these options produces different debuginformation about where to find the source file see the makefile for moreinformationullibacb absolute and canonical path no in path passed to gcclilibanb absolute and non canonical path a in path passed to gcclilibrcb relative and canonical path no in path passed to gcclilibrnb relative and non canonical path a in path passed to gcclilib no suffixb compilation that does not need mapping to be foundul
__label__usage a reading job which will prevent the input stream from filling up we dont actually do anything with the data we read since the trace console should not accept input but instead of making the console readonly we allow the user to type things to allow for comments to be inserted within the traces
__label__usage @noextend this class is not intended to be subclassed by clients
__label__usage preview snippets private void create before ellipsis map working values inner node parent create optionparent working values formatter messages white space optionsvarargparameter default code formatter constantsformatterinsertspacebeforeellipsis varargparameterpreview private void create after ellipsis map working values inner node parent create optionparent working values formatter messages white space optionsvarargparameter default code formatter constantsformatterinsertspaceafterellipsis varargparameterpreview syntax element tree private inner node create return tree map working values inner node parent final inner node root new inner nodeparent working values formatter messages white space optionsreturn create optionroot working values formatter messages white space tab pagebeforeparenthesizedexpressions default code formatter constantsformatterinsertspacebeforeparenthesizedexpressioninreturn returnpreview return root private inner node create throw tree map working values inner node parent final inner node root new inner nodeparent working values formatter messages white space optionsthrow create optionroot working values formatter messages white space tab pagebeforeparenthesizedexpressions default code formatter constantsformatterinsertspacebeforeparenthesizedexpressioninthrow throwpreview return root represents a node in the options tree preview snippets private void create before ellipsis map working values inner node parent create optionparent working values formatter messages white space optionsvarargparameter default code formatter constantsformatterinsertspacebeforeellipsis varargparameterpreview private void create after ellipsis map working values inner node parent create optionparent working values formatter messages white space optionsvarargparameter default code formatter constantsformatterinsertspaceafterellipsis varargparameterpreview syntax element tree private inner node create return tree map working values inner node parent final inner node root new inner nodeparent working values formatter messages white space optionsreturn create optionroot working values formatter messages white space tab pagebeforeparenthesizedexpressions default code formatter constantsformatterinsertspacebeforeparenthesizedexpressioninreturn returnpreview return root private inner node create throw tree map working values inner node parent final inner node root new inner nodeparent working values formatter messages white space optionsthrow create optionroot working values formatter messages white space tab pagebeforeparenthesizedexpressions default code formatter constantsformatterinsertspacebeforeparenthesizedexpressioninthrow throwpreview return root a node representing a group of options in the tree preview snippets private void create before ellipsis map working values inner node parent create optionparent working values formatter messages white space optionsvarargparameter default code formatter constantsformatterinsertspacebeforeellipsis varargparameterpreview private void create after ellipsis map working values inner node parent create optionparent working values formatter messages white space optionsvarargparameter default code formatter constantsformatterinsertspaceafterellipsis varargparameterpreview syntax element tree private inner node create return tree map working values inner node parent final inner node root new inner nodeparent working values formatter messages white space optionsreturn create optionroot working values formatter messages white space tab pagebeforeparenthesizedexpressions default code formatter constantsformatterinsertspacebeforeparenthesizedexpressioninreturn returnpreview return root private inner node create throw tree map working values inner node parent final inner node root new inner nodeparent working values formatter messages white space optionsthrow create optionroot working values formatter messages white space tab pagebeforeparenthesizedexpressions default code formatter constantsformatterinsertspacebeforeparenthesizedexpressioninthrow throwpreview return root a node representing a concrete white space option in the tree
__label__usage run using j unit plugin test configuration launcher
__label__usage @param e the element type of the collection to be tested
__label__usage p in addition to @link #execute subclasses must implement all methods related to shutdown andtermination
__label__usage p to implement a cache the programmer needs only to extend this class and provide animplementation for the @link #get object and @link #get if present methods @link#get unchecked @link #get object callable and @link #get all are implemented in terms of@code get @link #get all present is implemented in terms of @code get if present @link#put all is implemented in terms of @link #put @link #invalidate all iterable is implementedin terms of @link #invalidate the method @link #clean up is a noop all other methods throwan @link unsupported operation exception
__label__usage p all default instances returned by @link #get are genericssafe clients wont get typeerrors for using @code get comparatorclass as a @code comparator foo for example immutable empty instances are returned for collection types @code for string @code fornumber types reasonable default instance for other stateless types for mutable types a freshinstance is created each time @code get is called
__label__usage @param t the type of instances that the @code bloom filter accepts cheat sheet m total bits n expected insertions b mn bits per insertion p expected false positive probability optimal k bln p e knmk for optimal k p k b for optimal k m nlnp ln a strategy to translate t instances to @code num hash functions bit indexesp implementations should be collections of pure functions ie stateless
__label__usage p these features are all optional caches can be created using all or none of them by defaultcache instances created by @code cache builder will not perform any type of evictionp usage examplepre@code loading cache key graph graphs cache buildernew buildermaximum sizeexpire after write durationof minutesremoval listenermylistenerbuildnew cache loader key graph public graph load key key throws any exception return create expensive graphkeyprep or equivalentlypre@code in real life this would come from a commandline flag or config file string spec maximum sizeexpire after writem loading cache key graph graphs cache builderfromspecremoval listenermylistenerbuildnew cache loader key graph public graph load key key throws any exception return create expensive graphkeyprep the returned cache is implemented as a hash table with similar performance characteristics to@link concurrent hash map it implements all optional operations of the @link loading cache and@link cache interfaces the @code as map view and its collection views have iweaklyconsistent iteratorsi this means that they are safe for concurrent use but if other threadsmodify the cache after the iterator is created it is undefined which of these changes if anyare reflected in that iterator these iterators never throw @link concurrent modification exceptionpb noteb by default the returned cache uses equality comparisons the @link object#equals equals method to determine equality for keys or values however if @link#weak keys was specified the cache uses identity @code comparisons instead for keys likewise if @link #weak values or @link #soft values was specified the cache uses identitycomparisons for valuesp entries are automatically evicted from the cache when any of @linkplain #maximum sizelongmaximum size @linkplain #maximum weightlong maximum weight @linkplain #expire after writeexpire after write @linkplain #expire after access expire after access @linkplain #weak keysweak keys @linkplain #weak values weak values or @linkplain #soft values soft values arerequestedp if @linkplain #maximum sizelong maximum size or @linkplain #maximum weightlongmaximum weight is requested entries may be evicted on each cache modificationp if @linkplain #expire after write expire after write or @linkplain #expire after accessexpire after access is requested entries may be evicted on each cache modification on occasionalcache accesses or on calls to @link cache#clean up expired entries may be counted by @link cache#size but will never be visible to read or write operationsp if @linkplain #weak keys weak keys @linkplain #weak values weak values or @linkplain#soft values soft values are requested it is possible for a key or value present in the cache tobe reclaimed by the garbage collector entries with reclaimed keys or values may be removed fromthe cache on each cache modification on occasional cache accesses or on calls to @link cache#clean up such entries may be counted in @link cache#size but will never be visible toread or write operationsp certain cache configurations will result in the accrual of periodic maintenance tasks whichwill be performed during write operations or during occasional read operations in the absence ofwrites the @link cache#clean up method of the returned cache will also perform maintenance butcalling it should not be necessary with a high throughput cache only caches built with@linkplain #removal listener removal listener @linkplain #expire after write expire after write@linkplain #expire after access expire after access @linkplain #weak keys weak keys @linkplain#weak values weak values or @linkplain #soft values soft values perform periodic maintenancep the caches produced by @code cache builder are serializable and the deserialized cachesretain all the configuration properties of the original cache note that the serialized form doesinoti include cache contents but only configuration@param k the most general key type this builder will be able to create caches for this isnormally @code object unless it is constrained by using a method like @code#removal listener@param v the most general value type this builder will be able to create caches for this isnormally @code object unless it is constrained by using a method like @code#removal listener
__label__usage p to map a generic type to an instance of that type use @linkcomgooglecommonreflect type to instance map instead@param b the common supertype that all entries must share often this is simply @link object
__label__usage p the simplest use case isprenew equals testeradd equality groupfootest equalsprep this tests @code fooequalsfoo @code fooequalsnull and a few other operationsp for more extensive testing add multiple equality groups each group should contain objectsthat are equal to each other but unequal to the objects in any other group for exampleprenew equals testeradd equality groupnew userpage new userpageadd equality groupnew usersergeytest equalspre class used to test whether equals correctly handles an instance of an incompatible class since it is a private inner class the invoker can never pass in an instance to the tester
__label__usage @param b the concrete type of this builder the selftype all the builder methods of thisclass such as @link #named return this type so that builder methods of more derivedclasses can be chained onto them without casting@param g the type of the generator to be passed to testers in the generated test suite aninstance of g should somehow provide an instance of the class under test plus any otherinformation required to parameterize the test
__label__usage p example usagepre host and port hp host and portfrom stringdbwith default portrequire brackets for i pvhpget host returns dbhpget port returns hpto string returns dbprep here are some examples of recognized formatsulliexamplecomliexamplecomlililidb @link #get host omits bracketslidb @link #get host omits bracketslidb use @link #require brackets for i pv to prohibit thisulp note that this is not an exhaustive list because these methods are only concerned withbrackets colons and port numbers full validation of the host field if desired is thecallers responsibility
__label__usage serializers should delegate to @link #serialize and @link #instantiate
__label__usage p this can be used to easily configure multimap data structure implementations not providedexplicitly in @code comgooglecommoncollect for examplepre@code list multimap string integer tree list multimap multimap buildertree keysarray list valuesbuild set multimap integer my enum hash enum multimap multimap builderhash keysenum set values my enumclassbuildprep@code multimap builder instances are immutable invoking a configuration method has no effecton the receiving instance you must store and use the new builder instance it returns insteadp the generated multimaps are serializable if the key and value types are serializable unlessstated otherwise in one of the configuration methods@param k an upper bound on the key type of the generated multimap@param v an upper bound on the value type of the generated multimap leaving k and v as upper bounds rather than the actual key and value types allows typeparameters to be left implicit more often cache builder uses the same technique an intermediate stage in a @link multimap builder in which the keyvalue collection mapimplementation has been specified but the value collection implementation has not@param k the upper bound on the key type of the generated multimap@since leaving k and v as upper bounds rather than the actual key and value types allows typeparameters to be left implicit more often cache builder uses the same technique a specialization of @link multimap builder that generates @link list multimap instances
__label__usage p in the absence of element deletions this will iterate over elements in insertion order
__label__usage this allows constructs such aspre@codepublic static double sqrtdouble value if value throw new illegal argument exceptioninput is negative value calculate square rootprepto be replaced with the more compactpre@codepublic static double sqrtdouble value check argumentvalue input is negative s value calculate square rootprepso that a hypothetical bad caller of this method such aspre@codevoid example bad caller double d sqrtprepwould be flagged as having called @code sqrt with an illegal argumenth performancehp avoid passing message arguments that are expensive to compute your code will always computethem even though they usually wont be needed if you have such arguments use the conventionalifthrow idiom insteadp depending on your message arguments memory may be allocated for boxing and varargs arraycreation however the methods of this class have a large number of overloads that prevent suchallocations in many common casesp the message string is not formatted unless the exception will be thrown so the cost of thestring formatting itself should not be a concernp as with any performance concerns you should consider profiling your code in a productionenvironment if possible before spending a lot of effort on tweaking a particular elementh other types of preconditionshp not every type of precondition failure is supported by these methods continue to throwstandard jdk exceptions such as @link javautil no such element exception or @link unsupported operation exception in the situations they are intended forh nonpreconditionshp it is of course possible to use the methods of this class to check for invalid conditionswhich are inot the callers faulti doing so is bnot recommendedb because it ismisleading to future readers of the code and of stack traces see ahrefhttpsgithubcomgoogleguavawiki conditional failures explained conditional failuresexplaineda in the guava user guide for more advice notably @link verify offers assertionssimilar to those in this class for nonprecondition checksh@code javautil objectsrequire non nullhp projects which use @code comgooglecommon should generally avoid the use of @linkjavautil objects#require non null object instead use whichever of @link#check not null object or @link verify#verify not null object is appropriate to the situation the same goes for the messageaccepting overloadsh only @code s is supportedhp@code preconditions uses @link strings#lenient format to format error message templatestrings this only supports the @code s specifier not the full range of @linkjavautil formatter specifiers however note that if the number of arguments does not match thenumber of occurrences of @code s in the format string @code preconditions will stillbehave as expected and will still include all argument values in the error message the messagewill simply not be formatted exactly as intended
__label__usage p all method parameters must be nonnull unless documented otherwise
__label__usage how this works is best explained with an example for a rate limiter that produces token per second every second that goes by with the rate limiter being unused we increase stored permits by say we leave the rate limiter unusedfor seconds ie we expected a request at time x but we are at time x seconds beforea request actually arrives this is also related to the point made in the last paragraph thusstored permits becomes assuming max stored permits at that point a request ofacquire arrives we serve this request out of stored permits and reduce that to howthis is translated to throttling time is discussed later immediately after assume that anacquire request arriving we serve the request partly from stored permits using all theremaining permits and the remaining we serve them by fresh permits produced by therate limiter we already know how much time it takes to serve fresh permits if the rate is token per second then this will take seconds but what does it mean to serve storedpermits as explained above there is no unique answer if we are primarily interested to dealwith underutilization then we want stored permits to be given out faster than fresh onesbecause underutilization free resources for the taking if we are primarily interested todeal with overflow then stored permits could be given out slower than fresh ones thus werequire a different in each case function that translates stored permits to throttling time this role is played by stored permits to wait timedouble stored permits double permits to take theunderlying model is a continuous function mapping stored permits from to max stored permitsonto the rate ie intervals that is effective at the given stored permits stored permitsessentially measure unused time we spend unused time buyingstoring permits rate ispermits time thus rate time permits thus rate time permits timespermits gives time ie integrals on this function which is what stored permits to wait timecomputes correspond to minimum intervals between subsequent requests for the specified numberof requested permits here is an example of stored permits to wait time if stored permits and we want permitswe take them from stored permits reducing them to and compute the throttling for these asa call to stored permits to wait timestored permits permits to take which willevaluate the integral of the function from to using integrals guarantees that the effect of a single acquire is equivalent to acquire acquire acquire or acquire acquire etc since the integralof the function in is equivalent to the sum of the integrals of and so on no matter what the function is this guarantees that we handlecorrectly requests of varying weight permits no matter what the actual function is so wecan tweak the latter freely the only requirement obviously is that we can compute itsintegrals if we pick a function that goes below that horizontal line it means that we reduce the areaof the function thus time thus the rate limiter becomes faster after a period ofunderutilization if on the other hand we pick a function that goes above that horizontalline then it means that the area time is increased thus stored permits are more costly thanfresh permits thus the rate limiter becomes slower after a period of underutilization last but not least consider a rate limiter with rate of permit per second currentlycompletely unused and an expensive acquire request comes it would be nonsensical to justwait for seconds and then start the actual task why wait without doing anything a muchbetter approach is to allow the request right away as if it was an acquire requestinstead and postpone subsequent requests as needed in this version we allow starting thetask immediately and postpone by seconds future requests thus we allow for work to getdone in the meantime instead of waiting idly this has important consequences it means that the rate limiter doesnt remember the time of thelast request but it remembers the expected time of the next request this also enablesus to tell immediately see try acquiretimeout whether a particular timeout is enough to getus to the point of the next scheduling time since we always maintain that and what we mean byan unused rate limiter is also defined by that notion when we observe that theexpected arrival time of the next request is actually in the past then the difference now past is the amount of time that the rate limiter was formally unused and it is that amount oftime which we translate to stored permits we increase stored permits with the amount of permitsthat would have been produced in that idle time so if rate permit per second andarrivals come exactly one second after the previous then stored permits is never increased we would only increase it for arrivals later than the expected one second the time when the next request no matter its size will be granted after granting a requestthis is pushed further in the future large requests push this further than small requests
__label__usage cant be invoked directly
__label__usage p note that task wrapping may occur even if the task is never executed
__label__usage simply extend this class implement @link #configure and call the inheritedmethods which mirror those found in @link binder for exampleprepublic class my module extends abstract module protected void configure bind serviceclassto service implclassin singletonclassbind credit card payment serviceclassbind payment serviceclassto credit card payment serviceclassbind constantannotated with namesnamedporttopre
__label__usage h the guice binding edslh guice uses an iembedded domainspecific languagei or edsl to help you create bindingssimply and readably this approach is great for overall usability but it does come with a smallcost bit is difficult to learn how to use the binding edsl by reading methodleveljavadocsb instead you should consult the series of examples below to save space theseexamples omit the opening @code binder just as you will if your module extends @link abstract moduleprebind service implclasspre this statement does essentially nothing it binds the @code service impl class to itself anddoes not change guices default behavior you may still want to use this if you prefer your@link module class to serve as an explicit imanifesti for the services it provides alsoin rare cases guice may be unable to validate a binding at injector creation time unless it isgiven explicitlyprebind serviceclassto service implclasspre specifies that a request for a @code service instance with no binding annotations should betreated as if it were a request for a @code service impl instance this ioverridesi thefunction of any @link implemented by @ implemented by or @link provided by @ provided byannotations found on @code service since guice will have already moved on to @code service impl before it reaches the point when it starts looking for these annotationsprebind serviceclassto provider service providerclasspre in this example @code service provider must extend or implement @code provider service thisbinding specifies that guice should resolve an unannotated injection request for @code serviceby first resolving an instance of @code service provider in the regular way then calling @link provider#get get on the resulting provider instance to obtain the @code service instancep the @link provider you use here does not have to be a factory that is a provider whichalways icreatesi each instance it provides however this is generally a good practice tofollow you can then use guices concept of @link scope scopes to guide when creation shouldhappen letting guice work for youprebind serviceclassannotated with redclassto service implclasspre like the previous example but only applies to injection requests that use the binding annotation@code @ red if your module also includes bindings for particular ivaluesi of the@code @ red annotation see below then this binding will serve as a catchall for any valuesof @code @ red that have no exact match in the bindingsprebind service implclassin singletonclass or alternativelybind service implclassin scopessingletonpre either of these statements places the @code service impl class into singleton scope guice willcreate only one instance of @code service impl and will reuse it for all injection requests ofthis type note that it is still possible to bind another instance of @code service impl if thesecond binding is qualified by an annotation as in the previous example guice is not overlyconcerned with ipreventingi you from creating multiple instances of your singletons onlywith ienablingi your application to share only one instance if thats all you tell guice youneedpb noteb a scope specified in this way ioverridesi any scope that was specified withan annotation on the @code service impl classp besides @link singleton@link scopes#singleton there are servletspecific scopesavailable in @code comgoogleinjectservlet servlet scopes and your modules can contributetheir own custom scopes for use here as wellprebindnew type literallt payment servicelt credit card to credit card payment serviceclasspre this admittedly odd construct is the way to bind a parameterized type it tells guice how tohonor an injection request for an element of type @code payment service credit card the class@code credit card payment service must implement the @code payment service credit card interface guice cannot currently bind or inject a generic type such as @code sete all type parametersmust be fully specifiedprebind serviceclassto instancenew service impl or alternativelybind serviceclassto instance some legacy registryget servicepre in this example your module itself inot guicei takes responsibility for obtaining a@code service impl instance then asks guice to always use this single instance to fulfill all@code service injection requests when the @link injector is created it will automaticallyperform field and method injection for this instance but any injectable constructor on @code service impl is simply ignored note that using this approach results in eager loading behaviorthat you cant controlprebind constantannotated with server hostclasstoargspre sets up a constant binding constant injections must always be annotated when a constantbindings value is a string it is eligible for conversion to all primitive types to @link enum#value of class string all enums and to @link class#for name class literals conversionsfor other types can be configured using @link #convert to types matcher type converterconvert to typespre@literal @ colorred color red a member variable field red my moduleclassget declared fieldredget annotation colorclassbind serviceclassannotated withredto red serviceclasspre if your binding annotation has parameters you can apply different bindings to different specificvalues of your annotation getting your hands on the right instance of the annotation is a bit ofa pain one approach shown above is to apply a prototype annotation to a field in your moduleclass so that you can read this annotation instance and give it to guiceprebind serviceclassannotated with namesnamedblueto blue serviceclasspre differentiating by names is a common enough use case that we provided a standard annotation@link comgoogleinjectname named @ named because of guices library support binding by nameis quite easier than in the arbitrary binding annotation case we just saw however remember thatthese names will live in a single flat namespace with all the other names used in yourapplicationpre constructort lone ctor get lone ctor from service impl via reflectionbind service implclassto constructorlone ctorpre in this example we directly tell guice which constructor to use in a concrete classimplementation it means that we do not need to place @literal @ inject on any of theconstructors and that guice treats the provided constructor as though it were annotated so it isuseful for cases where you cannot modify existing classes and is a bit simpler than using a@link providerp the above list of examples is far from exhaustive if you can think of how the concepts of oneexample might coexist with the concepts from another you can most likely weave the two together if the two concepts make no sense with each other you most likely wont be able to do it in afew cases guice will let something bogus slip by and will then inform you of the problems atruntime as soon as you try to create your injectorp the other methods of binder such as @link #bind scope @link #bind interceptor @link#install @link #request static injection @link #add error and @link #current stage are notpart of the binding edsl you can learn how to use these in the usual way from the methoddocumentation
__label__usage interface with a default method annotated to be intercepted foo implementation that does not override the default method a base class defining a method with the same signature as foos default method foo implementation that should use superclass method rather than default method
__label__usage click listeners can be addedto the renderer invoked when any of the rendered buttons is clicked
__label__usage @param titem type
__label__usage @param tthe grid bean type usagepregridadd context click listenerevent gt notificationshow grid context click eventlt persongt eventget item clickedpre@param tthe grid bean type header and footer an event that is fired when a columns visibility changes@since header and footer a helper base class for creating extensions for the grid component@param t header and footer class for managing visible details rows@param tthe grid bean type
__label__usage @param tthe grid bean type
__label__usage @param tthe type of the rows in grid
__label__usage precode within the window using helperwindowset close shortcut key codeescape null or globallyget uiadd actionnew window close shortcutwindow key codeescapecodepre
__label__warning some of the environment variables for applications are emfinalemie they cannot be modified by the applications
__label__warning this should only be modified within the #initialize default factory
__label__warning li this should not beconfused with config filters which is used to decide which entities toreturn insteadli li this should not be confusedwith metric filters which is used to decide which entities to returninsteadli this parameter is ignored if metrics are not tobe fetchedlilibmetrics time startb metric values before this timestamp would notbe retrieved if null or @literal defaults to lilibmetrics time endb metric values after this timestamp would notbe retrieved if null or @literal defaults to @link long#maxvalueliul
__label__warning note that the serverside encoding of this messages does not include the buffer itself as thismay be written by netty in a more efficient manner ie zerocopy write similarly the clientside decoding will reuse the netty byte buf as the buffer
__label__warning the specific api exposed to the end users still considered to be very unstable we willhopefully be able to keep compatibility by providing default implementations for any methodsadded but make no guarantees this will always be possible across all spark releases spark does nothing to verify the plugin is doing legitimate things or to manage the resourcesit uses a plugin acquires the same privileges as the user running the task a bad plugincould also interfere with task execution and make the executor fail in unexpected ways
__label__warning that has historically been used from spark and earlier
__label__warning the actual block data is not contained here
__label__warning this class is not intended to be subclassed by clients
__label__warning @noextend this class is not intended to be subclassed by clients@noinstantiate this class is not intended to be instantiated by clients
__label__warning note this class is subject to change and discuss and is currently available in experimental mode only
__label__warning @note code autocode state may be not acceptable for some methods seetheir comments for details
__label__warning @noinstantiate this class is not intended to be instantiated by clients
__label__warning we dont actually do anything withthe data we read since the trace console should notaccept input but instead of making the console readonly we allowthe user to type things to allow for comments to beinserted within the traces
__label__warning clients wont get typeerrors for using @code get comparatorclass as a @code comparator foo
__label__warning pb noteb by default the returned cache uses equality comparisons the @link object#equals equals method to determine equality for keys or values however if @link#weak keys was specified the cache uses identity @code comparisons instead for keys likewise if @link #weak values or @link #soft values was specified the cache uses identitycomparisons for values note that the serialized form doesinoti include cache contents but only configuration
__label__warning since it is a private inner class the invoker can never pass in an instance to the tester
__label__warning note that this is not an exhaustive list because these methods are only concerned withbrackets colons and port numbers full validation of the host field if desired is thecallers responsibility
__label__warning cant be invoked directlyplease see @link comgooglecommoncollecttesting map test suite builder
__label__warning invoking a configuration method has no effecton the receiving instance you must store and use the new builder instance it returns instead
__label__warning avoid passing message arguments that are expensive to compute your code will always computethem even though they usually wont be needed if you have such arguments use the conventionalifthrow idiom instead not every type of precondition failure is supported by these methods continue to throwstandard jdk exceptions such as @link javautil no such element exception or @link unsupported operation exception in the situations they are intended for projects which use @code comgooglecommon should generally avoid the use of @linkjavautil objects#require non null object
__label__warning note that even though thesemethods use @link url parameters they are usually not appropriate for http or othernonclasspath resources
__label__warning note well that if for this function we chose a horizontal line at height of exactly qpsthen the effect of the function is nonexistent we serve stored permits at exactly the samecost as fresh ones qps is the cost for each we use this trick later
__label__warning p note that task wrapping may occur even if the task is never executed
__label__warning legacy property helper has been removed in vaadin events
__label__warning behavior when parsing nested properties which may containcodenullcode values in the property chain
__label__warning pbnot meant to be usedb for multiple java script dependencies@link java script @ java script should be used instead
__label__warning used to deliver customized contentpackages to the popup view these aredynamically loaded when they are redrawn the user must take care thatneither of these methods ever return null
__label__warning this will be changed once framework support for something more flexible hasbeen implemented one instance of this class can and should be reused for all theproperties in an item since this class will inform that the entire rowneeds to be reevaluated in contrast to a propertybased changemanagementp since theres no containerwide possibility to listen to any kind ofvalue changes an instance of this class needs to be attached to each andevery items property in the container
__label__warning for internal use only may be removed or replaced in the future
__label__warning consider i edoes not support css height for textareas in strict mode 
__label__warning note we are not using gwt form panel as we want to listen submitcompleteevents even though the upload component is already detached
__label__summary preference block that encapsulates the controls usedfor displayingediting cdt file type associations
__label__summary assoc exists but is marked to be removed
__label__summary add rest csrf prevention filter
__label__summary add webhdfs packages
__label__summary assume same ssl port for all datanodes
__label__summary select configs beginning with dfswebauthentication
__label__summary joins the httpserver
__label__summary merge sorted halves now in src into dest
__label__summary returns startup progress associated with servlet context
__label__summary sets startup progress of namenode for use by servlets
__label__summary sets address of namenode for use by servlets
__label__summary sets fsimage for use by servlets
__label__summary for information related to the different configuration options and http policy is decided
__label__summary keeps track of the actions added to this component and manages thepainting and handling as well
__label__summary creates a new empty panel
__label__summary creates a new empty panel which contains the given content
__label__summary creates a new empty panel with caption
__label__summary creates a new empty panel with the given caption and content
__label__summary sets the caption of the panel
__label__summary note that the caption is interpreted as html and therefore care should betaken not to enable html injection and xss attacks using panel captions this behavior may change in future versions
__label__summary called when one or more variables handled by the implementing class arechanged
__label__summary get new size
__label__summary scrolling
__label__summary set internally not to fire request repaint
__label__summary set internally not to fire request repaint
__label__summary actions
__label__summary p the request sent by code application mastercode to thecode node managercode to change the resource quota of a containerp
__label__summary builder utilities to construct various objects
__label__summary non javadoc method declared on i selection changed listener
__label__summary rpc layer client expects ipport as service for tokens
__label__summary class that sends udp packets to stats d daemon
__label__summary collect datapoints
__label__summary get stats d host configurations
__label__summary the contents of the parent of the table is a list of configurations
__label__summary the content is an array of configurations
__label__summary non javadoc method declared on i action
__label__summary tests @link file context#delete on exit path functionality
__label__summary create delete on exit entries
__label__summary ensure shutdown hook is added
__label__summary trigger delete on exit and ensure the registered paths are cleaned up
__label__summary executes this actions with the given selection this default implementationdoes nothing
__label__summary event indicating that the timers view layout has changed
__label__summary enumeration of possible layouts for the timers view model
__label__summary add ourselves as listener for dm events events
__label__summary have we registered ourselves as a listener for dm events
__label__summary catch rejected execution exception e 
__label__summary set the initial view layout
__label__summary session shut down not much we can do but wait to be disposed
__label__summary associate the launch@param sub launch
__label__summary remove ourselves as listener for dm events events in practice we get called after the session has shut down so well end up with a rejected execution exception we put this here all the same for completeness sake
__label__summary session shut down not much we can do but wait to be disposed
__label__summary configures a new layout for the timers view model
__label__summary add a handler for the triggers and timers changed events the abstract dmvm provider superclass automatically registers this provider for all idm event events however these two events do not implement idm event
__label__summary notifies this action that the given selection has changed this defaultimplementation sets the actions enablement state to codefalsecode@param selection the new selection
__label__summary executes this actions with the given text selection this default implementationcalls coderuni selection selectioncode
__label__summary only set up ui if there are any positions set
__label__summary does the setup of the linked mode from a @link linked proposal model
__label__summary executes this actions with the given structured selection this default implementationcalls coderuni selection selectioncode
__label__summary get preemption candidates from computed resource sharing and alreadyselected candidates
__label__summary returns an array of inclusion paths affecting thesource folder when looking for files recursively
__label__summary returns a char based representation of the exclusions patterns full path
__label__summary describes a category extension to the completion proposal computer extension point
__label__summary the extension schema name of the icon attribute
__label__summary the image descriptor for this category or @code null if none specified
__label__summary checks that the given attribute value is not @code null
__label__summary returns the error message from the computers in this category
__label__summary notifies the computers in this category of a proposal computation session start
__label__summary notifies the computers in this category of a proposal computation session end
__label__summary returns the enablement state of the category
__label__summary sets the separate command state of the category
__label__summary returns the image descriptor of the described category
__label__summary returns the name of the described extensionwithout mnemonic hint in order to be displayedin a message
__label__summary returns the name of the described extension
__label__summary returns the identifier of the described extension
__label__summary gets the remote suffixed log dir for the user
__label__summary gets the remote log user dir
__label__summary returns the suffix component of the log dir
__label__summary converts a node id to a form used in the app log file name
__label__summary gets the remote app log dir
__label__summary constructs the full filename for an applications log file per node
__label__summary preference strings
__label__summary initialize resource bundle
__label__summary redirects lines read from a given input stream to a jul logger at info level
__label__summary barset heightpx
__label__summary notifies this action that the given text selection has changed this defaultimplementation calls codeselection changedi selection selectioncode
__label__summary extends to i modules interface to supporting loading symbols
__label__summary event indicating a change in the symbols of certain modules of the symbol context
__label__summary indicates symbols were loaded for some modules
__label__summary indicates symbols were unloaded for some modules
__label__summary load symbols for all modules of the specified symbol context
__label__summary load symbols for the specified module
__label__summary notifies this action that the given structured selection has changed this defaultimplementation calls codeselection changedi selection selectioncode
__label__summary updates the actions enablement state according to the given selection thisdefault implementation calls one of the codeselection changedcodemethods depending on the type of the passed selection
__label__summary this class represents the set of build macros that could be loadedand stored in xml
__label__summary sets the storable macros to hold the geven number of macrosall macros that are present in the store but not included in the given arraywill be removed
__label__summary returns the selection provider managed by the site owning this action
__label__summary sets the change state for this set of macros
__label__summary sets the dirty state for this set of macros
__label__summary returns the shell provided by the site owning this action
__label__summary returns the selection provided by the site owning this action
__label__summary this dialog is used to addedit userdefined register groups
__label__summary override default behavior by querying all sublaunches to see if they are terminated@see orgeclipsedebugcore launch#is terminated
__label__summary returns the site owning this action
__label__summary creates a new action with no text and no imagep configure the action later using the set methodsp
__label__summary action that dispatches the codei action#runcode and thecodei selection changed listener#selection changedcodeaccording to the type of the selection
__label__summary the page that shows the outline
__label__summary pairs of brackets used to match
__label__summary matches the brackets
__label__summary the action group for folding
__label__summary reconciling listeners
__label__summary ensure decoration support has been created and configured
__label__summary returns whether the editor is active
__label__summary returns the findreplace document adapter
__label__summary selected region begins one index after offset
__label__summary add makefile editor relevant pages
__label__summary enhance the stock source viewer decorator with a bracket matcher
__label__summary either freshly enabled or provider changed
__label__summary resets the foldings structure according to the foldingpreferences
__label__summary returns the folding action group or codenullcode if there is none
__label__summary notify listeners
__label__summary test manually requesting that the data node send a block report
__label__summary create a fake block deletion notification on the data node this will be sent with the next incremental block report
__label__summary testing class reference with prefix
__label__summary enums may not be desired but valid
__label__summary makefile storage document provider
__label__summary is terminated
__label__summary manually trigger a block report
__label__summary a java script function from the a hrefhttpsgithubcomestreeestreeblobmasterspecmd#functionses tree specificationa
__label__summary a class that defines default implementation for a color picker connector connects the server side @link comvaadinui color picker with the clientside counterpart @link v color picker@since 
__label__summary trigger block report returns before the block report is actually sent wait for it to be sent here
__label__summary clean up the config map
__label__summary clean up the config settings
__label__summary clean up the scanner info data
__label__summary returns the active c project associated with the specified resourceor @code null if no c project yet exists for the resource
__label__summary finds the given project in the list of the c models children returns @code null if not found
__label__summary c model doesnt exist cannot find any project
__label__summary configures and runs the @link multi operation
__label__summary checkpoint roots will return the hashcode of their resource
__label__summary workaround for bug circular errors not reported returns the list of c projects before resource delta processing has started
__label__summary testcases for nongnu language extensions
__label__summary dao which wraps partition queue capacities info applicable for a queue
__label__summary prerequisites of this special target shall not be removed if make recieves anasynchronous events
__label__summary request reevaluation of property orgeclipsecdtdebuguiis reverse debugging enabled to update visibility of reverse stepping commands
__label__summary refresh reverse toggle commands with the new state of reverse enabled this is in order to keep multiple toggle actions in ui in sync
__label__summary disable tracing
__label__summary and finally update the radio current state
__label__summary execute the event
__label__summary store the parameter in the gdb command handler class
__label__summary undefined trace method
__label__summary must use the stored context service if we try to fetch the service again with the workbench window it may fail if the window is already closed
__label__summary this constructor might be called after the launch so we must refresh here too this can happen if we activate the action set after the launch
__label__summary command handler to toggle reverse debugging mode
__label__summary modified internal test class that is designed to read all the files in theinput directory and find the median length of all the words
__label__summary modified internal test class that is designed to read all the files in theinput directory and find the mean length of all the words
__label__summary outputs must match
__label__summary outputs must match
__label__summary outputs must match
__label__summary the directory is now empty so delete it
__label__summary a java script variable declaration from thea hrefhttpsgithubcomestreeestreeblobmasterspecmd#variabledeclarationes tree specificationa
__label__summary create and initialize an operations instance authenticated with writeaccess via an codeidpasswordcode pair
__label__summary create and initialize an secure kerberosauthenticated instance
__label__summary the user identity will be inferred from the current user
__label__summary the authentication of this instance will expire when any kerberostokens needed to authenticate with the registry infrastructure expire
__label__summary create and initialize an anonymous readwrite registry operations instance in a secure cluster this instance will only have read access to theregistry
__label__summary create and initialize a registry operations instance access rights will be determined from the configuration
__label__summary create and initialize a registry operations instance access writes will be determined from the configuration
__label__summary io codecs used for compression
__label__summary for implementation reuse in the absence of multiple inheritance
__label__summary a simplified version of @link forwarding checked future where subclasses can pass in an alreadyconstructed @link checked future as the delegate
__label__summary p most subclasses can simply extend @link simple forwarding checked future
__label__summary setup the configuration settings of the server
__label__summary csrf has not been sent
__label__summary objects to verify interactions based on request
__label__summary object under test
__label__summary setup the configuration settings of the server
__label__summary csrf has not been sent
__label__summary objects to verify interactions based on request
__label__summary object under test
__label__summary setup the configuration settings of the server
__label__summary csrf has not been sent
__label__summary objects to verify interactions based on request
__label__summary object under test
__label__summary setup the configuration settings of the server
__label__summary csrf has been sent
__label__summary objects to verify interactions based on request
__label__summary object under test
__label__summary maintains a list of extensions implementing the orgeclipsecdtuicall hierarchy providersextension point
__label__summary filesystem disk space usage statistics uses the unix du program
__label__summary this should go to test fs shelljava when it is added
__label__summary a random suffix per task
__label__summary write to temp file initially to permit parallel execution
__label__summary rename to final location
__label__summary generate a random position
__label__summary seek file to that position
__label__summary check that byte matches
__label__summary advance random state to that position
__label__summary parse command line
__label__summary test upperlower case
__label__summary test explicit default port
__label__summary different ur is should result in different fs instances
__label__summary check basic equality
__label__summary check insensitive equality
__label__summary check behaviour with collections
__label__summary multiple invocations of file systemget return the same object
__label__summary multiple invocations of file systemnew instance return different objects
__label__summary a class is valid
__label__summary testing member reference completion kind with a prefix after a 
__label__summary add a footer click listener
__label__summary provide fully qualified command line string for tool invocation
__label__summary give command line pattern
__label__summary provide tool name
__label__summary give command flags
__label__summary provide list of resources used by tool for transformation
__label__summary return output file name
__label__summary give command flag to generate output
__label__summary return output prefix
__label__summary gdb debugger output listener
__label__summary last thread id created
__label__summary unit test for iterator tester
__label__summary no serialization is used in this test
__label__summary choose steps to get sequence next next next remove
__label__summary we should throw here but we wont
__label__summary we should throw here but we wont
__label__summary iterator tester doesnt expect exceptions for has next
__label__summary constructor
__label__summary default depth
__label__summary common check for each tree item corresponding objects are not null tree item nesting is no too deep
__label__summary data not used now
__label__summary resource description
__label__summary configuration description
__label__summary adds conents of array to tree
__label__summary used for languages kinds display
__label__summary almost the same as ic build setting
__label__summary almost the same as c build data
__label__summary an implementation of @link contiguous set that contains one or more elements
__label__summary allow ungenerified comparable types
__label__summary range would reject our attempt to create x x
__label__summary not used by gwt emulation
__label__summary navigable set
__label__summary copied to make sure not to use the gwtemulated version
__label__summary serialization
__label__summary serialization
__label__summary utility class for setting up bookkeeper ensemblesand bringing individual bookies up and down
__label__summary next port for additionally created bookies
__label__summary go away quietly
__label__summary skip readonly znode which is used for keeping ro bookie details
__label__summary check that a number of bookies are available
__label__summary produces debug hover for the pda debugger
__label__summary analyze current settings
__label__summary first stage of creating the project but no progress displayed identical tocalling create i projectname location new null progress monitor
__label__summary first stage of creating the project only used internally
__label__summary get the file content types supported by this project
__label__summary get the file extension specifications for each content type
__label__summary get the languages supported by each content type
__label__summary return the last project created by the call to get project
__label__summary get the project natures provided by this project
__label__summary create and return the project specified by the wizard identical to callingget projectdefaults true
__label__summary create and return the project specified by the wizard
__label__summary can be used to pass a configuration element to update the perspective basedon the current settings in the workbench perspectives preference page via
__label__summary event describing a change in sorting of a @link container fired by
__label__summary creates a new sort order change event with a sort order list
__label__summary gets the sort order list
__label__summary returns whether this event originated from actions done by the user
__label__summary listener for sort order change events
__label__summary called when the sort order has changed
__label__summary the interface for adding and removing listeners for @link sort event sort events
__label__summary adds a sort order change listener that gets notified when the sortorder changes
__label__summary removes a sort order change listener previously added using
__label__summary shared state for the table component
__label__summary filters package declarations
__label__summary abstract base for all different rename processors used by the top processor
__label__summary the options presented by the page in the refactoring wizard
__label__summary the options each of which forces the preview when selected
__label__summary sets the options that enable exhaustive file search
__label__summary builds an indexbased file filter for the name search
__label__summary perform text search
__label__summary returns the array of bindings that must be renamed
__label__summary returns the modifications associated with the refactoring
__label__summary updates the label parameters for this column based on the providedproperties the label information is written to the givne labelupdate under the given column index
__label__summary inserts an attribute in front of all the other existing attributes
__label__summary returns the list of configured label attributes for this column
__label__summary returns the list of configured label attributes for this column
__label__summary returns the property names that need to be retrieved in orderto generate the label for this column
__label__summary creates the column info object with given array of attributes
__label__summary array of label attribute objects
__label__summary calculated list of property names that need to be retrieved togenerate the label for this column
__label__summary tests covering basic functionality of the acl objects
__label__summary named user
__label__summary named group
__label__summary default other
__label__summary owner
__label__summary default named group
__label__summary other
__label__summary default named user
__label__summary mask
__label__summary default mask
__label__summary group
__label__summary default group
__label__summary default owner
__label__summary a generic j unit test which tests @code poll operations on a queue cant be invoked directly please see
__label__summary too many unchecked generic array creations
__label__summary this suite is for tests to be run with gdb 
__label__summary we need specific name for the tests of this suite because of bug httpsbugseclipseorg
__label__summary add your test class here
__label__summary dummy component to cause @link label state to be used to test #
__label__summary a common navigator action provider providing the contributionsfrom the open editor action group
__label__summary create a portlet service session for the given portlet service
__label__summary returns the underlying portlet session
__label__summary returns the jsr portlet configuration that provides access to theportlet context and init parameters
__label__summary adds a listener for various types of portlet requests
__label__summary removes a portlet request listener registered with
__label__summary for internal use by the framework only api subject to change
__label__summary for internal use by the framework only api subject to change
__label__summary this action request is only to send queued portlet events
__label__summary cleanup
__label__summary this action request is only to set shared render parameters
__label__summary cleanup
__label__summary normal action request notify listeners
__label__summary for internal use by the framework only api subject to change
__label__summary priority of the shared cache manager shutdown hook
__label__summary for testing purposes only
__label__summary configures the parser to accept pop c
__label__summary a string field editor with an enablement check box
__label__summary create and hide label from base class
__label__summary returns this field editors current boolean value
__label__summary the sourcetarget dir are not snapshottable dir
__label__summary make sure the source path has been updated to the snapshot path
__label__summary reset source path in options
__label__summary the sourcetarget does not have the given snapshots
__label__summary reset source path in options
__label__summary reset source paths in options
__label__summary changes have been made in target
__label__summary make sure the source path has been updated to the snapshot path
__label__summary reset source paths in options
__label__summary enumeration of base languages supported by cdt
__label__summary snapshot related exception
__label__summary restart the detained so the corrupt replica will be detected
__label__summary wait for one minute for deletion to succeed
__label__summary each datanode has multiple data dirs check each
__label__summary run directory scanner to update the dns volume map
__label__summary wait for seconds so that all block reports are processed
__label__summary wait for seconds so that all block reports are processed
__label__summary wait for seconds so that all block reports are processed
__label__summary wait for seconds so that all block reports are processed
__label__summary editor provides its own implementation of these actions
__label__summary method declared in action group
__label__summary method declared in action group
__label__summary method declared in action group
__label__summary the state of the editor owning this action group has changed this method does nothing if the groups owner isnt aneditor
__label__summary override default behavior by querying all sublaunches if they can be terminated@see orgeclipsedebugcore launch#can terminate
__label__summary override default behavior by terminating all sublaunches@see orgeclipsedebugcore launch#terminate
__label__summary handle terminated sublaunch@param launch
__label__summary terminate ourselves if this is the last sub launch
__label__summary creates a new code generate action groupcode the grouprequires that the selection provided by the parts selection provideris of type codeorgeclipsejfaceviewersi structured selectioncode@param part the view part that owns this action group
__label__summary creates a new code generate action groupcode the group requiresthat the selection provided by the given selection provider is of type@link i structured selection
__label__summary creates a new code generate action groupcode the grouprequires that the selection provided by the pages selection provideris of type codeorgeclipsejfaceviewersi structured selectioncode
__label__summary non javadoc@see orgeclipsedebugcore launch#launch changedorgeclipsedebugcorei launch
__label__summary action group that adds the source and generate actions to a parts contextmenu and installs handlers for the corresponding global menu actionsp this class may be instantiated it is not intended to be subclassedp@noextend this class is not intended to be subclassed by clients@since 
__label__summary popup menu id of the source sub menu value codeorgeclipsecdtuisourcemenucode
__label__summary non javadoc@see orgeclipsedebugcore launch#launch removedorgeclipsedebugcorei launch
__label__summary popup menu id of the organize group of the source sub menu valuecodeorganize groupcode
__label__summary popup menu id of the generate group of the source sub menu valuecodegenerate groupcode
__label__summary popup menu id of the code group of the source sub menu valuecodecode groupcode
__label__summary popup menu id of the externalize group of the source sub menu valuecodeexternalize groupcode
__label__summary popup menu id of the comment group of the source sub menu valuecodecomment groupcode
__label__summary popup menu id of the edit group of the source sub menu valuecodeedit groupcode
__label__summary note this constructor is for internal use only clients should not call this constructor
__label__summary non javadoc@see orgeclipsedebugcorei launches listener#launches terminatedorgeclipsedebugcorei launch
__label__summary non javadoc@see orgeclipsedebugcorei launches listener#launches addedorgeclipsedebugcorei launch
__label__summary header data for each packet that goes through the readwrite pipelines includes all of the information about the packet excluding checksums andactual data this data includes the offset in bytes into the hdfs block of the data in this packet the sequence number of this packet in the pipeline whether or not this is the last packet in the pipeline the length of the data in this packet whether or not this packet should be synced by the d ns
__label__summary non javadoc@see orgeclipsedebugcorei launches listener#launches changedorgeclipsedebugcorei launch
__label__summary write the header into the buffer this requires that pktheaderlen bytes are available
__label__summary perform a sanity check on the packet returning true if it is sane
__label__summary non javadoc@see orgeclipsedebugcorei launches listener#launches removedorgeclipsedebugcorei launch
__label__summary ensure no memory changed event event was received
__label__summary get the whole block
__label__summary non javadoc@see orgeclipsedebugcoremodel launch configuration delegate#get launchorgeclipsedebugcorei launch configuration javalang string
__label__summary get a block that involves multiple cached blocks
__label__summary get a block that will require reads for the gaps between blocks and 
__label__summary get a block that ends beyond an existing block
__label__summary get a block that is contiguous to the end of an existing block
__label__summary get a third block between the first 
__label__summary get a second block
__label__summary get a first block
__label__summary clear the cache
__label__summary setup call parameters
__label__summary memory cache read get a bunch of blocks to exercise the memory cache 
__label__summary non javadoc@see orgeclipsedebugcoremodeli launch configuration delegate#launchorgeclipsedebugcorei launch configuration javalang string orgeclipsedebugcorei launch orgeclipsecoreruntimei progress monitor
__label__summary run to the point where the variable is initialized
__label__summary verify that all bytes are correctly set
__label__summary wait for all the queries to finish
__label__summary verify asynchronously that all bytes are set send many read queries
__label__summary expect blocksize memory changed events
__label__summary wait for all the queries to finish
__label__summary write asynchronously
__label__summary wait for all the queries to finish
__label__summary send many read queries
__label__summary verify asynchronously that all bytes are 
__label__summary replace the processes of the changed launch
__label__summary setup call parameters
__label__summary run to the point where the array is zeroed
__label__summary asynchronous read write test the asynchronous readingwriting of individual bytes varying offset 
__label__summary this is the memory service test suite it is meant to be a regression suite to be executed automatically againstthe dsf nightly builds it is also meant to be augmented with a proper test cases every time afeature is added or in the event unlikely that a bug is found in the memory service refer to the j unit documentation for an explanation of the annotations
__label__summary add new processes
__label__summary enum of address types as integers
__label__summary hostname fqdn and port pair @value
__label__summary any other address @value
__label__summary avoid notifications when processes have not changed
__label__summary uri entries @value
__label__summary path codeabccode style @value the entire path is encoded in a single entry
__label__summary remove old processes
__label__summary for styling
__label__summary addremove processes
__label__summary remove the processes we got from the sublaunches from this launch
__label__summary converts given split position string in pixels or percentage to afloating point pixel value
__label__summary converts given split position string in pixels or percentage to a floatpercentage value
__label__summary returns the given position clamped to the range between current minimumand maximum positions
__label__summary converts given string to the same units as the split position is
__label__summary position is in percentage pos in pixels
__label__summary position is in pixels and pos in percentage
__label__summary convert percentage values to pixels
__label__summary reposition splitter in case it is out of box
__label__summary move splitter within bounds but dont remember the new value
__label__summary move splitter within bounds but dont remember the new value
__label__summary reposition splitter in case it is out of box
__label__summary find launch if not found skip
__label__summary full outer join
__label__summary emit everything from the collector
__label__summary this is a test suite the test cases created to test template engine areadded to testsuite the test suite will execute all the testcases added to the suite
__label__summary determine mode for each launch
__label__summary launch child here
__label__summary c project wizard that creates a new project resource ina location of the users choice
__label__summary method is valid location@param project field contents@return i status
__label__summary gets the project location path from the main page overwrite this method if you do not have a main page
__label__summary skip over it
__label__summary gets the project handle from the main page overwrite this method if you do not have a main page
__label__summary returns the c project handle corresponding to the project defined inin the main page@returns the c project
__label__summary stores the configuration element for the wizard the config element will be usedin codeperform finishcode to set the result perspective@see i executable extension#set initialization data
__label__summary reimplemented method from superclass
__label__summary non javadoc method declared on i workbench wizard
__label__summary ugly need to make the wizard page run in a non ui thread so that this can go away
__label__summary utility method call a runnable in a workbench modify delegating operation
__label__summary creates a new project resource with the selected namep in normal usage this method is invoked after the user has pressed finish onthe wizard the enablement of the finish button implies that all controlson the pages currently contain valid valuespp note that this wizard caches the new project once it has been successfullycreated subsequent invocations of this method will answer the sameproject resource without attempting to create it againp
__label__summary get a project handle
__label__summary get a project descriptor
__label__summary method get id@return string
__label__summary the app injection is optional
__label__summary the embedded ui serves two pages atbrhttplocalhostmy andbrhttplocalhostmyanything you want
__label__summary this is an app api
__label__summary this class implements the gwt serialization of @link sparse immutable table@author chris povirk
__label__summary posix the application shall ensure that this special target is specified withoutprerequisites or commands
__label__summary utility code to do optimized bytearray comparison
__label__summary lexicographically compare two byte arrays
__label__summary provides a lexicographical comparer implementation either a javaimplementation or a faster implementation based on
__label__summary returns the unsafeusing comparer or falls back to the pure javaimplementation if unable to do so
__label__summary short circuit equal case
__label__summary bring writable comparator code local
__label__summary returns true if x is less than x when both values are treated asunsigned
__label__summary lexicographically compare two arrays
__label__summary short circuit equal case
__label__summary compare bytes at a time benchmarking shows comparing bytes at atime is no slower than comparing bytes at a time even on bit on the other hand it is substantially faster on bit
__label__summary use binary search
__label__summary the epilogue to cover the last min length elements
__label__summary permission parameter use a short to represent a fs permission
__label__summary non javadoc@see orgeclipsedebugcoremodel launch configuration delegate#build projectsorgeclipsecoreresourcesi project orgeclipsecoreruntimei progress monitor
__label__summary parameter name
__label__summary default parameter value
__label__summary constructor
__label__summary constructor
__label__summary no cleanup will leak but shouldnt matter for tests
__label__summary non javadoc@see orgeclipsedebugcoremodel launch configuration delegate#build for launchorgeclipsedebugcorei launch configuration javalang string orgeclipsecoreruntimei progress monitor
__label__summary an abstract counter class to provide common implementation ofthe counter interface in both mapred and mapreduce packages
__label__summary verify that setting adding subtracting capacity works
__label__summary setup a context conf
__label__summary create a queue
__label__summary initialize resource bundle
__label__summary a qtspecific specialization of the generic pdom visitor this class providesan empty implementation of @link #leaveipdom node but required implementations toprovide @link #visitipdom node the class also provides a few commonly requiredimplementations
__label__summary collects all nodes that match the given type this could be used for example to getall qt pdomq objects from the index
__label__summary a simple interface that is used to select nodes from the index based on specificcriteria
__label__summary a filter that selects nodes based on their name
__label__summary a utility class that searches the index for all nodes that match the given filter
__label__summary convenience method to create a checkbox preference the widget is registered asa potential focus holder and the default updater is added
__label__summary convenience method to create a combo preference the widget is registered asa potential focus holder and the default updater is added
__label__summary convenience method to create a number preference the widget is registered asa potential focus holder and the default updater is added
__label__summary convenience method to create a group
__label__summary convenience method to create a label
__label__summary convenience method to create a label
__label__summary convenience method to create a grid data
__label__summary create a grid layout with the default margin and spacing settings aswell as the specified number of columns
__label__summary set the status field on the dialog this can be used by tab pages to reportinconsistent input the ok button is disabled if the kind is i statuserror
__label__summary update the preview
__label__summary test if a launch configuration is a valid reference@param config configuration reference@return codetruecode if it is a valid reference codefalsecode if launch configuration should be filtered
__label__summary this is the default listener for any of the preferenceclasses it is added by the respective factory methods andupdates the pages preview on each change
__label__summary the base class of all preference classes a preference class provides a wrapperaround one or more swt widgets and handles the input of values for some key on each change the new value is written to the map and the listeners are notified
__label__summary create a new preference
__label__summary set the enabled state of all swt widgets of this preference
__label__summary set the key which is used to store the value
__label__summary returns the main control of a preference which is mainly used tomanage the focus this may be codenullcode if the preference doesnthave a control which is able to have the focus
__label__summary to be implemented in subclasses update the swt widgets when the stateof this object has changed enabled key 
__label__summary wrapper around a checkbox and a label
__label__summary create a new checkbox preference
__label__summary wrapper around a combo box
__label__summary create a new combo preference
__label__summary wrapper around a textfied which requests an integer input of a given range
__label__summary create a new number preference
__label__summary layout used for the settings part makes sure to show scrollbarsif necessary the settings part needs to be layouted on resize
__label__summary this class provides the default way to preserve and reestablish the focusover multiple modify sessions
__label__summary the default focus manager this widget knows all widgets which can have the focusand listens for focus gained events on which it stores the index of the currentfocus holder when the dialog is restarted coderestore focuscode sets thefocus to the last control which had it
__label__summary a pixel converter for layout calculations
__label__summary the map where the current settings are stored
__label__summary the modify dialog where we can display status messages
__label__summary create a new code modify dialog tab pagecode
__label__summary create the contents of this tab page subclasses cannot override thisinstead they must implement codedo create preferencescode codedo create previewcode may alsobe overridden as necessary
__label__summary this method is called after all controls have been allocated including the preview it can be used to set the preview text and to create listeners
__label__summary create the left side of the modify dialog this is meant to be implemented by subclasses
__label__summary create the right side of the modify dialog by default the preview is displayed there subclasses can override this method in order to customize the righthand side of thedialog
__label__summary to be implemented by subclasses this method should return an instance of c preview currently the choice is between compilation unit preview which contains a valid compilationunit or a snippet preview which formats several independent code snippets and displays themin the same window
__label__summary create a nice javadoc comment for some string
__label__summary a label in the @link simple week toolbar@since 
__label__summary a bimap or bidirectional map is a map that preserves the uniqueness ofits values as well as that of its keys this constraint enables bimaps tosupport an inverse view which is another bimap containing the same entriesas this bimap but with reversed keys and values
__label__summary class that helps in checking file system permission the state of this class need not be synchronized as it has data structures thatare readonly
__label__summary define label specific configuration
__label__summary an alternate form of @code put that silently removes any existing entrywith the value @code value before proceeding with the @link #putoperation if the bimap previously contained the provided keyvaluemapping this method has no effect
__label__summary returns the inverse view of this bimap which maps each of this bimapsvalues to its associated key the two bimaps are backed by the same dataany changes to one will appear in the other
__label__summary define toplevel queues
__label__summary extension for binding multiple instances in a collection this extension requires
__label__summary a base class that implements interface node
__label__summary a specialization of a template parameter
__label__summary set this nodes level in the tree
__label__summary set this nodes parent
__label__summary normalize a path by stripping off any trailing
__label__summary get the path of a node
__label__summary set this nodes network location
__label__summary set this nodes name and location
__label__summary construct a node from its name and its location
__label__summary construct a node from its name and its location
__label__summary construct a node from its path
__label__summary default constructor
__label__summary hostport#
__label__summary string representation of this nodes location
__label__summary which level of the tree the node resides
__label__summary its parent
__label__summary path separator @value
__label__summary path separator as a string @value
__label__summary string representation of root @value
__label__summary validator for validating that a @link float is inside a given range
__label__summary creates a validator for checking that an float is within a given range
__label__summary adding description for initial padding measurements
__label__summary the index manager has reported a change to an index
__label__summary ic project cproject eget affected project if cproject null return 
__label__summary request from a label provider
__label__summary in case the display is no longer valid
__label__summary start a new job that repeatedly updates the file
__label__summary benchmarks
__label__summary return class struct union
__label__summary checks if the structure is a struct
__label__summary checks if the structure is a class
__label__summary checks if the structure is a union
__label__summary item was properly removed by the updater thread
__label__summary interface that allows to implement a classscope
__label__summary visits the children of the class type without using the cache this method isused to populate the cache
__label__summary returns the scope name for use in
__label__summary sets the visibility specifier of a given member
__label__summary an api for representing graph node and edge data it is analogous to the java collections framework ap is for lists maps sets etc
__label__summary interface used to qualify types
__label__summary returns whether this is a const type
__label__summary returns whether this is a volatile type
__label__summary start a new job that repeatedly updates the file
__label__summary returns the type that this is qualifying
__label__summary the protocol between clients and the code shared cache managercode to claimand release resources in the shared cache
__label__summary the interface used by clients to release a resource with thecode shared cache manager
__label__summary the interface used by clients to claim a resource with thecode shared cache manager
__label__summary make sure that all methods are forwarded
__label__summary create mock
__label__summary item was properly removed by the updater thread
__label__summary unit test for
__label__summary get an index filter that filters out bindings without declarations and those from linkagesother than that specified
__label__summary returns whether or not to include objects of the given linkage in the query
__label__summary determines whether or not a binding is valid
__label__summary get an index filter that filters out bindings without declarations and thosefrom linkages other than that specified
__label__summary get an index filter that filters out bindings from linkages other than that specified
__label__summary indicates whether an endpoint of some range is contained in the range itself closed or notopen if a range is unbounded on a side it is neither open nor closed on that side thebound simply does not exist
__label__summary the endpoint value iis noti considered part of the set exclusive
__label__summary the endpoint value iisi considered part of the set inclusive
__label__summary returns the bound type corresponding to a boolean value for inclusivity
__label__summary this is a template template parameter as code v code incodetemplatelttemplatelttypename tgt class vgt class ctcode
__label__summary hml attributesh the ml pipeline api uses @link orgapachesparksql data frames as ml datasets each dataset consists of typed columns eg string double vector etc
__label__summary this dependency calculator uses the gcc mmd mf mp mt options in order togenerate d files as a side effect of compilation
__label__summary some of the helper methods are gaurded by @link fs namesystem#read lock
__label__summary source scheduler app
__label__summary relation between template template parameter and its nested template parameters
__label__summary also from node on node removal
__label__summary source application master service scheduler
__label__summary source container allocation expirer
__label__summary source scheduler resource change approved by scheduler
__label__summary nm reported resource change is done
__label__summary relation between template template parameter and its name
__label__summary restart at beginning of partition
__label__summary ignore f last
__label__summary ignore f last
__label__summary supported by gnu preprocessor
__label__summary states
__label__summary ignore f last
__label__summary ignore f last
__label__summary relation between template template parameter and its default value
__label__summary if last char was a backslash then we have an escaped line
__label__summary f last carriagereturn
__label__summary characters
__label__summary configure whether preprocessor directives should be detected
__label__summary configure the set of default line end comment charactersp these characters are considered line comment introducers at the end of ainstruction linep
__label__summary get the nested template parameters
__label__summary configure the set of default line start comment charactersp these characters are considered line comment introducers only as firstnonwhitespace character on the linep
__label__summary configure the set of default line comment charactersp these characters are considered line comment introducers at any positionin the codep
__label__summary indicate whether current char is first nonwhitespace char on the line
__label__summary the amount of characters already read on first call to next token
__label__summary the last significant character read
__label__summary the state of the scanner
__label__summary the length of the last returned token
__label__summary get the optional name of this template template parameter in case there is no name anempty name is returned
__label__summary the offset of the last returned token
__label__summary the scanner
__label__summary postfix for string character and singlelinecomment
__label__summary prefix for singleline or multiline
__label__summary prefix for multilinecomment
__label__summary postfix for multilinecomment
__label__summary postfix for string character and singlelinecomment
__label__summary postfix for string character and singlelinecomment
__label__summary postfix for string character
__label__summary beginning of prefixes and postfixes
__label__summary get default value for template template parameter or codenullcode
__label__summary states
__label__summary characters known to be used as line end comments
__label__summary characters not applicable for line start comments
__label__summary this scanner recognizesullic multi line commentslili assembly line commentslilic line commentslilic string literalslili assembly character literalslilic preprocessor directivesliul default supported line start comment characters are and @p
__label__summary prevent noparameters instantiation of freeform query
__label__summary creates a new freeform query delegate to be used with the
__label__summary set the name of this template template parameter
__label__summary append a where clause
__label__summary rewrite the where clause
__label__summary set default value for the template template parameter
__label__summary is there already a where clause in the query string
__label__summary build the where rules for the provided keys
__label__summary statement generation not supported continue
__label__summary this implementation of the contains row with key method rewrites existing where clauses in the query string the logic is however not verycomplex and some times can do the wrong thingsuptmsup for thesituations where this logic is not enough you can implement theget contains row query string method in freeform query delegate and this willbe used instead of the logic
__label__summary statement generation not supported continue
__label__summary first try using prepared statement
__label__summary throw the original exception even if closing the statement fails
__label__summary this is fine well just use the default query string
__label__summary statement generation not supported continue
__label__summary first try using prepared statement
__label__summary creates a new freeform query delegate to be used with the
__label__summary this implementation of get count actually fetches all records from thedatabase which might be a performance issue override this method with a select count query if this is too slow for your needs
__label__summary first try the delegate
__label__summary couldnt use the delegate use the bad way
__label__summary first try using prepared statement
__label__summary count statement generation not supported
__label__summary try using regular statement
__label__summary count query generation not supported
__label__summary fetches the results for the query this implementation always fetches theentire record set ignoring the offset and page length parameters inorder to support lazy loading of records you must supply a freeform query delegate that implements the freeform query delegateget query stringintint method
__label__summary root and intermediate
__label__summary check if a leaf queues am resource usage over its limit under this policy
__label__summary get headroom by calculating the min of codecluster availablecode andcodequeue fair sharecode codequeue usagecode resources that areapplicable to this policy for eg if only memory then leave otherresources such as cpu to same as cluster available
__label__summary check if the resource usage is over the fair share under this policy
__label__summary computes and updates the steady shares of @link fs queues as per the@link scheduling policy the steady share does not differentiatebetween queues with and without running applications under them thesteady share is not used for scheduling it is displayed on the web u ifor better visibility
__label__summary computes and updates the shares of @link schedulables as perthe @link scheduling policy to be used later for scheduling decisions the shares computed are instantaneous and only consider queues withrunning applications
__label__summary the comparator returned by this method is to be used for sorting the@link schedulables in that queue
__label__summary checks if the specified @link scheduling policy can be used for a queue atthe specified depth in the hierarchy
__label__summary specifies the depths in the hierarchy this @link scheduling policyapplies to
__label__summary the @link resource calculator returned by this method should be usedfor any calculations involving resources
__label__summary returns @link scheduling policy instance corresponding to the@link scheduling policy passed as a string the policy can be fair for fair share policy fifo for fifo policy or drf for dominant resource fairness policy for a custom@link scheduling policys in the rm classpath the policy should becanonical class name of the @link scheduling policy
__label__summary returns a @link scheduling policy instance corresponding to the passed clazz
__label__summary @since 
__label__summary this interface has methods which returns a ui element given an element method to return a list of elements given an element
__label__summary returns the ui element
__label__summary @since 
__label__summary add a nested template parameter@since 
__label__summary return an updated filter that should be compatible with the underlyingcontainer
__label__summary translates sorting of the generated property in a specific direction to aset of property ids and directions in the underlying container
__label__summary return property type for this generator this function is called when@link property#get type is called for generated property
__label__summary returns value for given item used by generated property container whengenerating new properties
__label__summary property value generator for generated property container
__label__summary create the table viewer for file associations
__label__summary set whether this template template parameter is a parameter pack@since 
__label__summary set the checkbox selection and enablement of the other controls as specified
__label__summary returns this field editors current boolean value
__label__summary create and hide label from base class
__label__summary returns the scope that contains the template parameters of this templatetemplate parameter@since 
__label__summary validate on focus gain
__label__summary a field editor that combines an integer value preference with a boolean enablementpreference
__label__summary dummy connector to test our vaadin gwt rpc bug in a vaadin environment with dev mode enabled a pure gwt rpc call would throw an exception
__label__summary the id of the label in case the test is successful
__label__summary the id of the label in case the test failed
__label__summary make an rpc to test our bug
__label__summary show the result box
__label__summary i templates list provider
__label__summary make builder enabled
__label__summary extension for injecting objects that may throw at provision time this extension requires
__label__summary a @link range set whose contents will never change with many other important propertiesdetailed at @link immutable collection
__label__summary returns an empty immutable range set
__label__summary returns an immutable range set containing the single range @link range#all
__label__summary returns an immutable range set containing the specified single range if @link range#is emptyrangeis empty this is equivalent to @link immutable range set#of
__label__summary returns an immutable copy of the specified @code range set
__label__summary guaranteed to throw an exception and leave the @code range set unmodified
__label__summary guaranteed to throw an exception and leave the @code range set unmodified
__label__summary guaranteed to throw an exception and leave the @code range set unmodified
__label__summary guaranteed to throw an exception and leave the @code range set unmodified
__label__summary returns a list containing the nonempty intersections of @code rangewith the ranges in this range set
__label__summary returns a view of the intersection of this range set with the given range
__label__summary returns an @link immutable sorted set containing the same values in the given domain@linkplain range set#contains contained by this range set
__label__summary according to the spec of canonical neither this immutable range set nor the range have a lower bound
__label__summary racy singlecheck idiom
__label__summary returns @code true if this immutable range sets implementation contains references tousercreated objects that arent accessible via this range sets methods this is generallyused to determine whether @code copy of implementations should make an explicit copy to avoidmemory leaks
__label__summary returns a new builder for an immutable range set
__label__summary gdb tdump cli command@since 
__label__summary a builder for immutable range sets
__label__summary add the specified range to this builder adjacentabutting ranges are permitted butempty ranges or ranges with nonempty overlap are forbidden
__label__summary add all ranges from the specified range set to this builder duplicate or connected rangesare permitted and will be merged in the resulting immutable range set
__label__summary returns an @code immutable range set containing the ranges added to this builder
__label__summary @param ctx trace context
__label__summary verify if the caller has the required permission this will result intoan exception if the caller is not allowed to access the resource
__label__summary tests for @code count
__label__summary request to terminate gdb
__label__summary this method should be called once and only once during the launchto complete the initialization it will perform the final stepsto configure gdb for the type of debugging session chosen by theuser
__label__summary sets any userdefined environment variables for the inferior if the clear flag is true all existing environment variableswill be removed and replaced with the new specified ones if clear is false the new variables are added to the existingenvironment
__label__summary returns a list of all the targetindependent mi featuressupported by the gdb that is being used consult the gdb mi documentationfor the mi listfeatures command for the possible names of features the return value is never null but may be an empty list
__label__summary enable the pretty printers also for mi variable objects this basicallysends enableprettyprinting
__label__summary turns the printing of python errors on or off
__label__summary enable or disable this drag listener
__label__summary convert a widget offset to the corresponding document offset
__label__summary convert mouse screen coordinates to a code styled textcode offset
__label__summary should not happen
__label__summary cannot happen
__label__summary convert further to a document offset
__label__summary convert screen coordinates to widget offest
__label__summary cannot happen
__label__summary ignore
__label__summary create a new text viewer drag adapter
__label__summary create a new text viewer drag adapter
__label__summary drag source adapter for text selections in i text viewers
__label__summary the position category to be used to indicate a drag source selection
__label__summary the position updater for the drag selection position
__label__summary the drag selection position
__label__summary the drag selection position
__label__summary the text viewer allowing drag
__label__summary the editor of the viewer may be null
__label__summary flag whether this drag source listener allows to drag
__label__summary test web hdfs with multiple name nodes
__label__summary the suffix is to make sure the strings have different lengths
__label__summary test create create a file for each namenode
__label__summary check file length
__label__summary test read check file content for each namenode
__label__summary test append append to the file for each namenode
__label__summary check file length
__label__summary test read check file content for each namenode
__label__summary a base class for generating an unique object that is serializablep this class is abstract but has no abstract methods to force users to createan anonymous inner class otherwise each instance will not be unique
__label__summary this policy works in combination with an implementation of taskcheckpointing it computes the tasks to be preempted in response to the r mrequest for preemption for strict requests it maps containers tocorresponding tasks for fungible requests it attempts to pick the bestcontainers to preempt reducers in reverse allocation order the task attempt listener will interrogate this policy when handling a taskheartbeat to check whether the task should be preempted or not when handlingfungible requests the policy discount the rm ask by the amount of currentlyinflight preemptions ie tasks that are checkpointing this class it is also used to maintain the list of checkpoints for existingtasks centralizing this functionality here allows us to have visibility onpreemption and checkpoints in a single location thus coordinating preemptionand checkpoint management decisions in a single policy
__label__summary task attempts flagged for preemption
__label__summary handling nonnegotiable preemption
__label__summary handle strict preemptions these containers are nonnegotiable
__label__summary ignore requests for preempting containers running maps
__label__summary handling negotiable preemption
__label__summary handle fungible preemption here we only look at the total amount of resources to be preempted and pick enough of our containers to satisfy that we only support checkpointing for reducers for now
__label__summary compute the total amount of pending preemptions to be discounted from current request
__label__summary discount preemption request based on currently pending preemption
__label__summary for now only respond to aggregate requests and ignore locality
__label__summary remove
__label__summary if goes negative we simply exit
__label__summary decrement pending resources if zero or negatve we will ignore it while processing next preemption resource request
__label__summary reverse order of allocation for now
__label__summary preempt reducers first
__label__summary check whether current user have permissions to access the path traverse is always checked
__label__summary if map was preemptable we would do add them to to be preempted here
__label__summary funnels for common types all implementations are serializable
__label__summary returns a funnel that extracts the bytes from a @code byte array
__label__summary returns a funnel that extracts the characters from a @code char sequence a character at atime without performing any encoding if you need to use a specific encoding use@link funnels#string funnel charset instead
__label__summary returns a funnel that encodes the characters of a @code char sequence with the specified
__label__summary returns a funnel for integers
__label__summary returns a funnel that processes an @code iterable by funneling its elements in iterationorder with the specified funnel no separators are added between the elements
__label__summary returns a funnel for longs
__label__summary wraps a @code primitive sink as an @link output stream so it is easy to @link funnel#funnelfunnel an object to a @code primitive sink if there is already a way to write the contents ofthe object to an @code output stream
__label__summary p the @code close and @code flush methods of the returned @code output stream do nothingand no method throws @code io exception
__label__summary otherwise find the signal and member parameters based on the overload
__label__summary test that the exit code of the script determineswhether the fencer succeeded or failed
__label__summary test that lines on stdout get passed as inf olevel messages
__label__summary otherwise find the signal and member parameters based on the overload
__label__summary test that lines on stderr get passed as warn level log messages
__label__summary verify that the configuration gets passed asenvironment variables to the fencer
__label__summary verify that information about the fencing target gets passed asenvironment variables to the fencer
__label__summary test that we properly close off our input to the subprocesssuch that it knows theres no tty connected this is importantso that if we use ssh it wont try to prompt for a passwordand block forever for example
__label__summary this event can be triggered by one of the following flows web ui container cli rm nm
__label__summary q meta method cannot be statically analyzed
__label__summary visits each of the strategies used to scope an injection
__label__summary visit an eager singleton or single instance this scope strategy is found on both module andinjector bindings
__label__summary visit a scope instance this scope strategy is found on both module and injector bindings
__label__summary visit a scope annotation this scope strategy is found only on module bindings the instancethat implements this scope is registered by @link comgoogleinject binder#bind scope class scope binderbind scope
__label__summary visit an unspecified or unscoped strategy on a module this strategy indicates that theinjector should use scoping annotations to find a scope on an injector it indicates thatno scope is applied to the binding an unscoped binding will behave like a scoped one when itis linked to a scoped binding
__label__summary extracts required information from function call expressions that call q objectconnect this implementation handles all overloads of q objectconnectexcept the q meta method related ones q meta methods cannot be statically analyzedso they are ignoredp the binding is found by identifying the overload and then looking at the appropriateparameters
__label__summary breakpoint service for gdb it also supports tracepoints
__label__summary get the services references
__label__summary register this service
__label__summary add a breakpoint of type breakpoint
__label__summary select the context breakpoints map
__label__summary extract the relevant parameters providing default values to avoid potential np es
__label__summary returns a collection of all qt method references within the given function call returnsnull if there are no qt method references
__label__summary execute the command
__label__summary with mi an invalid location wont generate an error
__label__summary create a breakpoint object and store it in the map
__label__summary format the return value
__label__summary flag the event
__label__summary add a tracepoint
__label__summary select the context breakpoints map
__label__summary extract the relevant parameters providing default values to avoid potential np es
__label__summary create a breakpoint object and store it in the map
__label__summary format the return value
__label__summary flag the event
__label__summary retrieve the breakpoint parameters
__label__summary track the number of change requests
__label__summary determine if the tracepoint pass count changed
__label__summary determine if tracepoint commands changed
__label__summary set the number of completions required
__label__summary pick the context breakpoints map
__label__summary update the breakpoint ignore count
__label__summary pick the context breakpoints map
__label__summary ignorecount is not supported for tracepoints
__label__summary update the tracepoint pass count
__label__summary pick the context breakpoints map
__label__summary passcount is just for tracepoints
__label__summary queue the command
__label__summary sync the data to data node close the current block and allocate a newblock
__label__summary when doing sync to data nodes also update the metadata block length inthe name node
__label__summary sync buffered data to data nodes flush to disk devices
__label__summary get the actual number of replicas of the current block
__label__summary the hdfs implementation of @link fs data output stream
__label__summary forces the termination the launched process
__label__summary the same functionality as is alivebut does not affect out streamsbecause they can be shared among processes
__label__summary live links the launched process with the configured inout streams usingreader threads
__label__summary creates a process closure and connects the launched process with aconsole document
__label__summary thread which continuously reads from a input stream and pushes the readdata to an output stream which is immediately flushed afterwards
__label__summary bundled state of a launched process including the threads linking the processinoutput to console documents
__label__summary maps connector class state property name hander method data
__label__summary create property instances for each property name
__label__summary this method sets up prototypes chain for codebase class namecode precondition is codesuper class namecode had to be handled beforeits child codebase class namecode
__label__summary gets data for all methods annotated with @link on state change in thegiven connector type
__label__summary adds data about a method annotated with @link on state change for thegiven connector type
__label__summary checks whether the provided method is annotated with @link no layout
__label__summary checks whether the provided property is annotated with @link no layout
__label__summary gwt emulation of @link regular immutable set
__label__summary this policy enforce a simple physical cluster capacity constraints byvalidating that the allocation proposed fits in the current plan thisvalidation is compatible with updates and in verifying the capacityconstraints it conceptually remove the prior version of the reservation
__label__summary check updates are using same name
__label__summary for every instant in time check we are respecting cluster capacity
__label__summary check the cluster is never over committed
__label__summary this policy has no memory so the valid window is set to zero
__label__summary nothing to do for this policy
__label__summary this class tests hadoop streaming in map reduce local mode this testcase looks at different cases of tab position in input
__label__summary run the job with the indicating the input format key should be emitted
__label__summary run the job the default way the input format key is not emitted
__label__summary this represents a declaration specifier for a builtin type
__label__summary used for omitted declaration specifiers eg for declaration of constructorsor in plain c where this defaults to an integer
__label__summary used only in subclasses
__label__summary not allowed on frozen ast
__label__summary not allowed on frozen ast
__label__summary not allowed on frozen ast
__label__summary not allowed on frozen ast
__label__summary not allowed on frozen ast
__label__summary not allowed on frozen ast
__label__summary unit tests for utf
__label__summary generate a random string
__label__summary generate a random string
__label__summary write it
__label__summary test that it reads correctly
__label__summary test that it reads correctly with data input
__label__summary test encoding and decoding of utf outside the basic multilingual plane
__label__summary this encodes to bytes in utf
__label__summary decode back to string using our own decoder
__label__summary test that decoding invalid utf throws an appropriate error message
__label__summary test for a byte utf sequence which is now considered illegal
__label__summary test that decoding invalid utf due to truncation yields the correctexception type
__label__summary a block id command is an instruction to a datanoderegarding some blocks under its control
__label__summary used to compute binding resolution during the parse imperative style symbol table with destructive update
__label__summary represents a scope in the c language
__label__summary list of buckets that have been modified in the current scope when the scope is closed these buckets are popped returning thesymbol table to the state it was in before the scope was opened
__label__summary a bucket object used to hold elements in the hash table
__label__summary create block command for the given action
__label__summary open the global scope
__label__summary hashes a key into an index in the hash table
__label__summary adds a binding to the symbol table in the current scope
__label__summary returns the binding associated with the given identifier ornull if there is none
__label__summary opens a new inner scope for identifiers
__label__summary remove all the symbols defined in the scope that is being closed
__label__summary pop each bucket that was modified in the scope
__label__summary pop the scope stack
__label__summary a reporter that does nothing
__label__summary for a variety of lengths
__label__summary create a file with length entries
__label__summary try splitting the file in a variety of sizes
__label__summary check each split
__label__summary create the codec
__label__summary a reporter that does nothing
__label__summary for a variety of lengths
__label__summary create a file with length entries
__label__summary try splitting the file in a variety of sizes
__label__summary check each split
__label__summary test read line for various kinds of line termination sequneces varies buffer size to stress test also check that returnedvalue matches the string length
__label__summary test read line for correct interpretation of max line lengthreturned string should be clipped at max line length and theremaining bytes on the same line should be thrown out also check that returned value matches the string length varies buffer size to stress test
__label__summary max lrr pos line reader buf
__label__summary 
__label__summary parse the command line arguments into lines and display the result
__label__summary test using the gzip codec and an empty input file
__label__summary test using the gzip codec for reading
__label__summary test another constructor
__label__summary used by lrr
__label__summary max lrr pos line reader buf
__label__summary order by represents a sorting rule to be applied to a query made by the sql containers query delegate the sorting rule is simple and contains only the affected columns name andthe direction of the sort
__label__summary prevent instantiation without required parameters
__label__summary an @link input stream that counts the number of bytes read@author chris nokleberg@since 
__label__summary provides breakpoints image information
__label__summary try the current directory
__label__summary wraps another input stream counting the number of bytes read@param in the input stream to be wrapped
__label__summary interface for the reference count holder
__label__summary clear the contents
__label__summary get the number of unique elements
__label__summary get the reference count for the key
__label__summary get entries in the reference map
__label__summary delete the reference decrease the reference count for the instance ifany on all references removal delete the instance from the map
__label__summary add the reference if the instance already present just increase thereference count
__label__summary class for deduplication of instances br hold the references count to a single instance if there are no referencesthen the entry will be removedbr
__label__summary returns the number of bytes read
__label__summary now create the blocks without topology information
__label__summary a simple shellbased implementation of @link id mapping service provider map id to user name or group name it does update every minutes only asingle instance of this class is expected to be on the server
__label__summary shell commands to get users and groups
__label__summary last time the static map was modified measured time difference in milliseconds since midnight january utc
__label__summary used for parsing the static mapping file
__label__summary maps for id to name map guarded by this object monitor lock
__label__summary last time maps were updated
__label__summary constructor
__label__summary minimal interval is minute
__label__summary constructorinitialize user and group maps to empty
__label__summary uid and gid are defined as uint in linux some systems createintended or unintended nfsnobody kind of name idmapping where is as unsigned int as an examplehttpsbugzillaredhatcomshowbugcgiid
__label__summary get the list of users or groups returned by the specified commandand save them in the corresponding map
__label__summary hdfs cant differentiate duplicate names with simple authentication
__label__summary silently ignore equivalent entries
__label__summary only got here if we didnt return false
__label__summary check modification time reload the file if the last modification time changed since prior load
__label__summary print the following log at initialization or when the static mapping file was deleted after prior load
__label__summary refresh static map and reset the other maps to empty for testing code a full map may be reconstructed here when the objectwas created with construct full map at init being set to true
__label__summary binding for template type parameters in the index
__label__summary set construct full map at init to false to allow testing code to do incremental update to maps after initial construction
__label__summary search for id with given name return nameid return getent group name cut d f or id u name awk print name 
__label__summary search for name with given id return nameid
__label__summary dscl read usersname grep unique id returns unique id id dscl read groupsname grep primary group id returns primary goup id id the following method returns a command that uses awk to process the result of these commands and returns name id to simulate one entry returned by macgetalluserscmd or macgetallgroupscmd specificially this method returns id u name awk print name or dscl read groupsname grep primary group id awk primary group id print name 
__label__summary dscl search users unique id id returns name unique id id dscl search groups primary group id id returns name primary group id id the following method returns a command that uses sed to process the the result and returns name id to simulate one entry returned by macgetalluserscmd or macgetallgroupscmd for certain negative id case like nfsnobody the id is quoted as id added one sed section to remove the quote specifically the method returns dscl search users unique id id sed ns\\ngns\\ng sed s unique id g sed sg sed s\g or dscl search groups primary group id id sed ns\\ngns\\ng sed s primary group id g sed sg sed s\g
__label__summary skip entirely empty and comment lines
__label__summary we know the line is fine to parse without error checking like this since it matched the regex above
__label__summary when cant map user return user names string hashcode
__label__summary when cant map group return group names string hashcode
__label__summary used to make sure we are dealing with a valid register
__label__summary make sure we are are dealing with a valid set of information
__label__summary we need to read the register in order to get the attributes
__label__summary make sure we are working on the editable areas
__label__summary we let the model provider supply the current format
__label__summary this is a combo box so we need to take the value of the bitfield andcompare it to the associated mnemonic values to see which mnemonic isrepresenting the current value at this point the bitfield model datahas already been established since the can modify method is calledfirst by the flexible hierarchy proxies
__label__summary we let the model provider supply the current format
__label__summary get the integer value corresponding to the selected entry
__label__summary write the bit field using the selected mnemonic
__label__summary basic sanity tests for the entire package
__label__summary this class implements the gwt serialization of
__label__summary this is for strings that take up more than on chunk the string will need to be broken up into sections and thenreassembled when necessary
__label__summary additional fields of first record
__label__summary test to verify that the data node uuid is correctly initialized before fs data set initialization
__label__summary additional fields of subsequent records
__label__summary write the first record
__label__summary write the subsequent records
__label__summary write the last record
__label__summary first record
__label__summary other records
__label__summary middle records
__label__summary last record
__label__summary compatible with @link string#hash code
__label__summary makes sure code configurationget instancescode returnsinstances of the required type
__label__summary tests for the @link database class
__label__summary this constant can be used to run the test with very large databases try for example setting it to integermaxvaluel
__label__summary allocate all database chunks up to testoffset
__label__summary check opening a readonly file for rw access fails
__label__summary create configuration to use simulated fs dataset verifier# factory
__label__summary we expect to get a failure here
__label__summary check opening a readonly file for read access does not fail
__label__summary this may be pointless on some platforms
__label__summary we only match stringcompare to ignore case behavior within this limited range
__label__summary represents single cpu
__label__summary start a cluster so that simulated fs dataset verifier constructor is invoked
__label__summary i visualizer model object version of compare to
__label__summary compares this item to the specified item
__label__summary sorts cores cpus etc by i ds
__label__summary removes core
__label__summary adds core
__label__summary gets core with specified id
__label__summary gets cores
__label__summary gets number of cores
__label__summary get the highest recorded load value for this cpu
__label__summary gets the load value associated to this cpu
__label__summary sets the load object associated to this cpu
__label__summary cpu has no parent always returns null
__label__summary gets id of this cpu
__label__summary returns string representation
__label__summary dispose method
__label__summary constructor
__label__summary list of cores
__label__summary load object associated to this cpu
__label__summary id of this core
__label__summary lookup table for cores
__label__summary disallow snapshot on dir
__label__summary allow snapshot on dir
__label__summary test file status of snapshot file beforeafter rename
__label__summary create snapshot for sub
__label__summary rename the snapshot
__label__summary file status of the snapshot should not change except the path
__label__summary look for automake conditionals which optionally activate or disable a makefile rule command
__label__summary do nothing
__label__summary initializes a new instance from a @link job conf
__label__summary a signals view based on flexible hierarchy
__label__summary viewer input requester used to update the viewer once the viewer input has beenresolved
__label__summary sets the input to the viewer
__label__summary updates actions and sets the viewer input when a context is activated
__label__summary returns the style bits for the viewer
__label__summary returns the presentation context id for this view
__label__summary this interface represents a c conversion member function
__label__summary returns the iast type id for the icppast conversion nameie get type id on operator int would return the iast type id for int
__label__summary sets the iast type id for the icppast conversion name
__label__summary cdt color manager
__label__summary flag which tells if the colors are automatically disposed whenthe current display gets disposed
__label__summary creates a new cdt color manager which automaticallydisposes the allocated colors when the current displaygets disposed
__label__summary creates a new cdt color manager
__label__summary verify if the storagespace quota is violated after applying delta
__label__summary verify if the namespace quota is violated after applying delta
__label__summary quota feature for @link i node directory
__label__summary set this directorys quota
__label__summary set storage type quota in a batch only used by fs image load
__label__summary add current quota usage to counts and return the updated counts
__label__summary verify quota and then add count in ancestors
__label__summary add count in this inode
__label__summary update the spacenamespacetype usage of the tree
__label__summary sets namespace and storagespace take by the directory rootedat this i node this should be used carefully it does not checkfor quota violations
__label__summary creates the field editors field editors are abstractions of the common gui blocks needed to manipulate various types of preferences each fieldeditor knows how to save and restore itself
__label__summary application to support headless build
__label__summary killed jobs might not have counters
__label__summary print out the job history to the given @link print stream in ahumanreadable format
__label__summary used by the @link history viewer to print job history in a humanreadableformat
__label__summary abstract class mapping between @link component connector instances and theirinstances
__label__summary indexer timeout used by tests to avoid this timeout expiring during debugging add dindexertimeoutsomelargenumber to vm arguments of the test launch configuration
__label__summary the gcc version to emulate when running tests we emulate the latest version whose extensions we support
__label__summary logged by the resources plugin
__label__summary the last value passed to this method in the body of a test xxx methodwill be used to determine whether or not the presence of nonok status objectsin the log should fail the test
__label__summary some test steps need synchronizing against a c model event this classis a very basic means of doing that
__label__summary only respond to post change events
__label__summary create a new instance of a connector based on its type@param class type@link component connector class to instantiate@return new instance of the connector
__label__summary assertion helpers
__label__summary return the connector class to use for a fully qualified server sidecomponent class name@param fullyqualified namefully qualified name of the server side component class@return component connector class to use
__label__summary an empty array of strings indicating that a project doesnt have any prerequesite projects
__label__summary return the connector classes to load after the initial widgetset load andstart@return component connector class to load after the initial widgetsetloading
__label__summary make sure the code for a deferred or lazy component connector type hasbeen loaded triggering the load and waiting for its completion ifnecessary@param class typecomponent connector class
__label__summary now treated as the same
__label__summary add variables from build info
__label__summary fallback to cwd
__label__summary populate containing scope so that it will not be affected by the alternative branches
__label__summary handles ambiguities when parsing declaratorsbr example void fint d is d a type
__label__summary utilities used across test cases
__label__summary get the test uri
__label__summary assert that a property in the property set matches the expected value
__label__summary write a file and read it in validating the result optional flags controlwhether file overwrite operations should be enabled and whether thefile should be deleted afterwards
__label__summary write a file optional flags controlwhether file overwrite operations should be enabled
__label__summary read the file and convert to a byte dataset
__label__summary assert that the array srclen and dest are equal
__label__summary the range either side of the first error to print this is a purely arbitrary number to aid user debugging
__label__summary convert a byte to a character for printing if thebyte value is lt and hence unprintable the byte isreturned as a two digit hex value
__label__summary downgrade a failure to a message and a warning then anexception for the junit test runner to mark as failed
__label__summary report an overridden test as unsupported
__label__summary report a test has been skipped for some reason
__label__summary make an assertion about the length of a file
__label__summary assert that a path refers to a directory
__label__summary assert that a path refers to a directory
__label__summary write the text to a file returning the converted byte arrayfor use in validating the round trip
__label__summary touch a file fails if it is already there
__label__summary read in length bytes convert to an ascii string
__label__summary assert that a file exists and whose @link file status entrydeclares that this is a file and not a symlink or directory
__label__summary create the mini cluster for testing and sub in a custom runtime so thatedit log journal failures dont actually cause the jvm to exit
__label__summary create a dataset for use in the tests all data is in the rangebase to basemodulo inclusive
__label__summary assert that a path exists but make no assertions as to thetype of that entry
__label__summary failure report it
__label__summary assert that a path does not exist
__label__summary this is expected
__label__summary assert that a file systemlist status on a dir finds the subdirchild entry
__label__summary pull out one of the journal and stream objects from the edit log
__label__summary invalidate one edits journal
__label__summary the nn has not terminated no exit exception thrown
__label__summary a single journal failure should not result in a call to terminate
__label__summary invalidate both edits journals
__label__summary the nn has not terminated no exit exception thrown
__label__summary invalidate both edits journals
__label__summary shared state for grid headers and footers@since @author vaadin ltd
__label__summary map from column id set to cell state for merged state
__label__summary the style name for the row null if none
__label__summary the nn has not terminated no exit exception thrown
__label__summary tests declarative support for implementations of @link abstract embedded and@link embedded
__label__summary the raw local fs implementation of abstract file system this impl delegates to the old file system
__label__summary evolving for a releaseto be changed to stable
__label__summary this constructor has the signature needed by@link abstract file system#create file systemuri configuration
__label__summary invalidate one edits journal
__label__summary no default port for file
__label__summary different local file systems have different validation rules skip validation here and just let the os handle it this is consistent with raw local file system
__label__summary create the button pane
__label__summary the nn has not terminated no exit exception thrown
__label__summary the exception that happens when you ask to create a file that alreadyis being created but is not closed yet
__label__summary interface that defines how we can grow the size of a hash map when it is over a threshold
__label__summary double the size of the hash map every time
__label__summary guard against overflow
__label__summary indicates an exception on the rpc server
__label__summary constructs exception with the specified detail message
__label__summary a single journal failure should not result in a call to terminate
__label__summary constructs exception with the specified detail message and cause
__label__summary get the rpc status corresponding to this exception
__label__summary get the detailed rpc status corresponding to this exception
__label__summary set one of the edits dirs to be required
__label__summary returns the marker type associated to this problem if it gets persisted into a marker
__label__summary invalidated the one required edits journal
__label__summary the nn has not terminated no exit exception thrown and that the other stream is active
__label__summary serialized type for all immutable bi map instances it captures the logicalcontents and they are reconstructed using public factory methods thisensures that the implementation types remain as implementation details
__label__summary guaranteed to throw an exception and leave the bimap unmodified
__label__summary returns an immutable set of the values in this map the values are in thesame order as the parameters used to build this map
__label__summary p the inverse of an @code immutable bi map is another@code immutable bi map
__label__summary the current implementation will end up using entry array directly though it will writeover the arbitrary potentially mutable entry objects actually stored in entry array
__label__summary well only be using get key and get value which are covariant
__label__summary returns an immutable bimap containing the given entries
__label__summary returns an immutable bimap containing the same entries as @code map if@code map somehow contains entries with duplicate keys for example ifit is a @code sorted map whose comparator is not iconsistent withequalsi the results of this method are undefined
__label__summary copy of
__label__summary returns a newlycreated immutable bimap
__label__summary build
__label__summary configures this @code builder to order entries by value according to the specifiedcomparator
__label__summary adds all of the given entries to the built bimap duplicate keys orvalues are not allowed and will cause @link #build to fail
__label__summary associates all of the given maps keys and values in the built bimap duplicate keys or values are not allowed and will cause @link #buildto fail
__label__summary adds the given @code entry to the bimap duplicate keys or valuesare not allowed and will cause @link #build to fail
__label__summary associates @code key with @code value in the built bimap duplicatekeys or values are not allowed and will cause @link #build to fail
__label__summary creates a new builder the returned builder is equivalent to the buildergenerated by @link immutable bi map#builder
__label__summary a builder for creating immutable bimap instances especially @code publicstatic final bimaps constant bimaps example pre @codestatic final immutable bi map string integer wordtoint new immutable bi map builder string integerputone puttwo putthree buildprep for ismalli immutable bimaps the @code immutable bi mapof methodsare even more convenientp builder instances can be reused it is safe to call @link #buildmultiple times to build multiple bimaps in series each bimap is a supersetof the bimaps created before it
__label__summary set up nameedits dirs
__label__summary returns a new builder the generated builder is equivalent to the buildercreated by the @link builder constructor
__label__summary returns an immutable map containing the given entries in order
__label__summary returns an immutable map containing the given entries in order
__label__summary returns an immutable map containing the given entries in order
__label__summary returns an immutable map containing the given entries in order
__label__summary returns an immutable bimap containing a single entry
__label__summary returns the empty bimap
__label__summary a @link bi map whose contents will never change with many other important properties detailedat @link immutable collection
__label__summary keep running unless there are less than edits dirs remaining
__label__summary all journals active
__label__summary invalidate of the redundant journals
__label__summary safe since map is not writable
__label__summary invalidate of the redundant journals
__label__summary abstract base implementation of the breakpoint ruler actions
__label__summary constructs an action to work on breakpoints in the specifiedpart with the specified vertical ruler information
__label__summary returns the breakpoint at the last line of mouse activity in the ruleror codenullcode if none
__label__summary returns the workbench part this action was created for
__label__summary returns the vertical ruler information this action was created for
__label__summary invalidate of the redundant journals
__label__summary the nn has not terminated no exit exception thrown
__label__summary toggles a line breakpoint in a cc editor
__label__summary the nn has not terminated no exit exception thrown
__label__summary test that we can start several and run with namenodes on the same minicluster
__label__summary ms between failovers between n ns
__label__summary ms for length of test
__label__summary setup the harness
__label__summary setup the a circular writer
__label__summary wait for all the writer threads to finish or that we exceed the time
__label__summary the nn has not terminated no exit exception thrown
__label__summary remove the writer from the ones to check
__label__summary might be a little racy but we just want a close count
__label__summary make sure we can traverse the entire linked list
__label__summary this class implements a value aggregator that dedupes a sequence of objects
__label__summary the default constructor
__label__summary constructor
__label__summary set the limit on the number of unique values
__label__summary add a value to the aggregator
__label__summary replace the journal at index codeindexcode with one that throws anexception on flush
__label__summary reset the aggregator
__label__summary contains the logic to lookup a leveldb by timestamp so that multiple smallerdatabases can roll according to the configured period and evicted efficientlyvia operating system directory removal
__label__summary logger for this class
__label__summary factory to open and create new leveldb instances
__label__summary thread safe date formatter
__label__summary date parser
__label__summary calendar to calculate the current and next rolling period
__label__summary collection of all active rolling leveldb instances
__label__summary collection of all rolling leveldb instances to evict
__label__summary name of this rolling level db
__label__summary calculated timestamp of when to roll a new leveldb instance
__label__summary file system instance to find and create new leveldb instances
__label__summary directory to store rolling leveldb instances
__label__summary configuration for this object
__label__summary rolling period
__label__summary rolling leveldb instances are evicted when their endtime is earlier thanthe current time minus the time to live value
__label__summary whether time to live is enabled
__label__summary encapsulates the rolling period to date format lookup
__label__summary convenience class for associating a write batch with its rolling leveldbinstance
__label__summary leveldb object
__label__summary write batch for the db object
__label__summary make sure we sanitize this input
__label__summary keep at least time to live amount of data
__label__summary parse this in gmt time
__label__summary needs to be called synchronously due to shared calendar
__label__summary round down to hour interval
__label__summary round down to hour interval
__label__summary round down to minute interval
__label__summary replace content
__label__summary do a mutative metadata operation on the file system@return true if the operation was successful false otherwise
__label__summary the content of this page is the aggregated logs block
__label__summary replace the journal at index codeindexcode with one that throws anexception on flush@param index the index of the journal to take offline@return the original code edit log output streamcode of the journal
__label__summary snapshot stats mx bean
__label__summary snapshot stats mx bean
__label__summary returns the maximum allowable snapshot id based on the bit width of thesnapshot id
__label__summary both from snapshot and to snapshot indicate the current tree
__label__summary find the source root directory path where the snapshots were taken all the check for path has been included in the value of method
__label__summary compute the difference between two snapshots of a directory or between asnapshot of the directory and its current tree
__label__summary list all the snapshottable directories that are owned by the current user
__label__summary read values of @link #snapshot counter @link #num snapshots andall snapshots from the data input
__label__summary write all snapshots
__label__summary write @link #snapshot counter @link #num snapshotsand all snapshots to the data output
__label__summary rename the given snapshot
__label__summary delete a snapshot for a snapshottable directory
__label__summary create success update id
__label__summary we have reached the maximum allowable snapshot id and since we dont handle rollover we will fail all subsequent snapshot creation requests
__label__summary create a snapshot of the given path it is assumed that the caller will perform synchronization
__label__summary find the source root directory where the snapshot will be takenfor a given path
__label__summary the directory is already nonsnapshottable
__label__summary set the given snapshottable directory to nonsnapshottable
__label__summary remove snapshottable directories from @link #snapshottables
__label__summary remove the given snapshottable directory from @link #snapshottables
__label__summary add the given snapshottable directory to @link #snapshottables
__label__summary labels and error messages
__label__summary the directory is already a snapshottable directory
__label__summary set the given directory as a snapshottable directory
__label__summary used in tests only
__label__summary all snapshottable directories in the namesystem
__label__summary manage snapshottable directories and their snapshots this class includes operations that create access modify snapshots andorsnapshotrelated data in general the locking structure of snapshotoperations is br
__label__summary defaults
__label__summary read snapshots
__label__summary system connection property page id
__label__summary context for an exception thrown by a subscriber
__label__summary this subclass of the jetty ssl socket connector exists solely to controlthe tls protocol versions allowed this is fallout from the poodl evulnerability cve which requires that ss lv be disabled only tls and later protocols are allowed
__label__summary create a new server socket that will not accept ss lv connectionsbut will accept tl svx connections
__label__summary subclass for gdb 
__label__summary initialize the list with the base class steps we need to create a list that we can modify which is why we create our own array list
__label__summary now insert our steps right after the initialization of the base class
__label__summary initialize the members of the final launch sequence class this step is mandatory for the rest of the sequence to complete
__label__summary tell gdb whether to automatically attach to a forked process or not
__label__summary set preemption related configurations
__label__summary a short circuit replica object contains file descriptors for a block thatwe are reading via shortcircuit local reads the file descriptors can be shared between multiple threads becauseall the operations we perform are stateless ie we use preadinstead of read to avoid using the shared position state
__label__summary identifies this short circuit replica object
__label__summary the block data input stream
__label__summary the block metadata input streamtodo make this nullable if the file has no checksums on disk
__label__summary block metadata header
__label__summary the cache we belong to
__label__summary monotonic time at which the replica was created
__label__summary if nonnull the shared memory slot associated with this replica
__label__summary current mmap state protected by the cache lock
__label__summary true if this replica has been purged from the cache false otherwise protected by the cache lock
__label__summary decrement the reference count
__label__summary check if the replica is stale must be called with the cache lock held
__label__summary check staleness by looking at the shared memory area we use to
__label__summary communicate with the data node
__label__summary fall back to old timebased staleness method
__label__summary remove a nochecksum anchor for our shared memory slot this method does not require any synchronization
__label__summary check if the replica has an associated mmap that has been fully loaded must be called with the cache lock held
__label__summary free the mmap associated with this replica must be called with the cache lock held
__label__summary close the replica must be called after there are no more references to the replica in thecache or elsewhere
__label__summary get the evictable time in nanoseconds
__label__summary set the evictable time in nanoseconds
__label__summary convert the replica to a string for debugging purposes note that we cant take the lock here
__label__summary launch config added will get called below to add it to the configs map
__label__summary set the project and the connection
__label__summary nothing to do since the local connection cant be removed
__label__summary see the edsl examples at @link comgoogleinject binder
__label__summary see the edsl examples at @link comgoogleinject binder
__label__summary see the edsl examples at @link comgoogleinject binder
__label__summary instructs the @link comgoogleinject injector to eagerly initialize thissingletonscoped binding upon creation useful for applicationinitialization logic see the edsl examples at
__label__summary removing this line causes the tree to show normally in firefox
__label__summary implements the request interceptor interface and provides common functionalitywhich can can be used andor extended by other concrete intercepter classes
__label__summary sets the @link request interceptor in the chain
__label__summary sets the @link configuration
__label__summary gets the @link configuration
__label__summary initializes the @link request interceptor
__label__summary disposes the @link request interceptor
__label__summary gets the next @link request interceptor in the chain
__label__summary default implementation that invokes the distributed scheduling versionof the register method
__label__summary default implementation that invokes the distributed scheduling versionof the allocate method
__label__summary the rse connection dropdown with new button
__label__summary adds a new row to ithisi dynamic bloom filter
__label__summary returns the active standard bloom filter in ithisi dynamic bloom filter
__label__summary the project and local binary location
__label__summary constructorp builds an empty dynamic bloom filter
__label__summary zeroargs constructor for the serialization
__label__summary the matrix of bloom filter
__label__summary the number of keys recorded in the current standard active bloom filter
__label__summary threshold for the maximum number of key to record in a dynamic bloom filter row
__label__summary implements a idynamic bloom filteri as defined in the infocom paperpa dynamic bloom filter dbf makes use of a codesmcode bit matrix buteach of the codescode rows is a standard bloom filter the creationprocess of a dbf is iterative at the start the dbf is a codemcodebit matrix ie it is composed of a single standard bloom filter it assumes that codensubrsubcode elements are recorded in theinitial bit vector where codensubrsub ncode codencode isthe cardinality of the set codeacode to record in the filterp as the size of codeacode grows during the execution of the applicationseveral keys must be inserted in the dbf when inserting a key into the dbfone must first get an active bloom filter in the matrix a bloom filter isactive when the number of recorded keys codensubrsubcode isstrictly less than the current cardinality of codeacode codencode if an active bloom filter is found the key is inserted andcodensubrsubcode is incremented by one on the other hand if thereis no active bloom filter a new one is created ie a new row is added tothe matrix according to the current size of codeacode and the elementis added in this new bloom filter and the codensubrsubcode value ofthis new bloom filter is set to one a given key is said to belong to the dbf if the codekcode positions are set to one in one of the matrix rowsp originally created bya hrefhttpwwwonelaborg european commission one lab project a
__label__summary the remote binary location and skip download option
__label__summary a simple benchmark to find out the difference in speed between blockand page blobs
__label__summary writes data to the given stream of the given size flushing everyx bytes
__label__summary writes data to the given file of the given size flushing everyx bytes measure performance of that and return it
__label__summary writes data to a block blob of the given size flushing everyx bytes measure performance of that and return it
__label__summary writes data to a page blob of the given size flushing everyx bytes measure performance of that and return it
__label__summary runs the benchmark over a small kb file flushing every bytes
__label__summary runs the benchmark for the given file size and flush frequency
__label__summary runs the benchmark for the given file size and flush frequency from thecommand line
__label__summary if the local binary path changes modify the remote binary location
__label__summary ok expected
__label__summary ok expected
__label__summary ok expected
__label__summary ok expected
__label__summary ok expected
__label__summary ok expected
__label__summary ok expected
__label__summary ok expected
__label__summary all the modification methods of har fs must lead to ioe
__label__summary ok expected
__label__summary the metadata shouldnotbe reused from cache
__label__summary init the har
__label__summary write an unsupported version
__label__summary ok expected
__label__summary ok expected
__label__summary now init the har fs
__label__summary delete the index file
__label__summary is valid@see orgeclipsedebuguii launch configuration tab#is valid
__label__summary construct a valid har file system path with authority that contains userinfo and port the userinfo and port are useless in local fs uri they are only used to verify har file system can correctly preserve the information for the underlying file system
__label__summary list contents of dir and ensure we find all expected files
__label__summary testhar has the following contents dirtxt dirtxt
__label__summary reinitialize the har file system with host name make sure the qualified path name does not append at the end of host name
__label__summary init har fs with no constructor arg so that the underlying fs object is created on demand or got from cache in #initialize method
__label__summary the first entry should not be in the cache anymore
__label__summary create more hars until the cache is full the last creation should evict the first entry from the cache
__label__summary the metadata should be reused from cache
__label__summary init nd har file system on the same underlying fs so the metadata gets reused
__label__summary the metadata should be reused from cache
__label__summary create target exe path this creates the remote path usereditable textfieldon the main tab
__label__summary init nd har file system on the same underlying fs so the metadata gets reused
__label__summary check that its impossible to reset the working directory #set working directory should have no effect
__label__summary check working directory
__label__summary check har home path
__label__summary check har uri
__label__summary check har version
__label__summary cleanup delete all the temporary files
__label__summary close har fs
__label__summary create har to test
__label__summary commands to run before execution
__label__summary write har version into the master index
__label__summary creates and returns fully initialized har file system
__label__summary strip drive specifier on windows which would make the har uri invalid and cause tests to fail
__label__summary this test class checks basic operations with @link har file system includingvarious initialization cases getters and modification methods
__label__summary create download option this creates the skip download check button
__label__summary perform apply@see orgeclipsedebuguii launch configuration tab#perform apply
__label__summary @see orgeclipsedebuguii launch configuration tab#initialize from
__label__summary no headers read or written
__label__summary no headers read or written
__label__summary remove default header
__label__summary remove default header
__label__summary no headers read or written
__label__summary no headers read or written
__label__summary remove default header
__label__summary select the last used connection in the connecion pulldown if it stillexists
__label__summary response to @link datanode protocol#send heartbeat
__label__summary commands returned from the namenode to the datanode
__label__summary information about the current harelated state of the nn
__label__summary thrown when queue name is malformed
__label__summary called to announce that the given status has changed
__label__summary use published header name
__label__summary opens the code system connection property pagecode page for the selected connection
__label__summary alternate header name
__label__summary use any file for signature secret
__label__summary test that you can authenticate with only delegation tokens get a delegation token using kerberos auththis ends up testing the fallback authenticator submit an app without kerberos or delegationtoken we should get an unauthorized response submit same app with delegationtoken we should get ok response confirm owner of the app is the user whose delegationtoken we used
__label__summary this should fail with unauthorized because only auth is kerberos or delegation token
__label__summary this should not fail
__label__summary test to make sure that cancelled delegation tokens are rejected
__label__summary this should fail with unauthorized because only auth is kerberos or delegation token
__label__summary test to make sure that we cant do delegation token functions using just delegation token auth
__label__summary first test create and renew
__label__summary test cancel
__label__summary parent path means the parent directory for the path ancestor path means the last the closest existing ancestor directoryof the path note that if the parent path existsthen the parent path and the ancestor path are the same
__label__summary superuser client should be able to get a delegation token for user client when authenticated using kerberos the request shouldnt work when authenticated using delegation tokens
__label__summary this should not work
__label__summary this should also fail due to client not being a super user
__label__summary this class is meant to be empty it enables us to definethe annotations which list all the different j unit class wewant to run when creating a new test class it should beadded to the list below
__label__summary tests for the default assembly model builder
__label__summary emulation of runnable future
__label__summary recreates the test table
__label__summary set local path for remote path this function sets the remote path text fieldwith the value of the local executable path
__label__summary adds test data to the test table
__label__summary p the response sent by the code resource managercode to a clientrequesting a @link node report for all nodespp the code node reportcode contains pernode information such asavailable resources number of containers tracking url rack name healthstatus etc
__label__summary get code node reportcode for all nodes in the cluster
__label__summary an arithmetic progression
__label__summary a symbol
__label__summary starting value
__label__summary difference between terms
__label__summary ending value
__label__summary constructor
__label__summary not supported
__label__summary does this contain that
__label__summary try to use remote path
__label__summary skip some steps
__label__summary get the number of steps
__label__summary convert a string to an arithmetic progression
__label__summary helper class to manage a group of mutable rate metrics
__label__summary initialize the registry with all the methods in a protocolso they all show up in the first snapshot convenient for jmx implementations
__label__summary add a rate sample for a rate metric
__label__summary use remote ws root instead of workspace root
__label__summary this interface represents a base interface to represent a problem owner orholder
__label__summary get the problem
__label__summary set the problem
__label__summary create control@see orgeclipsedebuguii launch configuration tab#create control
__label__summary codeproblemcode represents the relationship between acodeiast problem holdercode and its codeiast problemcode
__label__summary the preference page used to present the properties of a gdb dynamic printf as preferences
__label__summary update page state
__label__summary update container state
__label__summary for every change if all the fields are valid we then check if we are dealing with a duplicate breakpoint
__label__summary check for duplication of line dprintf
__label__summary dont allow to create a duplicate breakpoint
__label__summary default main label is the label of marker type for the dynamic printf
__label__summary line dprintf
__label__summary the preference store used to interface between the dynamic printf and thedynamic printf preference page this preference store is initialized onlywhen the preference store cannot be retrieved from the preferencedialogs element
__label__summary indicates if the page currently aims to createa breakpoint that already exits
__label__summary nothing
__label__summary clears the error message from the message line if the error message is the error message from this field editor
__label__summary clears the error message from the message line if the error message is the error message from this field editor
__label__summary only store if the text control is enabled
__label__summary go over all dates this week
__label__summary create composite
__label__summary simple base case for mapping user to queue
__label__summary specify overwritten and see if user specified a queue and it will be overridden
__label__summary finds gcc and clang on the path
__label__summary decreasing container size from to 
__label__summary decreasing container size from to 
__label__summary table element scroll not working properly so we need to do this httpdevvaadincomticket
__label__summary waitforvaadin not worky currently for table scroll so we need to use thread sleep 
__label__summary gcc problem that matched the pattern
__label__summary loads the basic job level data upfront data from job history file is loaded lazily
__label__summary can be picked from job info with a conversion
__label__summary can be picked up from job info
__label__summary history data is leisurely loaded when task level data is requested
__label__summary we have only two types of tasks
__label__summary jaxb needs this
__label__summary the codearcode class is used for parsing standard som archive ar files
__label__summary archive and archive member header does not include byte magic character
__label__summary file member name terminated
__label__summary file member date decimal
__label__summary file member user id decimal
__label__summary file member group id decimal
__label__summary file member mode octal
__label__summary file member size decimal
__label__summary arfmag string to end header
__label__summary fields
__label__summary derived information
__label__summary get the name of the object file
__label__summary get the size of the object file 
__label__summary library symbol table header
__label__summary record fields
__label__summary creates a new codearcode object from the contents ofthe given file
__label__summary get an array of all the object file headers for this archive
__label__summary load the headers from the file if required
__label__summary check for eof condition get the som directory
__label__summary each som directory entry has bit words som offset from lst and size
__label__summary this represents a field in a struct this allows for the specification ofsize for a bit field@noextend this interface is not intended to be extended by clients@noimplement this interface is not intended to be implemented by clients
__label__summary load a lst header
__label__summary codefieldsizecode represents the relationship between acodeiast field declaratorcode and its codeiast expressioncode
__label__summary we only ever call has more elements once for the user naming enum so we can just have one return value
__label__summary were going to have to define the loop here we want two iterations to get both the groups
__label__summary define the attribute for the name of the first group
__label__summary define the attribute for the name of the second group
__label__summary this search result gets reused so return group then group
__label__summary find the first occured tab in a utf encoded string
__label__summary find the first occured tab in a utf encoded string
__label__summary split a utf byte array into key and valueassuming that the delimilator is at splitpos
__label__summary split a utf byte array into key and valueassuming that the delimilator is at splitpos
__label__summary split a utf byte array into key and valueassuming that the delimilator is at splitpos
__label__summary split a utf byte array into key and valueassuming that the delimilator is at splitpos
__label__summary read a utf encoded line from a data input stream
__label__summary check whether exception e is due to an ancestor inodes not beingdirectory
__label__summary an untargetted binding this binding indicates that the injector should use its implicit bindingstrategies to resolve injections
__label__summary an abstract class that adds a consistent api for common methods thats neededby vaadins serverbased selection models to workpem noteem this should be an interface instead of an abstract class ifonly we could define protected methods in an interface
__label__summary returns the number of bits if this is a bit field otherwise @code null@return size of bit field or null
__label__summary select a row based on its
__label__summary sets the bitfield size@param sizecodeiast expressioncode
__label__summary deselect a row based on its
__label__summary destination path parameter
__label__summary parameter name
__label__summary default parameter value
__label__summary constructor
__label__summary @since 
__label__summary extension to the vm update policy which allows the policy to control how toupdate missing property values in a dirty cache entry
__label__summary determines whether the given dirty cache entry should have the givenmissing property updated
__label__summary @since 
__label__summary exit node of the graph usually return from the function can also be throwor abort such at exit call
__label__summary jsonmarshallable description of a single component it supports the deserialization of unknown attributes but doesnot support their creation
__label__summary a type string which must be in the serialized json this permitsfast discarding of invalid entries
__label__summary the type field this must be the string @link #recordtype
__label__summary description string
__label__summary map to handle unknown attributes
__label__summary list of endpoints intended for use to external callers
__label__summary list of endpoints for use iwithini an application
__label__summary create a service record with no id description or registration time endpoint lists are set to empty lists
__label__summary deep cloning constructor
__label__summary others
__label__summary add an internal endpoint
__label__summary look up an internal endpoint
__label__summary look up an external endpoint
__label__summary handle unknown attributes by storing them in the
__label__summary the map of other attributes set when parsing theseare not included in the json value of this record when itis generated
__label__summary get the other attribute with a specific key
__label__summary get the other attribute with a specific key
__label__summary find an endpoint by its api
__label__summary guarded by @link fs namesystem#read lock
__label__summary shallow clone all endpoints will be shared across instances
__label__summary an extension of the i memory block retrieval extension interface that supportsmemory spaces the memory space interface is provisional thus this classcannot yet be api@author alain lee and john cortell
__label__summary a generic j unit test which tests creation typically through a constructor orstatic factory method of a set cant be invoked directly please see
__label__summary setting per directory file limit to 
__label__summary test root directory path 
__label__summary testing path generation from to zz
__label__summary making sure directory and becomes nonfull so that they arereused for future get relative path for localization calls in the orderthey are freed
__label__summary after below call directory should become full
__label__summary checking for first four paths
__label__summary releasing two files from the root directory
__label__summary space for two files should be available in root directory
__label__summary as no space is now available in root directory so it should be from first sub directory
__label__summary finish filling the other directory
__label__summary caller to @link #get memory spaces provides one of these as thatmethod may need to consult the debugger backend and thus needs to beasynchronous
__label__summary tests for @link immutable list multimap
__label__summary suite
__label__summary serializable tester
__label__summary serializable tester
__label__summary this states the invalid identifier of resource manager this is used as adefault value for initializing rm identifier currently rm is using timestamp as rm identifier
__label__summary provides the string encoding of a memory space qualified address thismethod is called when having to represent a memoryspace qualifiedaddress as a single string
__label__summary creates and closes a file of certain length calls append to allow next write operation to add to the end of it after write invocation calls hflush to make sure that data sunk throughthe pipeline and check the state of the last blocks replica it supposes to be in rbw state@throws io exception in case of an error
__label__summary these two test cases are already implemented by@link test read while writing
__label__summary click the button for decreasing size
__label__summary click the button for increasing size
__label__summary utility @link cache loader implementations intended for use in testing
__label__summary returns a @link cache loader that implements a naive @link cache loader#load all delegating@link cache loader#load calls to @code loader
__label__summary returns a @link cache loader that returns the given @code constant for every request
__label__summary returns a @link cache loader that returns the given @code constant for every request
__label__summary returns a @link cache loader that throws the given error for every request
__label__summary returns a @link cache loader that returns the key for every request
__label__summary returns a @code new object for every request and increments a counter for every request the count is accessible via @link #get count
__label__summary returns a @code new object for every request and increments a counter for every request an @code integer loader that returns the key for @code load requests and increments theold value on @code reload requests the load counts are accessible via @link #get load countand @link #get reload count
__label__summary reload
__label__summary cost for the entire function call
__label__summary no udc will be performed
__label__summary compares this function call cost to another one
__label__summary prefer normal functions over template functions
__label__summary using declarations in classes can be overridden
__label__summary at this point prefer nonindex bindings
__label__summary guarded by @link fs namesystem#read lock
__label__summary braced initializer list for example as inpre int a pre
__label__summary returns the size of the initializer list including trivial initializers this size maybe larger than the length of the array returned by @link #get initializers
__label__summary returns the list of initializers depending on how the ast was created this may omittrivial initializers in order to save memory
__label__summary add an initializer clause to the initializer list depending on how the ast is created theinitializer may be codenullcode a codenullcode initializer will not be returnedby @link #get initializers however it contributes to the actual element count #get size
__label__summary build layout version and corresponding feature matrix
__label__summary enums for features that change the layout versionbrbr to add a new layout versionulli define a new enum constant with a short enum name the new layout versionand description of the added featureli
__label__summary data node feature that is added at layout version @code lv 
__label__summary data node feature that is added at layout version @code ancestory lv
__label__summary returns a string for the given ast used for debugging
__label__summary returns a string for the given c element used for debugging
__label__summary tells whether the given c element is the onereported as currently being reconciled
__label__summary informs that reconciling of the ast of the given translation unit has finished
__label__summary informs that reconciling computation of the ast for the given elementis about to be started
__label__summary check whether the given translation unit is the active element of this cache
__label__summary set the given translation unit as active element to cache an ast for
__label__summary creates a new translation unit ast
__label__summary disposes the cached ast
__label__summary caches the given ast for the given translation unit
__label__summary releases a shared ast previously acquired by calling@link #acquire shared asti translation unit i index boolean i progress monitor
__label__summary provides a shared ast of a single translation unit at a time
__label__summary tells whether this class is in debug mode
__label__summary provides the memory spaces available for the given debug context@param contexta debug context@param requestthe asynchronous data request object@return an array of memory space identifiers
__label__summary new button
__label__summary guarded by @link fs namesystem#read lock
__label__summary the inverse of @link #encode address string string@param strthe encoded string@return the result of decoding the string into its components never null@throws core exceptionif decoding and string is not in the expected format
__label__summary provides the string encoding of a memory space qualified address thismethod is called when having to represent a memoryspace qualifiedaddress as a single string@param expressionthe expression representing a location within a memory space this can be a simple numeric expression like x orsomething more complex eaxg customer count@param memory space i da string which represents the memory space@return the encoded string representation of the address or null toindicate no custom encoding is required
__label__summary signal ast change
__label__summary dont report call from dispose ast
__label__summary dont report call from dispose ast
__label__summary retrieves and returns a memory block@param expressionexpression to be evaluated to an address@param contexta debug context@param memory space i dthe memory space the block is being requested for or null ifna@return a memory block based on the given parameters@throws debug exceptionif unable to retrieve the specified memory
__label__summary returns a shared ast for the given translation unit and locks it forexclusive access an ast obtained from this method has to be releasedby calling @link #release shared astiast translation unit subsequent call to this method will block until the ast is released
__label__summary executes @link ast runnable#run on asti language iast translation unit with the as tprovided by this cache for the given translation unit handles acquiringand releasing the index readlock for the client
__label__summary other reconciler was faster still need to trigger notify
__label__summary try again
__label__summary check whether active element is still valid
__label__summary wait for ast
__label__summary no cached ast but wait
__label__summary no ast no wait we are done
__label__summary no cached ast
__label__summary if wait no ast no wait we are done if debug systemoutprintlndebugprefix get thread name returning null waitno for t unitget element name nonnls return null 
__label__summary return true if creating a memory block with a null memory space id is no tsupported some debuggers may not have the ability to infer the memoryspace from an expression in which case the user should be forced toselect a memory space when being prompted for a memory location
__label__summary cached ast is valid
__label__summary ast has been invalidated by index write access
__label__summary ast is cached
__label__summary returns a shared translation unit ast for the given translation unitp clients are not allowed to modify the ast and must hold an index readlock prior to calling this method and continue to hold the lock as longas the ast is being used
__label__summary create a new ast cache
__label__summary indicates whether the ast is currently being computed
__label__summary the timestamp of the last index write access at the timethe ast got cached a cached ast becomes invalid on any indexwrite access afterwards
__label__summary the cached ast if any
__label__summary the active translation unit for which to cache the ast
__label__summary do something with the given ast
__label__summary do something with an ast
__label__summary tests that blocksize is never zero for a file either in the fs defaultor the file status value of a queried file
__label__summary utility methods to check preconditionsp commonly used for method arguments preconditions
__label__summary verifies a variable is not null
__label__summary verifies a list does not have any null elements
__label__summary verifies a string is not null and not emtpy
__label__summary verifies a string list is not null and not emtpy
__label__summary verifies a value is a valid identifiercodeaz azaz az\code up to a maximum length
__label__summary verifies an integer is greater than zero
__label__summary verifies an integer is greater or equal to zero
__label__summary verifies an long is greater or equal to zero
__label__summary this interface represents a postfix array subscript expression xyztt
__label__summary date time etc localisation service for all widgets caches all loadedlocales as json objects
__label__summary try to query them back out
__label__summary persisted entity should remain in the same em which should still be open
__label__summary pretend that the request was started here
__label__summary guarded by @link fs namesystem#read lock
__label__summary startup persistence
__label__summary for instance a sessionperrequest strategy will control the opening and closing of the em atits own manual discretion as opposed to a transactional unit of work
__label__summary interface for getting a secret key associated with some application
__label__summary gets an appropriate sasl user for the given app id
__label__summary gets an appropriate sasl secret key for the given app id
__label__summary @link task attempt info is a collection of statistics about a particulartaskattempt gleaned from jobhistory of the job
__label__summary get the final @link state of the taskattempt
__label__summary get the total runtime for the taskattempt
__label__summary get the @link task info for the given taskattempt
__label__summary provides access to the properties of a debug target
__label__summary adds a property change listener to this target has no affect if the identical listener is already registered
__label__summary removes the given listener from this target has no affect if the listener is not registered
__label__summary path to redirect to
__label__summary index for the parsed route result
__label__summary get the address the http server is bound to
__label__summary set a path to redirect the user to if they just go to forinstance goes to yarnapps this allows the filters tomore easily differentiate the different webapps
__label__summary setup of a webapp serving route
__label__summary handler for @link grid double click events that happen in the body of the grid
__label__summary main class for a series of namenode benchmarks each benchmark measures throughput and average execution timeof a specific namenode operation eg file creation or block reports
__label__summary we do not need many handlers since each thread simulates a handler by calling namenode methods directly
__label__summary turn off minimum block size verification
__label__summary set exclude file
__label__summary change log level to name node logs
__label__summary @since 
__label__summary base class for collecting operation statistics overload this class in order to run statistics for aspecific namenode operation
__label__summary number of threads
__label__summary number of operations requested
__label__summary number of operations executed
__label__summary sum of times for each op
__label__summary time from start to finish
__label__summary dont clean base directory on exit
__label__summary logging level error by default
__label__summary user group cache refresh count
__label__summary operation name
__label__summary @since 
__label__summary parse command line arguments
__label__summary generate inputs for each daemon thread
__label__summary this corresponds to the arg argument of@link #execute opint int string which can have different meaningsdepending on the operation performed
__label__summary execute namenode operation
__label__summary print the results of the benchmarking
__label__summary thread index nr threads
__label__summary execute in a separate thread
__label__summary if num threads num ops required then the remaining threads will do nothing
__label__summary try threadsleep catch interrupted exception e 
__label__summary not allowed on frozen ast@deprecated replaced by @link #set argumentiast initializer clause
__label__summary returns the subscript expression or codenullcode consider using @link #get argument@deprecated replaced by @link #get argument
__label__summary parse first arguments corresponding to the op option
__label__summary process common options
__label__summary one of the threads that perform stats operations
__label__summary argument passed to execute op
__label__summary schedule to stop this daemon
__label__summary clean all benchmark result directories
__label__summary not allowed on frozen ast@since 
__label__summary operation types
__label__summary do nothing
__label__summary does not require the argument
__label__summary remove entire benchmark directory
__label__summary file creation statistics each thread creates the same or number of files file names are pregenerated during initialization the created files do not have blocks
__label__summary operation types
__label__summary parse command line
__label__summary returns client name
__label__summary do file create
__label__summary returns the operand of this expression in c the operand can be a braced initializer list@since 
__label__summary directory creation statistics each thread creates the same or number of directories directory names are pregenerated during initialization
__label__summary operation types
__label__summary parse command line
__label__summary returns client name
__label__summary do mkdirs operation
__label__summary open file statistics measure how many open calls get block locationsthe namenode can handle per second
__label__summary operation
__label__summary do not generate files use existing ones
__label__summary create files using ops per thread
__label__summary create files if they were not created before
__label__summary set the expression that represents the array@param expressioncodeiast expressioncode to be set
__label__summary use the same files for open
__label__summary do file open
__label__summary delete file statistics measure how many delete calls the namenode can handle per second
__label__summary operation types
__label__summary list file status statistics measure how many getfilestatus calls the namenode can handle per second
__label__summary operation types
__label__summary rename file statistics measure how many rename calls the namenode can handle per second
__label__summary operation types
__label__summary minimal datanode simulator
__label__summary only one storage
__label__summary get the expression that represents the array@return codeiast expressioncode that represents the array
__label__summary actual number of blocks
__label__summary get versions from the namenode
__label__summary register datanode
__label__summary first block reports
__label__summary send a heartbeat to the namenode ignore reply commands
__label__summary register datanode
__label__summary fill remaining slots with blocks that do not exist
__label__summary send a heartbeat to the namenode and replicate blocks if requested
__label__summary keep it for future block received benchmark
__label__summary this interface represents a postfix array subscript expression xyztt@noextend this interface is not intended to be extended by clients@noimplement this interface is not intended to be implemented by clients
__label__summary register datanode
__label__summary send a copy of a block to another datanode
__label__summary transfer blocks to another datanode just report on behalf of the other datanodethat the blocks have been received
__label__summary block report statistics each thread here represents its own datanode datanodes send the same block report each time the block report may contain missing or nonexisting blocks
__label__summary array of datanodes sorted by name
__label__summary set heartbeat interval to min so that expiration were min
__label__summary adjust replication to the number of datanodes
__label__summary parse command line
__label__summary create datanodes
__label__summary create files
__label__summary prepare block reports
__label__summary retry client protocoladd block if it throws not replicated yet exception because add block also commits the previous blockit fails if enough ib rs are not processed by name node
__label__summary does not require the argument
__label__summary measures how fast replication monitor can compute datanode work it runs only one thread until no more work can be scheduled
__label__summary parse command line
__label__summary start datanodes create a bunch of files generate block reports
__label__summary stop replication monitor
__label__summary report blocks once
__label__summary decommission datanodes
__label__summary set node replication limit
__label__summary does not require the argument
__label__summary compute datanode work
__label__summary main method of the benchmark
__label__summary start the name node
__label__summary run each benchmark
__label__summary print statistics
__label__summary configurable
__label__summary configurable
__label__summary main class for a series of namenode benchmarks each benchmark measures throughput and average execution timeof a specific namenode operation eg file creation or block reports
__label__summary we do not need many handlers since each thread simulates a handler by calling namenode methods directly
__label__summary turn off minimum block size verification
__label__summary set exclude file
__label__summary change log level to name node logs
__label__summary base class for collecting operation statistics overload this class in order to run statistics for aspecific namenode operation
__label__summary number of threads
__label__summary number of operations requested
__label__summary number of operations executed
__label__summary sum of times for each op
__label__summary time from start to finish
__label__summary dont clean base directory on exit
__label__summary logging level error by default
__label__summary user group cache refresh count
__label__summary operation name
__label__summary parse command line arguments
__label__summary generate inputs for each daemon thread
__label__summary this corresponds to the arg argument of@link #execute opint int string which can have different meaningsdepending on the operation performed
__label__summary execute namenode operation
__label__summary print the results of the benchmarking
__label__summary thread index nr threads
__label__summary execute in a separate thread
__label__summary if num threads num ops required then the remaining threads will do nothing
__label__summary try threadsleep catch interrupted exception e 
__label__summary parse first arguments corresponding to the op option
__label__summary process common options
__label__summary one of the threads that perform stats operations
__label__summary argument passed to execute op
__label__summary schedule to stop this daemon
__label__summary clean all benchmark result directories
__label__summary operation types
__label__summary do nothing
__label__summary does not require the argument
__label__summary remove entire benchmark directory
__label__summary file creation statistics each thread creates the same or number of files file names are pregenerated during initialization the created files do not have blocks
__label__summary operation types
__label__summary parse command line
__label__summary returns client name
__label__summary do file create
__label__summary directory creation statistics each thread creates the same or number of directories directory names are pregenerated during initialization
__label__summary operation types
__label__summary parse command line
__label__summary returns client name
__label__summary do mkdirs operation
__label__summary open file statistics measure how many open calls get block locationsthe namenode can handle per second
__label__summary operation
__label__summary do not generate files use existing ones
__label__summary create files using ops per thread
__label__summary create files if they were not created before
__label__summary use the same files for open
__label__summary do file open
__label__summary delete file statistics measure how many delete calls the namenode can handle per second
__label__summary operation types
__label__summary list file status statistics measure how many getfilestatus calls the namenode can handle per second
__label__summary operation types
__label__summary rename file statistics measure how many rename calls the namenode can handle per second
__label__summary operation types
__label__summary minimal datanode simulator
__label__summary only one storage
__label__summary actual number of blocks
__label__summary get versions from the namenode
__label__summary register datanode
__label__summary first block reports
__label__summary send a heartbeat to the namenode ignore reply commands
__label__summary register datanode
__label__summary fill remaining slots with blocks that do not exist
__label__summary send a heartbeat to the namenode and replicate blocks if requested
__label__summary keep it for future block received benchmark
__label__summary register datanode
__label__summary send a copy of a block to another datanode
__label__summary transfer blocks to another datanode just report on behalf of the other datanodethat the blocks have been received
__label__summary block report statistics each thread here represents its own datanode datanodes send the same block report each time the block report may contain missing or nonexisting blocks
__label__summary array of datanodes sorted by name
__label__summary set heartbeat interval to min so that expiration were min
__label__summary adjust replication to the number of datanodes
__label__summary parse command line
__label__summary create datanodes
__label__summary create files
__label__summary prepare block reports
__label__summary retry client protocoladd block if it throws not replicated yet exception because add block also commits the previous blockit fails if enough ib rs are not processed by name node
__label__summary does not require the argument
__label__summary measures how fast replication monitor can compute datanode work it runs only one thread until no more work can be scheduled
__label__summary parse command line
__label__summary simple container filter checking whether an item property value is null this filter also directly supports inmemory filtering@since 
__label__summary start datanodes create a bunch of files generate block reports
__label__summary stop replication monitor
__label__summary report blocks once
__label__summary decommission datanodes
__label__summary set node replication limit
__label__summary does not require the argument
__label__summary compute datanode work
__label__summary main method of the benchmark
__label__summary constructor for a filter that compares the value of an item property withnull
__label__summary start the name node
__label__summary run each benchmark
__label__summary print statistics
__label__summary configurable
__label__summary configurable
__label__summary only objects of the same class can be equal
__label__summary get the size of each subqueue the index corresponding to the priority level
__label__summary testing single name reference with prefix
__label__summary note macros are omitted intentionally
__label__summary checks the properties one by one
__label__summary returns the property id of the property tested by the filter not nullfor valid filters
__label__summary this class implements the gwt serialization of @link array list multimap
__label__summary test the @link rolling file system sink class in the context of hdfs with kerberos enabled
__label__summary do a basic write test against an hdfs cluster with kerberos enabled weassume that if a basic write succeeds more complex operations will alsosucceed
__label__summary restore nonsecure conf
__label__summary do a basic write test against an hdfs cluster with kerberos enabled butwithout the principal and keytab properties set
__label__summary restore nonsecure conf
__label__summary create the tmp directory as ihdfsi and tmptest as isinki andreturn the ugi for isinki
__label__summary setup the kdc for testing a secure hdfs cluster
__label__summary stop the minikdc
__label__summary creates a configuration for starting a secure cluster
__label__summary limit applications to those in states relevant to scheduling
__label__summary tests for grid state
__label__summary setting table height and setting column header mode as hidden leaves the bodyheight of the table as it would be with the headers visible and leaves anempty area below the body
__label__summary table body height is now px which together with header makes px
__label__summary header disappears but table body height stays at px and below the body is an empty area same height as header would have
__label__summary this class represent a naming service for checkpoints
__label__summary generate a new checkpoint name
__label__summary used by the @link history viewer to print job history in a machinereadable json format
__label__summary returns the gdbmi thread group identifier of this context
__label__summary print out the job history to the given @link print stream in amachinereadable json format
__label__summary killed jobs might not have counters
__label__summary killed tasks might not have counters
__label__summary an container context object in the gdbmi protocol thread groupsare used as containers of threads and are represented by a stringidentifier these thread groups are the basis for this context@since 
__label__summary interface defining an ic project description storage typeused as a factory for creating project description storagesfor a give project
__label__summary the file name in which the storage type and version are stored
__label__summary the document version attribute
__label__summary the root element in a cproject file
__label__summary the documents storage type id attribute in the root element
__label__summary public static final string storagetypeattribute storagetypeid nonnls
__label__summary the type as defined in the c project description storage extension point wraps theimplemented ic project description type to provide proxy object for use by c project description storage manager
__label__summary c project description proxy type
__label__summary constructor verifies that version is in the range minversion maxversion
__label__summary indicates if this type is compatible with the provided version
__label__summary if an exception occurred return the default value
__label__summary return a new storage instance to be for persisting loading cproject descriptionsfrom the passed in i project
__label__summary method indicating whether this project storage type writes a cproject file if this method returns true then you must ensure that the cproject file is anxml file with a @link #storageversionname tag and @link #storagetypeattribute idin the @link #storagerootelementname egpreltxml version encodingutfgtltfile version gtltcproject storage typestoragetypeidgt ltcprojectgt
__label__summary expected
__label__summary scroll a bit beyond so we see below
__label__summary configure the page blob directories key so every file created is a page blob
__label__summary configure the atomic rename directories key so every folder will have atomic rename applied
__label__summary the following tests are failing on azure and the azurefile system code needs to be modified to make them passa separate work item has been opened for this
__label__summary http cors request headers
__label__summary http cors response headers
__label__summary filter configuration
__label__summary return the target node of this modification
__label__summary return the new node of this modification or codenullcode
__label__summary returns the edit group to collect the text edits of this modification
__label__summary this represents the job configuration properties
__label__summary load the parsers
__label__summary add the default map reduce filter
__label__summary filter out the desired config keyvalue pairs
__label__summary find a parser for this key
__label__summary define a configuration object and load it with original job properties
__label__summary test dir operations on a the local fs
__label__summary do nothing
__label__summary do nothing leave prefix empty
__label__summary provide parameter info as context information that is tied to the completion proposal
__label__summary utility classes to compute file checksum for both replicated and stripedfiles
__label__summary a common abstract class to compute file checksum
__label__summary constructor that accepts all the input parameters for the computing
__label__summary perform the file checksum computing the intermediate results are storedin the object and will be used later
__label__summary compute and aggregate block checksums block by block
__label__summary make final file checksum result given the computing process done
__label__summary compute file md
__label__summary create and return a sender given an io stream pair
__label__summary close an io stream pair
__label__summary replicated file checksum computer
__label__summary get block checksum for each block
__label__summary refetch to get fresh tokens
__label__summary return true when sounds good to continue or retry false when severecondition or totally failed
__label__summary try each datanode location of the block
__label__summary actually its not done but well retry
__label__summary repeat at block idxth block
__label__summary try one replica or datanode to compute the block checksum given a block
__label__summary get block md
__label__summary read byteperchecksum
__label__summary first block
__label__summary read crcperblock
__label__summary read md
__label__summary read crctype
__label__summary striped file checksum computing
__label__summary refetch to get fresh tokens
__label__summary try each datanode in the block group
__label__summary repeat at bg idxth block
__label__summary eturn true when sounds good to continue or retry false when severecondition or totally failed
__label__summary get block md
__label__summary read byteperchecksum
__label__summary read crcperblock
__label__summary first block
__label__summary read md
__label__summary read crctype
__label__summary if crc types are mixed in a file
__label__summary the underlying action for this delegate
__label__summary this actions view part or codenullcodeif not installed in a view
__label__summary cache of the most recent seletion
__label__summary whether this delegate has been initialized
__label__summary the window associated with this action delegate may be codenullcode
__label__summary background job for this action or codenullcode if none
__label__summary constructs a new job to perform a debug request for example stepin the background
__label__summary sets the selection to operate on
__label__summary its crucial that delegate actions have a zeroarg constructor so thatthey can be reflected into existence when referenced in an action setin the plugins pluginxml file
__label__summary disable the action so it cannot be run again until an event or selection change updates the enablement
__label__summary runs this action in a background job
__label__summary runs this action in the ui thread
__label__summary returns whether or not this action should be run in the background subclasses may override
__label__summary abstract debug action delegates come in flavors i view action delegatei workbench window action delegate delegatespullii view action delegate delegate get view nulllilii workbench window action delegate get view nullliulp only want to call updateaction selection for i view action delegates an initialize call to updateaction selection is made for all flavors to set the initialenabled state of the underlying actioni workbench window action delegates listen to selection changesin the debug view onlyp
__label__summary performs the specific action on this element
__label__summary returns the string to use as an error dialog title fora failed action default is to return null
__label__summary returns the string to use as an error dialog message fora failed action this message appears as the message inthe error dialog for this action default is to return null
__label__summary returns the string to use as a status message fora failed action this message appears as the reasonin the error dialog for this action default is to return the empty string
__label__summary returns this actions view part or codenullcodeif not installed in a view
__label__summary initialize this delegate updating this delegatespresentation as well all of the flavors of abstract debug action delegates need tohave the initial enabled state set with a call to updatei action i selection
__label__summary update on the selection in the debug view
__label__summary returns the most recent selection
__label__summary get selection
__label__summary sets the most recent selection
__label__summary return whether the action should be enabled or not based on the given selection
__label__summary the name of the sub actions
__label__summary add @link mutable metric for a method annotated with @link metric
__label__summary set the source field to mutable metric
__label__summary skip fields already set
__label__summary change the declared field @code field in @code source object to@link mutable metric
__label__summary create a new registry according to annotation
__label__summary get the registry if it already exists
__label__summary helper class to build @link metrics source object from annotationsp for a given source objectulli sets the @link fields annotated with @link metric to@link mutable metric and adds it to the @link metrics registrylili for @link methods annotated with @link metric creates@link mutable metric and adds it to the @link metrics registryliul
__label__summary a commaseparated string of the actual content of each sub command this is the string than can be sent to gdb
__label__summary depends on whether the ws config is active
__label__summary the number of steps this whilestepping command will occur
__label__summary notification that the selection of configurations in some project in the current working setconfiguration has changed i accordingly update the visuals of the workingset configuration toindicate whether it is active or not
__label__summary updates the enablement state of the action buttons according to the current selection
__label__summary show the problem
__label__summary it is possible that some project configurations had to applied in order to effect a build refresh to handle that case
__label__summary handler for the build button
__label__summary lighterweight updates of its configs
__label__summary major change refresh it altogether
__label__summary update all workingset configs that intersect this config
__label__summary updates the display to reflect potential changes in project activation and the resulting changes inworkingset config activation if any
__label__summary handler for the activate button
__label__summary take all the sub action names and find their corresponding action then build the content string
__label__summary handler for the rename button
__label__summary handler for the remove button
__label__summary this is a recently used working set
__label__summary handler for the add button
__label__summary tell the project controller
__label__summary handles selection of working sets and their configurations among potentially other actions thisinjects the workingset configuration selection into the project configurations controller and updatesthe enablement of the buttons
__label__summary handle button press
__label__summary handles button presses in the working set configurations pane
__label__summary not interesting
__label__summary remove last comma
__label__summary connects me to the controller for the project configurations pane into which i inject the currentlyselected working set configuration
__label__summary assigns me my build button
__label__summary assigns me my activate button
__label__summary assigns me my rename button
__label__summary assigns me my remove button
__label__summary assigns me my add button
__label__summary make the selection
__label__summary assigns the tree viewer that i control
__label__summary create command to be sent to gdb
__label__summary initializes
__label__summary initializes me we an initial working set to select
__label__summary the view controller for the working set configurations pane in the dialog it takes care of coordinatingthe user gestures in the pane with the working set configuration model and viceversa it also implementsthe handling of the action buttons
__label__summary visits connector classes and check for methods with @ on state changeannotations
__label__summary find all the annotated methods in all the superclasses
__label__summary pass
__label__summary nonnull array of zero length
__label__summary array length is highest character value 
__label__summary array length is highest character value 
__label__summary the final element should always be non null
__label__summary event dispatcher interface it dispatches events to registeredevent handlers based on event types
__label__summary configuration to make sure dispatcher crashes but doesnt do systemexit in case of errors by default it should be false so that tests are not affected for all daemons it should be explicitly set to true so that daemons can crash instead of hanging around
__label__summary job file name is set in task attempt setting it null here
__label__summary test that the hdfs audit logger respects dfsnamenodeauditlogdebugcmdlist
__label__summary constants used for remote cdt connection propertiesstrongexperimentalstrong this class or interface has been added as partof a work in progress there is no guarantee that this api will work or thatit will remain the same please do not use this api without consulting withthe a hrefhttpwwweclipseorgdsdptm target managementa teamp
__label__summary check that the value change listener for a text field is triggered exactlyonce when setting the value at the correct time
__label__summary case where the text field only uses its internal buffer no externalproperty data source
__label__summary test that field propagates value change events originating from propertybut dont fire value change events twice if value has only changed once
__label__summary defaults buffering off
__label__summary expectations and start test
__label__summary add listener and set the value should end up in listener once
__label__summary ensure listener was called once
__label__summary get value should not fire value change again
__label__summary ensure listener still has been called only once
__label__summary value change events from property should not propagate if read through isfalse execpt when the property is being set
__label__summary set buffering
__label__summary value change should only happen once when setting the property further changes via property should not cause value change listener in field to be notified
__label__summary ensure listener was called once
__label__summary modify property value should not fire value change in field as the read buffering is on read through false
__label__summary ensure listener still has been called only once
__label__summary get value should not fire value change again
__label__summary field value should be different from the original value and current proeprty value
__label__summary ensure listener still has been called only once
__label__summary a converter that converts from @link string to @link big decimal and back uses the given locale and a @link number format instance for formatting andparsing
__label__summary a storage policy specifies the placement of block replicas on specificstorage types
__label__summary return the name of the storage policy policies are uniquelyidentified by name
__label__summary return the preferred storage types associated with this policy thesestorage types are used sequentially for successive block replicas
__label__summary get the fallback storage types for creating new block replicas fallbackstorage types are used if the preferred storage types are not available
__label__summary get the fallback storage types for replicating existing block replicas fallback storage types are used if the preferred storage types are notavailable
__label__summary returns true if the policy is inheritonly and cannot be changed foran existing file
__label__summary cc extension of codei threadcode
__label__summary the window will enqueue a nonimmediate message reporting its current position
__label__summary remove window immediately when the current response is sent
__label__summary clicking the button will trigger sending the window coordinates but the window is already removed at that point
__label__summary returns the properties that should be flushed for the element
__label__summary element update tester extension which allows an update policy to selectivelyflush properties of elements this can be useful if the update testers eventonly affects a certain aspect of the elements presentation
__label__summary bind context to the default initial context
__label__summary bind to data source from jndi
__label__summary a dummy entry point of the test module
__label__summary partitions the key spacepcode partitionercode controls the partitioning of the keys of theintermediate mapoutputs the key or a subset of the key is used to derivethe partition typically by a hash function the total number of partitionsis the same as the number of reduce tasks for the job hence this controlswhich of the codemcode reduce tasks the intermediate key and hence therecord is sent for reductionp
__label__summary get the paritition number for a given key hence record given the totalnumber of partitions ie number of reducetasks for the jobp typically a hash function on a all or a subset of the keyp
__label__summary a @link preemption message is part of the rmam protocol and it is used bythe rm to specify resources that the rm wants to reclaim from this@code application master am the am receives a @link strict preemption contract message encoding which containers the platform mayforcibly kill granting it an opportunity to checkpoint state or adjust itsexecution plan the message may also include a @link preemption contractgranting the am more latitude in selecting which resources to return to thecluster
__label__summary p the opportunistic container allocator allocates containers on a given listof nodes after it modifies the container sizes to within allowable limitsspecified by the code cluster managercode running on the rm it tries todistribute the containers as evenly as possible it also uses thecodenm token secret manager in nmcode to generate the required nm tokens forthe allocated containersp
__label__summary bias away from whatever we have already allocated and respect blacklist
__label__summary normalize the resource asks similar to what the the rm scheduler does before accepting an ask
__label__summary rpc layer client expects ipport as service for tokens
__label__summary tests calendar via prepared screenshots calendar event not shown correctlywhen partially out of view #
__label__summary i binding declarator
__label__summary a core component of a module or injectorp the elements of a module can be inspected validated and rewritten use @link elements#get elementscomgoogleinject module elementsget elements to read the elementsfrom a module and @link elements#get module iterable elementsget module to rewrite them this can be used for static analysis and generation of guice modulesp the elements of an injector can be inspected and exercised use @linkcomgoogleinject injector#get bindings injectorget bindings to reflect on guice injectors
__label__summary returns an arbitrary object containing information about the place where this element wasconfigured used by guice in the production of descriptive error messagesp tools might specially handle types they know about @code stack trace element is a goodexample tools should simply call @code to string on the source object if the type isunfamiliar
__label__summary accepts an element visitor invokes the visitor method specific to this elements type
__label__summary writes this module element to the given binder optional operation
__label__summary temporary storage for pointer modifiers
__label__summary stores pointer and array modifiers that are applied to the declarator
__label__summary add the autotools builder to the project
__label__summary add the builder to the project
__label__summary other pieces of wizard might have contributed new builder commands need to make sure we are using the most recent ones
__label__summary add autotools configuration builder just before builder
__label__summary make sure that the autotools builder precedes the managed builder or the remote synchronized builder
__label__summary ignore it
__label__summary make sure the autotools configuration builder just precedes the common builder
__label__summary utility method for adding an autotools nature to a project
__label__summary utility method for adding a nature to a project
__label__summary link the types together
__label__summary utility method to remove the autotools nature from a project
__label__summary utility method to remove the old autotools nature from a project
__label__summary utility method for removing a project nature from a project
__label__summary basic editor for qml thus far has only syntax highlighting capabilities
__label__summary setup bracket matching with default color being gray
__label__summary represents a frame on the declaration stack used by the resolver actions
__label__summary check for ic dynamic printf first because they are also ic line breakpoint
__label__summary check for ic tracepoint first because they are also ic line breakpoint
__label__summary there is no file associated with this breakpoint see if another editor is available from an adapter
__label__summary create an external editor input with an external tu so when you open the file from the breakpoints view it opens in the proper editor
__label__summary try resolving the path to a real io file
__label__summary select the most relevant i file for an external location
__label__summary not backed by an i file try its source handle may be workspace project based
__label__summary if the bps marker is on an i file job done
__label__summary supporting utility classes used by t file and shared by users of t file
__label__summary prevent the instantiation of utils
__label__summary nothing
__label__summary encoding an integer into a variablelength encoding format synonymous tocode utils#write v longout ncode
__label__summary encoding a long integer into a variablelength encoding format
__label__summary test more complicated directory
__label__summary testing directory with file
__label__summary test empty directory
__label__summary remove button
__label__summary test when input path is a directory
__label__summary test when input path is a file
__label__summary upper bound binary search find the index to the first element in the listthat compares greater than the input key
__label__summary lower bound binary search find the index to the first element in the listthat compares greater than or equal to key
__label__summary create and write a file that contains three blocks of data
__label__summary upper bound binary search find the index to the first element in the listthat compares greater than the input key
__label__summary lower bound binary search find the index to the first element in the listthat compares greater than or equal to key
__label__summary compare this version with another version
__label__summary test compatibility
__label__summary return a string representation of the version
__label__summary get the size of the serialized version object
__label__summary get the minor version
__label__summary get the major version
__label__summary write the objec to a data output the serialized format of the version ismajor version followed by minor version both as bigendian shortintegers
__label__summary constructor
__label__summary sets the root testing directory and reinitializes any additional test pathsthat are under the root this method is intended to be called from asubclasss @ before class method if there is a need to override the testingdirectory
__label__summary construct the version object by reading from the input stream
__label__summary a generic version class we suggest applications built on top of t file usethis class to maintain version information in their meta blocks
__label__summary read a string as a v int n followed by n bytes in text format
__label__summary write a string as a v int n followed by n bytes as in text format
__label__summary decoding the variablelength integer suppose the value of the first byteis fb and the following bytes are nb
__label__summary decoding the variablelength integer synonymous tocodeint utils#read v longincode
__label__summary fall it through to first byte len
__label__summary fall it through to first byte len
__label__summary fall it through to first byte len
__label__summary how many bytes do we need to represent the number with sign bit
__label__summary this class tests the file status api
__label__summary the dynamic debugger tab for docker container launches using gdb server thegdbserver settings are used to start a gdbserver session in the docker container and then to connect to it from the host
__label__summary gdbset
__label__summary abstract builder test which provides utility methods for
__label__summary cleanup any projects we were using
__label__summary run a build of the specified kind and verify that the resource changes thatresult match the expectations of the given verifier
__label__summary build the specified configurations and verify that the resource changes thatresult match the expectations of the given verifier
__label__summary batch changes
__label__summary set the active configuration of a project by configuration name
__label__summary returns an array of resources expected to be generated by building a project configuration the object files expected to be output can also be specified
__label__summary add subdirmk in the same directory
__label__summary if the parent of the obj doesnt exist then ensure were expecting that too
__label__summary project
__label__summary resource workspace path
__label__summary line number
__label__summary severity
__label__summary append the rest of the string fields
__label__summary finally print the string
__label__summary update the status message and button state based on the input selectedby the user
__label__summary make sure that the name is at least one character in length
__label__summary if current namelength s nonnls make sure the name is not a duplicate else if is duplicate namecurrent name s nlsbind messages rename configurationerrorduplicate name current name else if is similar namecurrent name s nlsbind messages rename configurationerrorcase name current name else if validate namecurrent name s nlsbind messages rename configurationerrorinvalid name current name 
__label__summary this method is quick pass path reconciler
__label__summary make sure the name is not a duplicate
__label__summary checks the argument for leading whitespaces and invalid directory name characters
__label__summary iterate over the name checking for bad characters
__label__summary no whitespaces at the start of a name
__label__summary config name must be a valid dir name too so we ban \ in the names
__label__summary return true if there is already a config of that name defined on the target
__label__summary return true if there is already a config of that name defined
__label__summary add a label and a text widget for configurations description
__label__summary add a label and a text widget for configurations name
__label__summary create a group for the name description
__label__summary method declared on dialog cache the name and base config selections we dont have to worry that the index or name is wrong because weenable the ok button iff those conditions are met
__label__summary this input split contains a set of child input splits any input split insertedinto this collection must have a public default constructor
__label__summary add an input split to this collection
__label__summary get ith child input split
__label__summary return the aggregate length of all child input splits currently added
__label__summary get the length of ith child input split
__label__summary collect a set of hosts from all child input splits
__label__summary get locations from ith input split
__label__summary write splits in the following format
__label__summary generic array assignment
__label__summary replace text fields with comboboxes
__label__summary we must hook value change listener to ensure updates in all use cases eg edit mode
__label__summary also use column generator in test to ensure it is possible to build columns that update automatically
__label__summary tests for @link monitors uninterruptible methods
__label__summary index for output array
__label__summary if the space is pressed on the tabs of a tabsheet the browser default scrollbehavior must be prevented
__label__summary quotes are removed
__label__summary an example for multilayer perceptron classification
__label__summary load training data
__label__summary split the data into train and test
__label__summary data frame splits data framerandom splitnew double l data frame train splits data frame test splits
__label__summary specify layers for the neural network input layer of size features two intermediate of size and and output of size classes
__label__summary create the trainer and set its parameters
__label__summary train the model
__label__summary compute precision on the test set
__label__summary used to describe the priority of the running jobdefault while submitting a job if the user is not specifying priorityyarn has the capability to pick the default priority as per its config hence map reduce can indicate such cases with this new enumundefinedpriority yarn supports priority as an integer hence other thanthe five defined enums yarn can consider other integers also to generalizesuch cases this specific enum is used
__label__summary both separators are processed
__label__summary something serializable
__label__summary tests for @code synchronized#map
__label__summary this is somewhat of a weak test we verify that all of the methods arecorrect but not that theyre actually forwarding correctly we also relyon the other tests eg synchronized set test to verify that thecollection views are synchronized correctly
__label__summary the checkpointer is responsible for supporting periodic checkpointsof the hdfs metadata
__label__summary in the same way
__label__summary create a connection to the primary namenode
__label__summary initialize checkpoint
__label__summary create connection to the namenode
__label__summary initialize other scheduling parameters from the configuration
__label__summary pull out exact http address for posting url to avoid ip aliasing issues
__label__summary shut down the checkpointer
__label__summary the main work loop
__label__summary check the size of the edit log once every minutes
__label__summary minutes
__label__summary do nothing
__label__summary no separator before not a st string symbol
__label__summary create a new checkpoint
__label__summary make sure were talking to the same nn
__label__summary we dont have enough logs to roll forward using only logs need to download and load the image
__label__summary get edits files
__label__summary keep registration up to date
__label__summary unreachable
__label__summary system flags are read only
__label__summary process as usual
__label__summary this class tests if hadoop streaming returns exceptionon failure when submitted an invalidfailed job the test case provides an invalid input file for mapreduce job asa unit test case
__label__summary class extending @link container manager impl and is used when queuing at the nm is enabled
__label__summary write nothing to output skip the next symbol
__label__summary kill running opportunistic containers to make space for guaranteed container
__label__summary the container started execution in the meanwhile
__label__summary start the execution of the given container also add it to the allocatedcontainers and update allocated resource utilization
__label__summary start execution of container
__label__summary remove the given container from the container queues
__label__summary remove the given container from the allocated containers and updateallocated container utilization accordingly
__label__summary check for case
__label__summary remove finished container from the allocated containers and attempt to start new containers
__label__summary start opportunistic containers if resources available
__label__summary start pending guaranteed containers if resources available
__label__summary if there are available resources try to start as many pending containersas possible
__label__summary subtract the overall node resources
__label__summary check for next symbol
__label__summary add to the allocation the allocation of the pending guaranteed containers that will start before the current container will be started
__label__summary subtract from the allocation the allocation of the opportunistic containers that are marked for killing
__label__summary get allocation of currently allocated containers
__label__summary calculates the amount of resources that need to be freed up by killingopportunistic containers in order for the given guaranteed container tostart its execution resource allocation to be freed up codecontainers allocationcode allocation of codeopportunistic containers to killcode allocation of codequeued guaranteed containerscode that will startbefore the given container allocation of given container total resources of node
__label__summary if there are sufficient resources to execute the given container do not kill more opportunistic containers
__label__summary go over the running opportunistic containers avoid containers that have already been marked for killing
__label__summary the additional opportunistic containers that need to be killed for the given container to start
__label__summary track resources that need to be freed
__label__summary choose the opportunistic containers to kill in order to free up resourcesfor running the given container
__label__summary kill the opportunistic containers that were chosen
__label__summary separator before 
__label__summary kill opportunistic containers to free up resources for running the givencontainer
__label__summary stop a container only if it is currently running if queued do not stopit
__label__summary to avoid multiple calculations
__label__summary lightweight profiling tool that can be used to collect profiling data withzero overhead unless enabled to enable profiling addcodeltsetproperty namevaadinprofiler valuetrue gtcode toyour gwtxml file
__label__summary class to include using deferred binding to enable the profiling
__label__summary interface for getting data from the @link profilerpb warningb this interface is most likely to change in the future
__label__summary a hierarchical representation of the time spent running a named block ofcodepb warningb this class is most likely to change in the future and istherefore defined in this class in an internal package instead of profiler where it might seem more logical
__label__summary create a new node with the given name
__label__summary to avoid duplicate separators
__label__summary gets the name of the node
__label__summary creates a new child node or retrieves and existing child and updatesits total time and hit count
__label__summary gets the total time spent in this node including time spent in subnodes
__label__summary gets the minimum time spent for one invocation of this nodeincluding time spent in sub nodes
__label__summary gets the maximum time spent for one invocation of this nodeincluding time spent in sub nodes
__label__summary gets the number of times this node has been entered
__label__summary gets the total time spent in this node excluding time spent in subnodes
__label__summary gets the child nodes of this node
__label__summary number of significant digits
__label__summary jso constructor
__label__summary checks whether the profiling gathering is enabled
__label__summary this will be fully inlined by the compiler
__label__summary enters a named block there should always be a matching invocation of@link #leave string when leaving the block calls to this method willbe removed by the compiler unless profiling is enabled
__label__summary leaves a named block there should always be a matching invocation of@link #enter string when entering the block calls to this method willbe removed by the compiler unless profiling is enabled
__label__summary returns time relative to the particular page load time the value shouldnot be used directly but rather difference between two values returned bythis method should be used to compare measurements
__label__summary resets the collected profiler data calls to this method will be removedby the compiler unless profiling is enabled
__label__summary old implementations might call reset for initialization soensure it is initialized here as well initialization has no sideeffects if already done
__label__summary initializes the profiler this should be done before calling any otherfunction in this class failing to do so might cause undesired behavior this method has no side effects if the initialization has already beendone
__label__summary outputs the gathered profiling data to the debug console
__label__summary back out of sub event
__label__summary create sub event
__label__summary overridden in @link enabled profiler to make @link #is enabled returntrue if gwtcreate returns that class
__label__summary outputs the time passed since various events recored inperformancetiming if supported by the browser
__label__summary ignore missing value
__label__summary add logger if its not already there also initializing the event arrayif needed
__label__summary remove logger function and event array if it seems like the function hasbeen added by us
__label__summary sets the profiler result consumer that is used to output the profilerdata to the userpb warningb this is internal api and should not be used byapplications or addons
__label__summary readdirplus response
__label__summary attributes follow
__label__summary next
__label__summary a @link logged single relative ranking represents an xy coordinate of asingle point in a discrete cdf
__label__summary the y coordinate as a fraction @code d d the default valueis there to mark an unfilledin value
__label__summary the x coordinate
__label__summary for input parameter ignored
__label__summary callback interface for generating custom style names for cells
__label__summary called by grid to generate a style name for a column element
__label__summary defines a viewport tag generator class that will be used for generating thecontent of a viewport tag that will be added to the html of the host page ofa ui classp if you want to use the same viewport values for all requests you can use thesimpler @link viewport annotation instead
__label__summary pa stub implementation of @link native file system store for testing@link native s file system without actually connecting to sp
__label__summary the information provider used to present focusable information shells
__label__summary this editors projection support
__label__summary this is a project file we want to be notified if the autoconf editor properties are changed such that the macro versions are changed
__label__summary gets the viewport generator class to use please note that the class mustbe public and have a default constructor it must additionally bedeclared as static if its declared as an inner class
__label__summary return a scanner for creating autoconf partitions
__label__summary return a scanner for creating autoconf partitions
__label__summary returns the autoconf code scanner
__label__summary returns the autoconf code scanner
__label__summary returns the preference color identified by the given preference
__label__summary handle the case whereby the autoconf or automake macro versions to usefor this project are changed in which case we want to invalidate and reparsethe document
__label__summary information provider used to present focusable information shells
__label__summary either freshly enabled or provider changed
__label__summary this action behaves in two different ways if there is no current texthover the tooltip is displayed using information presenter if there isa current text hover it is converted into a information presenter inorder to make it sticky
__label__summary the wrapped text operation action
__label__summary creates a dispatch action
__label__summary does an annotation hover exist
__label__summary otherwise just display the tooltip
__label__summary tries to make a text hover focusable or sticky
__label__summary default values from abstract information control manager
__label__summary tries to make an annotation hover focusable or sticky
__label__summary compute the hover information
__label__summary allow any number of lines being displayed as we support scrolling
__label__summary hover region the beginning of the concerned line to place the control right over the line
__label__summary annotation bar hover manager sets minus source viewergapsize
__label__summary modified version from text viewer
__label__summary adds the given listener has no effect if an identical listener was not already registered
__label__summary removes the given listener has no effect if an identical listener was not already registered
__label__summary notify listeners
__label__summary determines is folding enabled
__label__summary sticky hover support
__label__summary content assist
__label__summary the code abstract text editorcode implementation of thiscodei workbench partcode method creates the vertical ruler andsource viewer subclasses may extend we attach our own mouse down listener on the menu barand our own listener for cursorkeyselection events to update cursor position instatus bar
__label__summary sticky hover support
__label__summary ensure decoration support has been created and configured
__label__summary adapter factory adapting an @link idmvm context to an @link ic editor text hover
__label__summary try session specific hover
__label__summary use default
__label__summary this class is used to summarize useful shared cache manager metrics for theweb ui display
__label__summary a utility class for storing a list of external references an external reference isa pdom name that references a pdom binding in a different linkage this list can beexamined using @link #get iterator
__label__summary this data structure is a list of lists the inner lists are names that should thatshould be created in the same linkage the outer list collects the heads of theinner lists
__label__summary create a new instance at the given location in the given pdom
__label__summary return an iterator for examining all names in the external references list doesnot return null
__label__summary add the given name to this list
__label__summary external references are stored in a linked list of linkages each node in that list is a list that uses the pdom name binding list
__label__summary search through the nodes to find the one for the new names linkage keep track of the record that held the last examined node so that a new node can be appended if needed
__label__summary each node looks like int linkage id rec ptr next node rec ptr head of list 
__label__summary finally insert the new node right after the last one that was examined
__label__summary setup the new node for this linkage and initialize the list ptr with an empty list
__label__summary if there isnt already a node for this linkage then create a new one
__label__summary if the list is not empty then modify the first element to be right after the name that is being inserted
__label__summary finally make the new name the first element in the list
__label__summary this function must be used during pdom name deletion when the list head is being deleted
__label__summary find the head of this linkages list
__label__summary initialize next by advancing to the first name
__label__summary advance to the next linkage node that has a nonempty list of names return the pdom name at the head of the list this is the next name that should be returnedfrom #next return null if there are no more linkage nodes
__label__summary look through all linkage nodes to find the next one that has a nonempty names list
__label__summary generate a log message about the linkage id that is no longer valid but continue to the next node
__label__summary load nodes linkage and use it to return the first name in this nodes list
__label__summary skip over all nodes that dont have any names in their list
__label__summary use data frames and sql to count words in utf encoded \n delimited text received from thenetwork every second
__label__summary create the context with a second batch size
__label__summary create a java receiver input d stream on target ipport and count the words in input stream of \n delimited text eg generated by nc note that no duplication in storage level only for running locally replication necessary in distributed scenario for fault tolerance
__label__summary convert rd ds of the words d stream to data frame and run sql query
__label__summary do word count on table using sql and print it
__label__summary register as table
__label__summary convert java rdd string to java rddbean class to data frame
__label__summary lazily instantiated singleton instance of sql context
__label__summary common code for allowing map output classes to handle streams
__label__summary constant to specify infinite depth@see #find included byi index file int@see #find includesi index file int
__label__summary this class implements a reducer class that can be used to perform fieldselections in a manner similar to unix cut
__label__summary tests @link audit logger
__label__summary constant to find direct includes only@see #find included byi index file int@see #find includesi index file int
__label__summary test the audit log format with keyval pair
__label__summary add the first kv pair and check
__label__summary append another kv pair to already added kv and test
__label__summary audit loggeradd keysoperation operation act log exp logappend\t operationoper assert equalsexp logto string act logto string
__label__summary append another knull pair and test
__label__summary now add the target and check of the final string
__label__summary test the audit log format for successful events
__label__summary check without the ip
__label__summary test the audit log format for failure events
__label__summary test the audit log format for failure events
__label__summary constant to search for declarations this does not include definitions
__label__summary test @link audit logger without ip set
__label__summary test without ip
__label__summary a special extension of @link test impl rpc server with@link test impl#ping testing the audit logs
__label__summary test with ip set
__label__summary test @link audit logger with ip set
__label__summary make a client connection and test the audit log
__label__summary start the testcase
__label__summary constant to search for definitions this does not include declarations
__label__summary a descending wrapper around an @code immutable sorted multiset
__label__summary uses write replace not default serialization
__label__summary constant to search for references this does not include declarations or definitions
__label__summary constant to search for occurrences across language boundaries can be used to find the occurrences of a cfunction declared with extern c withinthe clinkage
__label__summary constant to search for all declarations including definitions
__label__summary creates make targets received by @link make target transfer in make target view
__label__summary implementation of the actual drop of @code drop object to @code drop container
__label__summary operation of dragging over a drop target only @link dnd#dropcopy issupported for dropping files to make target view
__label__summary this class is intended only for dragdrop between eclipse instances so dndcopy always set and we dont bother checking if the target is the source
__label__summary initial drag operation only @link dnd#dropcopy is supported fordropping files to make target view same as for @code drag over operation
__label__summary constructor setting a viewer such as tree viewer to pull selection from later on
__label__summary @code make target transfer drop target listener handles drop of make targetsonto make target view @link make target transfer is used as the transfer agent andprovides for dragdrop and copypaste between different eclipse sessions
__label__summary constant to search for all occurrences of a binding this includes declarations definitionsand references
__label__summary command line info for use with managed build command line generator
__label__summary some general purpose functions that can be useful for loggingtracingactivities this is a duplicate of logging utils inorgeclipsecdtinternalcore the idea is for core parts of dsf ones thatdont have debug in package name to have very limited dependencies on otherplugins
__label__summary return a string that uniquely identifies a java object reference in theform classname@id where classname is the simple or package qualifiedname of the objects class and id is the hash code
__label__summary equivalent to to stringobj false
__label__summary flatten out an array of strings into one string in the forms s s 
__label__summary remove the trailing comma and space
__label__summary general string utility for removing newline and space character from theend of a string typically used when logging an objects to string
__label__summary checks requested access against an access control list this method relieson finding the acl data in the relevant portions of @link fs permission and@link acl feature as implemented in the logic of @link acl storage thismethod also relies on receiving the acl entries in sorted order this isassumed to be true because the acl modification methods in@link acl transformation sort the resulting entries
__label__summary indents a line or range of lines in a c document to its correct position no complete ast must be present the indentation is computed using heuristics the algorithm used is fast forsingle lines but does not store any information and therefore not so efficient for large lineranges
__label__summary the caret offset after an indent operation
__label__summary whether this is the action invoked by tab when codetruecode indentation behavesdifferently to accommodate normal tab operation
__label__summary creates a new instance
__label__summary update has been called by the framework
__label__summary check for marginal zerolength lines
__label__summary will only happen on concurrent modification
__label__summary update caret position move to new position when indenting just one line keep selection when indenting multiple
__label__summary null object
__label__summary returns the selection on the editor or an invalid selection if none can be obtained returnsnever codenullcode
__label__summary returns the document currently displayed in the editor or codenullcode if none can beobtained
__label__summary returns the smart preference state
__label__summary either the selection has to be empty and the caret in the ws at the line start or the selection has to extend over multiple lines
__label__summary returns if the current selection is valid ie whether it is empty and the caret in thewhitespace at the start of a line or covers multiple lines
__label__summary returns the editors selection provider
__label__summary returns the codeic projectcode of the current editor input orcodenullcode if it cannot be found
__label__summary returns the possibly projectspecific core preference defined under codekeycode orcodedefcode if the value is not a integer
__label__summary returns the possibly projectspecific core preference defined under codekeycode
__label__summary returns codetruecode if line comments at column should be indented inside codefalsecode otherwise
__label__summary returns codetruecode if empty lines should be indented codefalsecode otherwise
__label__summary returns the indent size used by the editor which is deduced from theformatter preferences
__label__summary returns the tab size used by the editor which is deduced from theformatter preferences
__label__summary returns whether mixed tabsspaces should be used for indentation depending on the editor andformatter preferences
__label__summary returns whether spaces should be used exclusively for indentation depending on the editor andformatter preferences
__label__summary returns the size in characters of a string all characters count one tabs count the editorspreference for the tab display
__label__summary computes and returns the indentation for a preprocessor line
__label__summary computes and returns the indentation for a block comment line
__label__summary strip trailing space characters
__label__summary only change the document if it is a real change
__label__summary set the caret offset so it can be used when setting the selection
__label__summary change document get current white space
__label__summary standard c code indentation
__label__summary line comment starting at position indent inside
__label__summary where we start searching for nonws after the in single line comments
__label__summary indents a single line using the heuristic scanner multiline comments areindented as specified by the codec comment auto indent strategycode
__label__summary this is too intrusive but will never get called anyway
__label__summary selects the given range on the editor
__label__summary will only happen on concurrent modification
__label__summary always reset the selection if anything was replaced but not when we had a single line nontab invocation
__label__summary this test makes sure that when@link hdfs client config keys#dfsclienttestdropnamenoderesponsenumkey is setdfs client instances can still be created within nndn eg the fs instanceused by the trash emptier thread in nn
__label__summary enable both trash emptier and dropping response
__label__summary handles editor font changes for source preview viewers
__label__summary registers a source preview updater for the given viewer configuration and preference store
__label__summary this interface defines the minimal protocol for value aggregators
__label__summary add a value to the aggregator
__label__summary reset the aggregator
__label__summary constructor for classpath container wizard
__label__summary constructor for classpath container wizard
__label__summary benchmarks for @link monitor
__label__summary unchecked variant of @link javautilconcurrent execution exception as with@code execution exception the exceptions @linkplain #get cause cause comes from a failedtask possibly run in another threadp@code unchecked execution exception is intended as an alternative to@code execution exception when the exception thrown by a task is an unchecked exception however it may also wrap a checked exception in some casesp when wrapping an @code error from another thread prefer @link execution error whenwrapping a checked exception prefer @code execution exception
__label__summary creates a new instance with @code null as its detail message
__label__summary creates a new instance with the given detail message
__label__summary creates a new instance with the given detail message and cause
__label__summary creates a new instance with the given cause
__label__summary allows users define customized key type annotations for map bindings by annotating an annotationof a @code maps key type the custom key annotation can be applied to methods also annotatedwith @literal @@link provides into map
__label__summary if @code unwrap value is false then the whole annotation will be the type and annotationinstances will be the keys if @code unwrap value is true the value type of key typeannotation will be the key type for injected map and the value instances will be the keys
__label__summary the @link jwt redirect authentication handler extends alt kerberos authentication handler to add web sso behavior for u is the expected sso token is a json web token jwt the supported algorithm is rs whichuses pki between the token issuer and consumer the flow requires a redirectto a configured authentication server url and a subsequent request with theexpected jwt token this token is cryptographically verified and validated the user identity is then extracted from the token and used to create an authentication token as expected by the authentication filter
__label__summary primarily for testing this provides a way to set the public key forsignature verification without needing to get a pem encoded value
__label__summary initializes the authentication handler instancep this method is invoked by the @link authentication filter#init method
__label__summary setup the url to redirect to for authentication
__label__summary setup the public key of the token issuer for verification
__label__summary setup the list of valid audiences for token validation
__label__summary parse into the list
__label__summary setup custom cookie name if configured
__label__summary unable to parse the token lets try and get another one
__label__summary encapsulate the acquisition of the jwt token from http cookies within therequest
__label__summary create the url to be used for authentication of the user in the absence ofa jwt token within the incoming request
__label__summary this method provides a single method for validating the jwt for use inrequest processing it provides for the override of specific aspects ofthis implementation through submethods used within but also allows for theoverride of the entire token validation algorithm
__label__summary verify the signature of the jwt token in this method this method dependson the public key that was established during init based upon theprovisioned public key override this method in subclasses in order tocustomize the signature verification behavior
__label__summary validate whether any of the accepted audience claims is present in theissued token claims list for audience override this method in subclassesin order to customize the audience validation behavior
__label__summary validate that the expiration time of the jwt token has not been violated
__label__summary make sure that monitor has started
__label__summary expired would be set to true without reset timer
__label__summary its possible that the inode has a default acl but no access acl
__label__summary returns the file name
__label__summary returns the mime type
__label__summary abstract class for providing hover information for c elements
__label__summary returns the tool tip affordance string
__label__summary execcontinue all threadgroup id asynchronous command resumes the execution of the inferior programuntil a breakpoint is encountered or until the inferior exits
__label__summary the parameters all threads and group id are mutually exclusive all threads must be falseif we are to use group id the value of this method is to only have one placewhere we use the hardcoded strings
__label__summary this class tests the access time on files
__label__summary tests mod access time in dfs
__label__summary create file and record atimemtime
__label__summary record dir times
__label__summary set the access time to be one day in the past
__label__summary check new access time on file
__label__summary set the modification time to be hour in the past
__label__summary long mtime mtime ll file sysset timesfile mtime 
__label__summary check new modification time on file
__label__summary check new modification time on file
__label__summary shutdown cluster and restart
__label__summary verify that access times and modification times persist after a cluster restart
__label__summary tests mod time change at close in dfs
__label__summary s
__label__summary parameter initialization
__label__summary create a new file and write to it
__label__summary close file after writing
__label__summary test that when access time updates are not needed the fs namesystemwrite lock is not taken by get block locations regression test for hdfs
__label__summary create empty file in the fsn
__label__summary test whether atime can be set explicitly even when the atime support isdisabled
__label__summary create an empty file
__label__summary tests for @link fresh value generator
__label__summary problem with equality of type objects
__label__summary problem with equality of type objects
__label__summary test that the first generated instance for different optionalt is always absent having generated optional string instances doesnt prevent absent from being generated for other optional types
__label__summary repeat a few times to make sure we dont stumble upon a bad locale
__label__summary calibrate the core heapusage utility
__label__summary get the target heap usage
__label__summary reset the core so that the garbage is reclaimed
__label__summary store the emulation progress boundary
__label__summary add blocks in order of x of the difference x by default
__label__summary make sure that at least mb is incremented
__label__summary increase committed heap usage if needed using a linear weighing function for computing the expected usage
__label__summary for testing
__label__summary clear references to all the grid mixallocated special objects so thatheap usage is reduced
__label__summary this will initialize the core and check if the core can emulate thedesired target on the underlying hardware
__label__summary create another string object of size mb
__label__summary increase heap usage by current process by the given amount this is done by creating objects each of size mb
__label__summary this is the core engine to emulate the heap usage the only responsibilityof this class is to perform certain memory intensive operations to makesure that some desired value of heap is used
__label__summary store the unit loads in a list
__label__summary reset the resource usage
__label__summary initialize the core
__label__summary performs some memory intensive operations to use up some heap
__label__summary defines the core heap usage emulation algorithm this engine is expectedto perform certain memory intensive operations to consume someamount of heap @link #loadlong should load the current heap andincrease the heap usage by the specified value this core engine can beinitialized using the @link #initialize resource calculator plugin longapi to suit the underlying hardware better
__label__summary determines the unit increase per call to the core engines load api thisis expressed as a percentage of the difference between the expected totalheap usage and the current usage
__label__summary the minimum buffer reserved for other nonemulation activities
__label__summary 
__label__summary default value for emulation interval
__label__summary the frequency based on task progress with which memoryemulation code isrun if the value is set to then the emulation will happen at ofthe tasks progress the default value of this parameter is@link #defaultemulationprogressinterval
__label__summary target heap usage to emulate
__label__summary the progress boundariesinterval where emulation should be done
__label__summary decides if this plugin can emulate heap usage or not
__label__summary the progress bar
__label__summary configuration parameters the core engine to emulate heap usage
__label__summary pa @link resource usage emulator plugin that emulates the total heapusage by loading the jvm heap memory adding smaller chunks of data to theheap will essentially use up some heap space thus forcing the jvm to expandits heap and thus resulting into increase in the heap usagep
__label__summary the identity provider creates identities for each schedulableby extracting fields and returning an identity string implementers will be able to change how schedulers treat schedulables
__label__summary return the string used for scheduling
__label__summary test that we can create a domain socket watcher and then shut it down
__label__summary test that we can get notifications out a domain socket watcher
__label__summary test that a java interruption can stop the watcher thread
__label__summary test that domain sockets are closed when the watcher is closed
__label__summary creates a new domain socket watcher and tracks its thread for termination dueto an unexpected exception at the end of each test if there was anunexpected exception then that exception is thrown to force a failure ofthe test
__label__summary dont load container without start container request
__label__summary remove container without start container request
__label__summary start with 
__label__summary new value will overwrite old values for the same key
__label__summary store version
__label__summary only used for test
__label__summary versioning scheme majorminor for eg etc any incompatible change of statestore is a major upgrade and anycompatible change of statestore is a minor upgrade within a minor upgrade say to overwrite the version info and proceed as normal within a major upgrade say to throw exception and indicate user to use a separate upgrade tool toupgrade nm state or remove incompatible old state
__label__summary initialize resource bundle
__label__summary set option value
__label__summary creates a new project in the workspace
__label__summary helper class for building configs mostly used in tests
__label__summary the built config
__label__summary default constructor
__label__summary add a property to the config
__label__summary save the config to a file
__label__summary return a subset configuration so get parent can be used
__label__summary this context menu action is used to change active build configuration for the project
__label__summary do nothing
__label__summary do nothing
__label__summary do nothing
__label__summary supplies some default environment variables for the autotools toolchain forexample v to enable verbose output necessary for proper gcc outputparsing
__label__summary windows has case insensitive env var names
__label__summary environmentdirectory r pathdir add directory pathdir to beginning of search path for source filesr will first reset the path to its default
__label__summary a status indicating what happened with the processing of a given cacheresource
__label__summary we were unable to remove it for some reason its best to leave it at that
__label__summary the directory can be removed safely now log the original path
__label__summary rename the directory to make the delete atomic
__label__summary record the processing
__label__summary hook up the viewer
__label__summary we did not delete the resource because it contained application ids
__label__summary remove the resource from the file system
__label__summary remove the resource from scm checks for app ids as well
__label__summary this is the path to the cache resource directory the directory name is the resource key ie a unique identifier
__label__summary indicates the processing status of the resource
__label__summary processes a single shared cache resource directory
__label__summary returns a path for the root directory for the shared cache
__label__summary restore the interrupt
__label__summary add sleep time between cleaning each directory if it is nonzero
__label__summary check for interruption so it can abort in a timely manner in case of shutdown
__label__summary before making calls to an index you have to obtain a lock the objectsreturned by an index become invalid as soon as the indexer writes to theindex you may obtain nested read locks make sure you release the lock@see #get last write accesspreindexacquire read locktry finally indexrelease read lockpre
__label__summary now traverse individual directories and process them the directory structure is specified by the nested level parameter eg cdchecksum
__label__summary mark the beginning of the run in the metrics
__label__summary sweeps and processes the shared cache area to clean up stale and orphanedfiles
__label__summary this is set to false regardless of if it is a scheduled or ondemand task
__label__summary were now ready to process the shared cache area
__label__summary there is already another task running
__label__summary creates a cleaner task based on the root directory location and thefilesystem
__label__summary get the root directory for the shared cache
__label__summary creates a cleaner task based on the configuration this is provided forconvenience
__label__summary the task that runs and cleans up the shared cache area for stale entries andorphaned files it is expected that only one cleaner task runs at any givenpoint in time
__label__summary any lock obtained by @link #acquire read lock must be released
__label__summary constructs a new c model info
__label__summary check if the folder is not itself a source entry
__label__summary move back to the sourceroot
__label__summary returns a timestamp of when the index was last written to this canbe used to figure out whether information read from the index isstill reliable or not
__label__summary provides context sensitive annotations for source elements this interface is experimental
__label__summary updates the annotations of the specified source elements
__label__summary common annotation types this package is a part of the opensourcea hrefhttpgithubcomgoogleguava guavaa library
__label__summary serializes keyvalue pair
__label__summary update the length field of sized writable
__label__summary now test an additional add listener call which will be run inthread
__label__summary now give the get thread time to finish
__label__summary this will occur before the waiting get in thelisten in pool threadspawned thread completes
__label__summary the compiler recognizes that input instanceof listenable future isimpossible we want the test though in case that changes in the futureso we use is instance instead
__label__summary synchronized so that check state works as expected
__label__summary wait a little to give us time to call add listener before the futuresvalue is set in addition to the call well make after then
__label__summary a future that doesnt implement listenable future useful for testinglisten in pool thread
__label__summary dont shut down until the listen in pool thread task has been accepted torun we want to see what happens when its interrupted not when itsrejected
__label__summary spy should have been ignored since abstract future was done before a listener was added
__label__summary #add listener will run the listener immediately because the future is already finished we explicitly set the result of it above
__label__summary we call abstract future#set above
__label__summary unit tests for @link jdk future adapters
__label__summary datanode side striping erasure coding related task processing
__label__summary tests that clicking on active fields doesnt change table selection nor doesdragging rows
__label__summary rounded off
__label__summary the class that encapsulates response from clusterinfo forupdates from the node managers
__label__summary open next tooltip faster disabled after sec of show tooltipsilence
__label__summary delays for the tooltip configurable on the server side
__label__summary current element hovered
__label__summary used to show tooltips usually used via the singleton in@link application connection note that #set owner widget should becalled after instantiating
__label__summary when a tooltip is shown the content of the tooltip changes with a tooltip being a livearea this change is notified to a assistive device
__label__summary tooltip needs to be on top of other v overlay elements
__label__summary show the tooltip with the provided info for assistive devices
__label__summary initialize the tooltip overlay for assistive devices
__label__summary show a popup containing the current tooltip info
__label__summary check new height and width with reflowed content
__label__summary return the final xcoordinate of the tooltip based on cursorposition size of the tooltip size of the page and necessarymargins
__label__summary do not allow x to be zero for otherwise the tooltip does not close when the mouse is moved see is tooltip open #
__label__summary return the final xcoordinate of the tooltip based on cursorposition size of the tooltip size of the page and necessarymargins
__label__summary do not allow x to be zero for otherwise the tooltip does not close when the mouse is moved see is tooltip open #
__label__summary return the final ycoordinate of the tooltip based on cursorposition size of the tooltip size of the page and necessarymargins
__label__summary tooltip does not fit on top of the mouse either put it at the top of the screen
__label__summary do not allow y to be zero for otherwise the tooltip does not close when the mouse is moved see is tooltip open #
__label__summary return the final ycoordinate of the tooltip based on cursorposition size of the tooltip size of the page and necessarymargins
__label__summary tooltip does not fit on top of the mouse either put it at the top of the screen
__label__summary do not allow y to be zero for otherwise the tooltip does not close when the mouse is moved see is tooltip open #
__label__summary for assistive tooltips to work correctly we must have the tooltip visibleand attached to the dom well in advance for this reason both is showingand is visible return false positives we cant override either of them asexternal code may depend on this behavior
__label__summary already about to close
__label__summary cancel closing event if tooltip is mouseovered the user might want to scroll of cutpaste
__label__summary cancel closing so tooltip stays open and user can copy paste the tooltip
__label__summary replace current open tooltip with new content
__label__summary marker for handling of tooltip through focus
__label__summary locate the tooltip for given element
__label__summary try to find first connector with proper tooltip info
__label__summary handle hide event
__label__summary displays tooltip when page is navigated with the keyboard tooltip is not visible this makes it possible for assistive devicesto recognize the tooltip
__label__summary hides tooltip when the page is navigated with the keyboard removes the tooltip from page to make sure assistive devices dontrecognize it by accident
__label__summary we can ignore move event if its handled by move or over already
__label__summary tooltip info contains a reference to the parent component that is checked in its equalsmethod
__label__summary schedule timer for showing the tooltip according to if it was recently closed or not
__label__summary connects dom handlers to widget that are needed for tooltip presentation
__label__summary returns the unique id of the tooltip element
__label__summary returns the time in ms the tooltip should be displayed after an eventthat will cause it to be closed eg mouse click outside the componentkey down
__label__summary sets the time in ms the tooltip should be displayed after an event thatwill cause it to be closed eg mouse click outside the component keydown
__label__summary returns the time in ms during which @link #get quick open delay shouldbe used instead of @link #get open delay the quick open delay is usedwhen the tooltip has very recently been shown is currently hidden butabout to be shown again
__label__summary sets the time in ms that determines when @link #get quick open delayshould be used instead of @link #get open delay the quick open delayis used when the tooltip has very recently been shown is currentlyhidden but about to be shown again
__label__summary returns the time in ms that should elapse before a tooltip will beshown in the situation when a tooltip has very recently been shownwithin @link #get quick open delay ms
__label__summary sets the time in ms that should elapse before a tooltip will be shownin the situation when a tooltip has very recently been shown within@link #get quick open delay ms
__label__summary returns the time in ms that should elapse after an event triggeringtooltip showing has occurred eg mouse over before the tooltip isshown if a tooltip has recently been shown then@link #get quick open delay is used instead of this
__label__summary sets the time in ms that should elapse after an event triggeringtooltip showing has occurred eg mouse over before the tooltip isshown if a tooltip has recently been shown then@link #get quick open delay is used instead of this
__label__summary sets the maximum width of the tooltip popup
__label__summary returns the maximum width of the tooltip popup
__label__summary service for mapping debugger paths to host paths this service is neededprimarily by other services that need to access sourcepath mappings suchas the breakpoints service for ui components the platform source lookupinterfaces could be sufficient
__label__summary retrieves the host source object for given debugger path string
__label__summary retrieves the debugger path string for given host source object
__label__summary execstep count asynchronous command resumes execution of the inferior programstopping when the beginning of the next source line is reached if thenext source line is not a function call if it is stop at the firstinstruction of the called function
__label__summary default parser for the job history files typical usage is job history parser parser new job history parserfs history filejob parserparse
__label__summary use owner entry from permission bits if user is owner
__label__summary print all the information about this am
__label__summary create a am info which will store am level information on a historyparse
__label__summary stores am information
__label__summary print all the information about this attempt
__label__summary create a task attempt info which will store attempt level informationon a history parse
__label__summary task attempt information is aggregated in this class after parsing
__label__summary task information is aggregated in this class after parsing
__label__summary print all the job information
__label__summary create a job info object where job information will be storedafter a parse
__label__summary the class where job information is aggregated into after parsing
__label__summary the failed attempt is the one that made this task successful so its no longer successful reset fields set in handle task finished event
__label__summary this is a successful task
__label__summary get the parse exception if any
__label__summary create a job history parser for the given history file using thegiven file system
__label__summary create the job history parser for the given history file using thegiven file system
__label__summary create the history parser based on the input stream
__label__summary only used for unit tests
__label__summary parse the entire history file and populate the job info object the first invocation will populate the object subsequent callswill return the already parsed object the input stream is closed on return
__label__summary returns @code true if the index is fully initialized an index may not be fully initializedduring eclipse startup or soon after adding a new project to the workspace@since 
__label__summary the version that has been read fromwritten to the persisted file
__label__summary initialize the version with whatever is current
__label__summary initialize all b trees to 
__label__summary i binding#get adapter cannot create an instance of pdom binding because the linkage is required this utility method uses #get adapter to see if an instance has already been created if not then a new is created and stored in the ast binding
__label__summary return the pdom binding for the given qt name creating a new binding if needed theimplementation caches the result using the name instance as the key this ensuresonetoone uniqueness between ast names and pdom bindingsp this method is not threadsafe
__label__summary returns the global inline c namespaces@throws core exception@since 
__label__summary the result is cached even when null is returned
__label__summary only add children that are actually created
__label__summary the qt linkage is able to reference elements in other linkages this implementation needs to decide if the binding associated with this name is from the qt linkage or from one of those external references
__label__summary use the receiving linkage by default and override only if the binding is found to have a linkage with a different id
__label__summary handle bindings in unknown linkages as though the name is to be added to this linkage
__label__summary returns an array of files containing unresolved includes@noreference this method is not intended to be referenced by clients@since 
__label__summary returns an array of files that were indexed with io errors@noreference this method is not intended to be referenced by clients@since 
__label__summary return the actual replication factor
__label__summary add a corrupt block
__label__summary add a missing block name plus its size
__label__summary dfs is considered healthy if there are no missing blocks
__label__summary check named user and group entries if user was not denied by owner entry
__label__summary returns an array of all files that are part of this index if a file is parsed in twolinkages or in multiple fragments only one of the files will be returned
__label__summary blocks that do not satisfy block placement policy
__label__summary minimally replicatedblocks
__label__summary fsck result of checking plus overall dfs statistics
__label__summary exists but not a directory
__label__summary exists and is a directory
__label__summary not exists
__label__summary xxx ab see comment above for copy block pick the best node from which to stream the data thats the local one if available
__label__summary put chosen node into dead list continue
__label__summary xxx ab bulk of this method is copied verbatim from @link dfs client which isbad both places should be refactored to provide a method to copy blocksaround
__label__summary copy the block its a pity its not abstracted from dfs input stream 
__label__summary creates a fileset that can be used with this index as long as the caller holds a readlock
__label__summary create chains
__label__summary count corrupt file move or delete if necessary
__label__summary display under construction block info
__label__summary report
__label__summary count storage summary
__label__summary count mis replicated blocks
__label__summary count missing replicas under replicated blocks
__label__summary count minimally replicated blocks
__label__summary count corrupt blocks
__label__summary returns an @link i index binding for this index that is equivalent to the specified bindingor null if such a binding does not exist in this index this is useful for adaptingbindings obtained from i index objects that might have been created for a different scopeor for i binding objects obtained directly from the ast@param binding an ast or an index binding@return an i index binding for this index that is equivalent to the specified binding
__label__summary count excessive replicas over replicated blocks
__label__summary count under min repld blocks
__label__summary count expected replicas
__label__summary count total replicas
__label__summary count decommissioned replicas decommissioning replicas
__label__summary this is the last block and this is not complete ignore it since it is under construction
__label__summary display info of each replica for replication block for striped block group display info of each internal block
__label__summary we collect these stats about open files to report with default options
__label__summary the file is deleted
__label__summary df sck client scans for the string healthycorrupt to check the status of file system and return appropriate code changing the output string might break testcases also note this must be the last line of the report
__label__summary searches for all definitions that resolve to the given binding this is fully equivalent toprefind namesbinding i indexfinddefinitionspre@param binding a binding for which declarations are searched for@return an array of names@throws core exception
__label__summary check files on dfs starting from the indicated path
__label__summary report block replicas status on datanodes
__label__summary record datanodes that have corrupted block replica
__label__summary find which file this block belongs to
__label__summary get block info
__label__summary check block information given a block id number
__label__summary searches for all declarations and definitions that resolve to the given binding this is fully equivalent toprefind namesbinding i indexfinddeclarationsdefinitionspre@param binding a binding for which declarations are searched for@return an array of names@throws core exception
__label__summary filesystem checker
__label__summary we return back n files that are corrupt the list of files returned is ordered by block id to allow continuation support pass in the last block # from previous call
__label__summary true if the user specified the delete option whe this option is in effect we will delete corrupted files
__label__summary true if the user specified the move option whe this option is in effect we will copy salvaged blocks into the lostand found
__label__summary true if we encountered an internal error during fsck such as not beingable to delete a corrupt file
__label__summary return string marking fsck status
__label__summary this class provides rudimentary checking of dfs volumes for errors andsuboptimal conditions
__label__summary searches for all references that resolve to the given binding this is fully equivalent toprefind namesbinding i indexfindreferencespre@param binding a binding for which references are searched for@return an array of names@throws core exception
__label__summary models a method or constructor parameter
__label__summary returns the unique binding annotation from the specified list or@code null if there are none
__label__summary searches for all names that resolve to the given binding the search can be limited toreferences declarations or definitions or a combination of those@param binding a binding for which names are searched for@param flags a combination of @link #finddeclarations @link #finddefinitions@link #findreferences and @link #searchacrosslanguageboundaries@return an array of names@throws core exception
__label__summary replace annotation instances with annotation types this is onlyappropriate for testing if a key is bound and not for injecting
__label__summary this method is particularly lame we really need an api that can test for any binding implicit or explicit
__label__summary returns the guice @link key for this parameter
__label__summary this interface represents an instantiation or an explicit specialization of a function template
__label__summary searches for all bindings with names that start with the given prefix
__label__summary annotation hover this annotation hover shows the description of theselected annotation
__label__summary searches the global scope and optionally all other scopes for bindings with a given name in case a binding exists in multiple projects no duplicate bindings are returned this method makes use of the b tree and is faster than the methods using patterns
__label__summary searches the global scope for all bindings with a given name in case a binding exists in multiple projects no duplicate bindings are returned this method makes use of the b tree and is faster than the methods using patterns this is fully equivalent toprefind bindingsname true filter monitorpre
__label__summary use named user entry with mask from permission bits applied if user matches name
__label__summary searches for all bindings in global scope with a given name in case a binding exists inmultiple projects no duplicate bindings are returned this method makes use of the b treeand is faster than the methods using patterns
__label__summary searches for all macro containers one for macros with the same name with names thatmatch the given pattern in case a binding exists in multiple projects no duplicatebindings are returned
__label__summary save the workspace
__label__summary do nothingjust quit
__label__summary rethrow exception
__label__summary throw internal exception which will be caught below
__label__summary check and see if we failed above and if so quit
__label__summary bring up new executable dialog with values from the last launch
__label__summary searches for all bindings with qualified names that seen as an array of simple names matchthe given array of patterns in case a binding exists in multiple projects no duplicatebindings are returned you can search with an array of patterns that specifies a partialqualification only
__label__summary no executable specified look for last launch and offer that to the enduser
__label__summary throw internal exception which will be caught below
__label__summary check and see if we failed above and if so quit
__label__summary throw internal exception which will be caught below
__label__summary check and see if we failed above and if so quit
__label__summary verify what we can about the port address and executable
__label__summary throw internal exception which will be caught below
__label__summary check and see if we failed above and if so quit
__label__summary verify any core file or executable path is valid
__label__summary remaining values are arguments to the executable
__label__summary searches for all bindings with simple names that match the given pattern in case a bindingexists in multiple projects no duplicate bindings are returned this is fully equivalent toprefind bindingsnew pattern pattern is fully qualified filter monitorpre
__label__summary make sure executable is still null in case we are dealing with a remote session that is also an attach as the r flag could have been set first
__label__summary check for optional pid
__label__summary ignore the application specifier
__label__summary ignore the product specifier
__label__summary do nothing
__label__summary private method to search for executable names on path
__label__summary searches for the binding of a name the name may be originated byan ast or by a search in an index may return @code null
__label__summary a utility class for accessing parts of the qproperty expansion that have alreadybeen entered as well as the offset of various parts of the declaration this isused for things like proposing only parameters that are not already used offeringappropriate suggestions for a specific parameter etc
__label__summary the full text of the expansion
__label__summary the offset of the first character in the attributes section this is usually thestart of read
__label__summary the offset of the cursor in the expansion
__label__summary the parsed type of the property
__label__summary the parsed name of the property this is the last identifier before the first attribute
__label__summary searches for all macros with names that start with the given prefix
__label__summary the identifier at which the cursor is currently pointing
__label__summary the identifier before the one where the cursor is pointing this is needed to figure out whatvalues are valid for an attribute like read write etc
__label__summary the typename section ends right before the first attribute
__label__summary a small utility to store the important parts of an identifier this is just the startingoffset and the text of the identifier
__label__summary allow up to characters from the opening paren
__label__summary find the start of the previous identifier this scans backward so it stops one position before the identifier unless the identifer is at the start of the content
__label__summary advance past the opening paren
__label__summary this expansion is not applicable if the assistant was invoked after the closing paren
__label__summary searches for all macros with a given name
__label__summary parse the typename part and then extract the type and name from the result
__label__summary give attribute proposals the same order as the qt documentation
__label__summary otherwise create a template where the content depends on the type of the attributes parameter
__label__summary make no suggestions when the start of the current identifier is before the end of the type name portion of the declaration
__label__summary propose nothing but read as the first attribute if the previous identifier is before the end of the type name region then were currently at the first attribute
__label__summary resolves the file that is included by the given include directive may return @code nullin case the file cannot be found this is usually more efficient than usingpreget filesincludeget includes locationpre
__label__summary visit the problem
__label__summary tests if long event which began before the view period is shown #
__label__summary looks recursively for include relations pointing to the given file
__label__summary tests declarative support for @link custom layout
__label__summary looks recursively for include relations originated by the given file
__label__summary mini tutorial code forhttpsvaadincomwikiwiki main using componentsinthesharedstate
__label__summary simple derived class to verify that we handle generics correctly
__label__summary make sure we correctly update the quota usage for truncate
__label__summary case truncate to block the block for truncation is not in snapshot diff should be the same as case 
__label__summary looks for include relations pointing to the given file this is the same as pre find included byfile depthzero pre
__label__summary case truncate to blocks the original blocks are in snapshot the block truncated is not in snapshot diff should be block
__label__summary update the last two blocks in the current inode
__label__summary case truncate to 
__label__summary case first truncate to blocks we truncate blocks but not on the boundary thus the diff should be block block block block
__label__summary case truncate to block
__label__summary case truncate to 
__label__summary case truncate to blocks all the blocks are in snapshot truncate need to allocate a new block diff should be blocksize
__label__summary case truncate to block
__label__summary case truncate to 
__label__summary looks for include relations originated by the given file this is the same as pre find includesfile depthzero pre
__label__summary a state store backed by memory for unit tests
__label__summary add all of c then remove the ones we dont need
__label__summary cpp specific stuff
__label__summary returns the file objects for the given location in any linkage
__label__summary an implementer of this interface is capable of providing proxy objects foruse in ipc communication and potentially modifying these objects or creatingentirely new ones in the event of certain types of failures thedetermination of whether or not to fail over is handled by@link retry policy
__label__summary the information eg the ip address of the current proxy object itprovides information for debugging purposes
__label__summary get the proxy object which should be used until the next failover eventoccurs
__label__summary called whenever the associated @link retry policy determines that an errorwarrants failing over
__label__summary return a reference to the interface this providers proxy objects actuallyimplement if any of the methods on this interface are annotated as being@link idempotent or @link at most once then this fact will be passed tothe @link retry policy#should retry exception int int boolean method onerror for use in determining whether or not failover should be attempted
__label__summary returns the file objects for the given location and linkage multiple files are returned when a header file is stored in the index in multiple variantsfor different sets of macro definitions this method may only return files that are actually managed by this fragment this method returns files without content also
__label__summary updates the signals view
__label__summary constructs a new event handler on the given view
__label__summary returns the file for the given location linkage and significant macros may return @code null if no such file exists
__label__summary an implementation of @link immutable table that holds a single cell
__label__summary resume at line target adapter for the dsf disassembly view
__label__summary returns the file object for the given location and linkage or @code null if the filewas not indexed in this linkagep when a header file is stored in the index in multiple variants for different sets of macrodefinitions this method will return an arbitrary one of these variants
__label__summary example of nested forms
__label__summary creates a person form which contains nested form for the persons address
__label__summary get apply and discard button in the layout
__label__summary ignored well let the form handle the errors
__label__summary field factory for person form
__label__summary reuse the address field required by embedded form
__label__summary create a custom field for the address object
__label__summary set the data source and the visible fields
__label__summary creates configuration for starting a secure cluster
__label__summary test for @link rpc denied reply
__label__summary interface for accessing the index for one or more projects
__label__summary this test case verifies that different commands issued from the gdb console cause proper updating within the cdt views
__label__summary this method should be used only by client object as only one per clientshould exists request an instance via clientget context menu
__label__summary sets the element from which to build menu
__label__summary shows context menu at given location if it contain at least one item
__label__summary attach onload listeners to all images
__label__summary store the currently focused element which will be refocused when context menu is closed
__label__summary reset height if it has been previously set explicitly
__label__summary mac ff gets bad width due gwt popups overflow hacks redetermine width
__label__summary focus the menu
__label__summary menuset focustrue
__label__summary unselect previously selected items
__label__summary extend standard gwt menu bar to set proper settings and to overrideon popup closed method so that popup panel gets closed
__label__summary handle icon onload events to ensure shadow is resized correctly
__label__summary allow to close context menu with esc
__label__summary use other entry if user was not denied by an earlier match
__label__summary hides context menu if it is currently shown by given action owner
__label__summary a collection of helper methods to interact with the workbenchs i documents and i files
__label__summary sets the bit at the specified index to @code true
__label__summary goes through all open editors to find the one with the specified file
__label__summary sets the bit at the specified index to @code false
__label__summary tests if a datanode can startup depending on configuration parameters
__label__summary returns @code true if the bit is set at the specified index
__label__summary test that a datanode does not start if configuration specifiesincorrect uri scheme in data directory test that a datanode starts if data directory is specified as uri filepath or as a non uri path
__label__summary expecting exception here
__label__summary test file ec policy and no ec policy pathonly both should work
__label__summary cant increase the memlock limit past the maximum
__label__summary try starting the dn with limit configured to the ulimit
__label__summary try starting the dn with a limit ulimit
__label__summary a random task attempt id for testing
__label__summary a reporter that does nothing
__label__summary test compressed file
__label__summary returns @code true if any bit is set
__label__summary a reporter that does nothing
__label__summary copyright vaadin ltd licensed under the apache license version the license you may notuse this file except in compliance with the license you may obtain a copy ofthe license athttpwwwapacheorglicenses license unless required by applicable law or agreed to in writing softwaredistributed under the license is distributed on an as is basis withoutwarranties or conditions of any kind either express or implied see the license for the specific language governing permissions and limitations underthe license
__label__summary friday
__label__summary returns the index of the first bit that is set to true that occurs on or after thespecified starting index if no such bit exists then @code is returned
__label__summary member template declaration
__label__summary provides the ability to restart a debug target
__label__summary causes this element to restart its execution
__label__summary returns whether this element can currently be restarted
__label__summary index documents with unique i ds
__label__summary cluster the documents into three topics using lda
__label__summary output topics each is a distribution over words matching word count vectors
__label__summary load and parse the data
__label__summary try to find the next set bit in the current word
__label__summary find the next set bit in the rest of the words
__label__summary methods for working with fixedsize uncompressed bitsets we assume that the bitset data is wordaligned that is a multiple of bytes in length each bit occupies exactly one bit of storage
__label__summary adds cdata node to target uidltree
__label__summary adds text node all the contents of the text are xmlescaped
__label__summary adds uidl directly the uidl must be valid in accordance with the uidldtd
__label__summary prints single xml sectionp prints full xml section the section data must be xml and it issurrounded by xml start and endtagsp
__label__summary adds a upload stream type variable
__label__summary adds a component type variable on client side the variable value will bea terminal specific reference to corresponding component on client sideimplementation when updated from client side terminal will map theclient side component reference back to a corresponding server sidereference
__label__summary adds a string array type variable
__label__summary adds a boolean type variable
__label__summary adds a double type variable
__label__summary adds a float type variable
__label__summary adds a long type variable
__label__summary adds a int type variable
__label__summary adds a string type variable
__label__summary adds a component type attribute on client side the value will be aterminal specific reference to corresponding component on client sideimplementation
__label__summary adds a string attribute to component atributes must be added before anycontent is written
__label__summary adds a double attribute to component atributes must be added before anycontent is written
__label__summary adds a float attribute to component atributes must be added before anycontent is written
__label__summary adds a long attribute to component atributes must be added before anycontent is written
__label__summary adds details about @link stream variable to the uidl stream eg in webterminals receivers are typically rendered for the client side as ur lswhere the client side implementation can do an http post request
__label__summary adds a resource attribute to component atributes must be added beforeany content is written
__label__summary guarded by @link fs namesystem#read lock
__label__summary adds a integer attribute to component atributes must be added before anycontent is written
__label__summary adds a boolean attribute to component atributes must be added before anycontent is written
__label__summary prints element end tag if the parent tag is closed before every child tag is closed an paint exception is raised
__label__summary prints element start tagpre todo checking of input valuespre
__label__summary prints paintable element end tag calls to @link #start paintable component stringshould be matched by@link #end paintable component if the parent tag is closed beforeevery child tag is closed a paint exception is raised
__label__summary prints element start tag of a paintable section starts a paintablesection using the given tag the paint target may implement a cachingscheme that checks the paintable has actually changed or can a cachedversion be used instead this method should call the start tag method
__label__summary result of starting to paint a component @link paint target#start paintable component string
__label__summary c location tab implements common features for source location and output locationtabs in project preferences
__label__summary prints single xm lsection prints full xml section the section data is escaped from xml tags andsurrounded by xml start and endtags
__label__summary this interface defines the methods for painting xml to the uidl stream
__label__summary tests the api does not actually test data receiving
__label__summary do nothing
__label__summary do nothing
__label__summary do nothing
__label__summary do nothing
__label__summary represents a source line in disassembly
__label__summary test the history server rest api for getting the job conf thisrequires created a temporary configuration filewsvhistorymapreducejobsjobidconf
__label__summary just do simple verification of fields not data is correct in the fields
__label__summary just do simple verification of fields not data is correct in the fields
__label__summary used to registry custom methods to refresh at runtime each identifier maps to one or more refresh handlers
__label__summary used to hold singleton instance
__label__summary singleton access
__label__summary add
__label__summary registers an object as a handler for a given identity note will prevent handler from being gcd object should unregister itselfwhen done
__label__summary remove the registered object for a given identity
__label__summary create link
__label__summary lookup the responsible handler and return its result this should be called by the rpc server when it gets a refresh request
__label__summary run the handler
__label__summary dispatch to each handler and store response
__label__summary first display the queues label specific details 
__label__summary clear the info contents so this queues info doesnt accumulate into another queues info
__label__summary second display the queue specific details 
__label__summary clear the info contents so this queues info doesnt accumulate into another queues info
__label__summary edit filter
__label__summary clear the info contents so this queues info doesnt accumulate into another queues info
__label__summary get user info from first user to calculate am resource limit per user
__label__summary defaultnodelabelpartition is accessible to all queues other exclsive node labels are accessible only if configured
__label__summary only show button to dump capacity scheduler debug logs to admins
__label__summary skip defaultlabel
__label__summary label is not enabled in the cluster or theres only default label
__label__summary for the queue hierarchy under label
__label__summary represents an exception in initializing a template typically this will be causedby an io or xml parsing failure
__label__summary pda editor keyword scanner
__label__summary pda keywods
__label__summary detects potential keywords
__label__summary detects pda branch labels
__label__summary keywords
__label__summary labels
__label__summary constructs a scanner that identifies pda keywords
__label__summary nsquota
__label__summary dsquota
__label__summary replication
__label__summary access time
__label__summary block size
__label__summary appendbuffer 
__label__summary num blocks
__label__summary appendbuffer 
__label__summary num bytes
__label__summary replication
__label__summary block size
__label__summary num blocks
__label__summary num bytes
__label__summary nsquota
__label__summary dsquota
__label__summary if this user is the directory owner return
__label__summary expand the tree and select current resource
__label__summary this class manages extensions of extension point orgeclipsecdtcore language settings providerwhich defines appearance and behavior of ui controls for language settings providers
__label__summary name of the extension point for contributing language settings provider associations
__label__summary load extensions into memory maps
__label__summary put value into properties ignoring nulls
__label__summary find icon url in its bundle
__label__summary get image url for language settings provider with the given id
__label__summary create an options page for language settings provider with given id
__label__summary create an options page for language settings provider class by its name
__label__summary returns language settings provider image registered for closest superclassor interface
__label__summary this does not check for superinterfaces feel free to implement as needed
__label__summary return image url registered for the given class
__label__summary returns language settings provider options page registered for closest superclass
__label__summary this does not check for superinterfaces feel free to implement as needed
__label__summary create an options page for language settings provider class
__label__summary returns value of the attribute of the provider by id or closest superclass
__label__summary this does not check for superinterfaces feel free to implement as needed
__label__summary check if the user is allowed to edit language settings provider entries in ui
__label__summary check if the user is allowed to clear language settings provider entries in ui
__label__summary tests for the http headers class
__label__summary special case some of the weird http header names
__label__summary visible for other tests to use
__label__summary visible for other tests to use
__label__summary coverage mode generates synthetic fields if we ever add privatefields they will cause similar problems and we may want to switchthis check to is accessible
__label__summary we create the graphical objects with no margin so as to make the sizes easier to predict understand for this test
__label__summary add b within a
__label__summary a the outermost container is a virtual square of size x
__label__summary relative to a b starts at and is of size x
__label__summary add c d and e within b
__label__summary relative to b c starts at and is of size x
__label__summary relative to b d starts at and is of size x
__label__summary relative to b e starts at and is of size x
__label__summary add f within c
__label__summary relative to c f starts at and is of size x
__label__summary define the real pixel bounds of the outermost container the pixel coordinates of all children objects will be computed recursively
__label__summary check computed bounds for container a
__label__summary check computed bounds for container b
__label__summary check computed bounds for container c
__label__summary check computed bounds for container d
__label__summary check computed bounds for container e
__label__summary check computed bounds for container f
__label__summary check recursive object retrieval returns expected number of child objects for a
__label__summary check recursive object retrieval returns expected number of child objects for b
__label__summary check nonrecursive object retrieval returns expected number of st level child objects for a
__label__summary check object retrieval returns expected number of selectable child objects for c
__label__summary check specific childrenobject retrieval
__label__summary check another specific object retrieval
__label__summary check the retrieval of a nonexisting object
__label__summary ticket # the bug happen on push eventbr the changes in the dom are css relatedbr it seems like when the class attribute is set on push the textarea revertto the height defined by the rows attributebr the size is reseted on on state change where the size is set to the one fromthe state and its because when the user changes the text at the next pollthe state will confirm the change of the text but the width and heightdidnt change in the state either client or server before the fix@since@author vaadin ltd
__label__summary short polling like ms jams up the test bench wait for vaadin functionality
__label__summary this class provides debug event filtering service for the pinable views
__label__summary a debug context event listen that provides filter supportfor the pinned debug context
__label__summary remove debug event filter for the provided part
__label__summary send a change notification to the listener to update with selected context
__label__summary removes the listener and provider
__label__summary if this user is the file owner return
__label__summary add debug event filter for the provided part and filter debug context changeevent for the provided debug context
__label__summary datanode statistics for decommissioningdecommissioned nodes only used capacity is counted
__label__summary increment expired heartbeat counter
__label__summary extension of cdt console adaptor interface to ui plugin console this extensionprovides control over context id name and icon in the console view
__label__summary initialize console with usercontrolled context name and iconin display selected console dropbox in the console view
__label__summary this class is meant to be empty it enables us to definethe annotations which list all the different j unit class wewant to run when creating a new test class it should beadded to the list below this suite is for tests to be run with gdb 
__label__summary a lowerlevel unstable api intended for developers developer apis might change or be removed in minor versions of spark
__label__summary let http user to get the delegation token for bar user
__label__summary renew should not be successful because the token is canceled
__label__summary cancel the token from the token service address
__label__summary cancel token
__label__summary renew token as the renewer
__label__summary let http user to get the delegation token for foo user
__label__summary renew should not be successful because the token is canceled
__label__summary if the token service address is not avaiable it still can be canceled from the configured address
__label__summary cancel token
__label__summary if the token service address is not avaiable it still can be renewed from the configured address
__label__summary renew the token from the token service address
__label__summary renew token
__label__summary let http user to get the delegation for itself
__label__summary tests for @link incidence set directed graph with default graph configuration@see graph config
__label__summary returns the underlying mi event that triggered this event
__label__summary p note the return type is an object which can be safely cast toan mi event however returning a parametrized mi event type hereleads to compiler warnings related to generics see bug p
__label__summary creates bimaps containing sample entries to be tested
__label__summary test pipeline construction and fitting in java
__label__summary create the cell modifier if needed
__label__summary create a cell editor to modify the trigger value
__label__summary calculate and set the update properties
__label__summary if either update or service are not valid fail the update and return
__label__summary find the trigger context in the element being updated
__label__summary switch to the session thread before processing the updates
__label__summary create and configure the label provider
__label__summary view model node that defines how alarm dm contexts are displayed in the view alarmnodes are fairly static once they are created their label doesnt change
__label__summary makefile preferences messages
__label__summary handler for @link window move events
__label__summary called when the v window was moved by the user
__label__summary evaluates the text flags for a element can be overwritten by super classes
__label__summary evaluates the image flags for a element can be overwritten by super classes
__label__summary gets the text flags
__label__summary gets the image flags can be overwritten by super classes
__label__summary sets the image flags
__label__summary sets the text flags
__label__summary adds a decorator to the label provider
__label__summary creates a new label provider with default flags
__label__summary whether a cache pool can be accessed by the current context
__label__summary a simple logger to handle the taskspecific user logs this class uses the system property codehadooplogdircode
__label__summary rmdir response
__label__summary an implementation of @code range map based on a @code tree map supportingall optional operationsp like all @code range map implementations this supports neither nullkeys nor null values
__label__summary navigable map
__label__summary the comments for this method will use to indicate the bounds of range to remove and toindicate the bounds of ranges in the range map
__label__summary we know 
__label__summary we know 
__label__summary we know so insert the range back into the map its being split apart
__label__summary overwrite map entry to truncate below with a truncated range
__label__summary we know 
__label__summary we know and since we dealt with truncating below already we know 
__label__summary its safe to upcast iterables
__label__summary we catch class cast exceptions
__label__summary r could be truncated on the left
__label__summary its definitely in the map so safe
__label__summary this might not be true eg at the start of the iteration
__label__summary exercise some boundary cases a divisor of the chunk size the chunk size x chunk size and around these
__label__summary copying the wrong checksum file
__label__summary now setting verify false the read should succeed
__label__summary exercise some boundary cases a divisor of the chunk size the chunk size x chunk size and around these
__label__summary test to ensure that if the checksum file is truncated a checksum exception is thrown
__label__summary read in the checksum
__label__summary now rewrite the checksum file with the last byte missing
__label__summary now reading the file should fail with a checksum exception
__label__summary telling it not to verify checksums should avoid issue
__label__summary write a file to generate checksum
__label__summary alter file directly so checksum is invalid
__label__summary checksum didnt change on disk
__label__summary ensure file checksum are moved
__label__summary create a file with no checksum rename ensure dst checksum is removed
__label__summary create file with checksum rename over prior dst with no checksum
__label__summary look for the exact line containing the logname
__label__summary obtain the owner of the log dir this isdetermined by checking the jobs log directory
__label__summary flush standard streams
__label__summary common protocol for all elements provided by the c model
__label__summary i resource from 
__label__summary flush close all appenders
__label__summary flush standard streams
__label__summary flush flushable appenders
__label__summary namespace
__label__summary using
__label__summary enumeration
__label__summary constant representing a class structure
__label__summary global variable
__label__summary variable declaration
__label__summary local variable
__label__summary a preprocessor macro
__label__summary a typedef
__label__summary enumerator
__label__summary assembly label
__label__summary modifier indicating a class constructor
__label__summary modifier indicating a class destructor
__label__summary modifier indicating a static storage attribute
__label__summary modifier indicating an extern storage attribute
__label__summary modifier indicating a private class
__label__summary modifier indicating a public class
__label__summary modifier indicating a protected class
__label__summary returns whether this c element exists in the model
__label__summary returns the first ancestor of this c element that has the given type returns @code null if no such an ancestor can be found this is a handleonly method
__label__summary returns the name of this element
__label__summary returns this elements kind encoded as an integer this is a handleonly method
__label__summary returns the c model
__label__summary returns the c project this element is contained in or @code null if this elementis not contained in any c project
__label__summary returns the element directly containing this elementor @code null if this element has no parent
__label__summary the filter for userlogs
__label__summary returns an absolute uri corresponding to the innermost file enclosing this element
__label__summary returns the underlying resource that contains this element or @code null if this elementis not contained in a resource
__label__summary returns the corresponding resource for this element or @code null if this elementdoes not have a corresponding resource
__label__summary returns whether this c element is readonly an element is readonlyif its structure cannot be modified by the c model
__label__summary accept a visitor and walk the ic element tree with it
__label__summary log on the stdout of the task
__label__summary log on the stderr of the task
__label__summary log on the mapreduce system logs of the task
__label__summary is imaginary number eg imaginr
__label__summary the java profiler information
__label__summary is complex number eg complex t
__label__summary this returns the combination of modifier bits for this type
__label__summary this returns the kind of basic type you are looking at the type isthen refined by qualifiers for signedunsigned and shortlonglong long
__label__summary interface for basic types
__label__summary default implementation of a root view model node this class may be subclassedto implement modelspecific event handling
__label__summary default implementation does not examine the event and assumes that everyevent should be processed to generate a delta
__label__summary default implementation creates a delta assuming that the root layout nodeis the input object into the view
__label__summary log the debug scripts stdout
__label__summary fixed gr bytes
__label__summary fixed gr bytes type
__label__summary fixed gr bytes type spec
__label__summary meta vint min
__label__summary write second copy compare eq
__label__summary for eq sized records ensure byte cmp where req
__label__summary assumes that writes will grow buffer deterministically
__label__summary verify written contents match
__label__summary assumes that writes will grow buffer deterministically
__label__summary verify written contents match
__label__summary deserialize written records write to separate buffer
__label__summary check stream read
__label__summary check read
__label__summary write to stream
__label__summary check write
__label__summary find the right log file
__label__summary calculate the start and stop
__label__summary skip upto start
__label__summary success
__label__summary be pessimistic if we referenced other configs
__label__summary get the builders to run
__label__summary only lock the workspace is this is a managed build or this project references others
__label__summary now treated as the same
__label__summary check whether the build has been canceled
__label__summary try the brute force approach first
__label__summary throw a core exception indicating that the clean command failed
__label__summary ask the makefile generator to generate any makefiles needed to build delta
__label__summary create a delta visitor to detect the build type
__label__summary make a full clean if an info needs a rebuild
__label__summary in case an error occured make it behave in the old stile
__label__summary use a build desacription model to calculate the resources to be cleaned only in case there are some changes to the project sources or build information
__label__summary perform necessary cleaning and build type calculation
__label__summary stick this in the list of stuff to warn the user about
__label__summary one possibility is that there is nothing to build
__label__summary ignore console failures
__label__summary throw the exception back to the builder
__label__summary report a successful clean
__label__summary emits a message to the console indicating that there were no source files to build
__label__summary fullbuild or clean
__label__summary the default behaviour make is invoked on all configurations and incremental build is handled by make
__label__summary one of its dependencies have rebuilt need to rebuild this configuration
__label__summary project resource has changed within eclipse need to build this configuration
__label__summary only build projects with project resource changes
__label__summary we need to do an incremental build at least
__label__summary the resource that changed has attributes which make it uninteresting so dont do anything
__label__summary is this a generated directory 
__label__summary try to resolve build macros in the build artifact name
__label__summary try to resolve build macros in the build artifact extension
__label__summary guarded by @link fs namesystem#read lock
__label__summary construct the command line for running the task jvm
__label__summary wrap a command in a shell to capture stdout and stderr to files setup commands such as setting memory limit can be passed whichwill be executed before exec if the tail length is the entire output will be saved
__label__summary get the desired maximum length of tasks logs
__label__summary export the pid of task jvm to env variable jvmpid currently pid is not used on windows
__label__summary success
__label__summary be pessimistic if we referenced other configs
__label__summary get the builders to run
__label__summary only lock the workspace is this is a managed build or this project references others
__label__summary now treated as the same
__label__summary check whether the build has been canceled
__label__summary try the brute force approach first
__label__summary throw a core exception indicating that the clean command failed
__label__summary ask the makefile generator to generate any makefiles needed to build delta
__label__summary create a delta visitor to detect the build type
__label__summary make a full clean if an info needs a rebuild
__label__summary in case an error occured make it behave in the old stile
__label__summary use a build desacription model to calculate the resources to be cleaned only in case there are some changes to the project sources or build information
__label__summary perform necessary cleaning and build type calculation
__label__summary stick this in the list of stuff to warn the user about
__label__summary one possibility is that there is nothing to build
__label__summary ignore console failures
__label__summary throw the exception back to the builder
__label__summary report a successful clean
__label__summary emits a message to the console indicating that there were no source files to build
__label__summary fullbuild or clean
__label__summary the default behaviour make is invoked on all configurations and incremental build is handled by make
__label__summary one of its dependencies have rebuilt need to rebuild this configuration
__label__summary project resource has changed within eclipse need to build this configuration
__label__summary only build projects with project resource changes
__label__summary we need to do an incremental build at least
__label__summary the resource that changed has attributes which make it uninteresting so dont do anything
__label__summary is this a generated directory 
__label__summary try to resolve build macros in the build artifact name
__label__summary try to resolve build macros in the build artifact extension
__label__summary base interface for a map function used in datasets map function
__label__summary protocol used by a data node to send lifeline messages to a name node
__label__summary writes bytes from a input stream directly into the buffer
__label__summary resets the buffer to empty
__label__summary returns the length of the valid data currently in the buffer
__label__summary returns the current contents of the buffer data is only valid to @link #get length
__label__summary constructs a new empty buffer
__label__summary a reusable @link output stream implementation that writes to an inmemorybuffer
__label__summary c adds a few things to function declarators
__label__summary used as return value for @link #get exception specification
__label__summary used as return value for @link #get virt specifiers
__label__summary represents a noexcept specification without an expression
__label__summary is this a const method
__label__summary sets the method to be const or not
__label__summary is this a volatile method
__label__summary construct the command line for running the debug script
__label__summary sets the method to be volatile or not
__label__summary when used as a lambda declarator it can be mutable
__label__summary sets this method to be pure virtual
__label__summary returns the refqualifier
__label__summary sets the refqualifier
__label__summary returns an array of typeids representing the exception specification the return value@link #noexceptionspecification indicates that no exceptions are specified whereas@link iast type id#emptytypeidarray is used for an empty exception specification
__label__summary add an exception specification type id
__label__summary configures the declarator with an empty exception specification as opposed to having none
__label__summary returns the noexcept expression @link #noexceptdefault if the noexcept specificationdoes not contain an expression or @code null the noexcept specification is not present see c 
__label__summary sets the noexcept expression
__label__summary returns the trailing return type as in code auto f int code or codenullcode
__label__summary trailing return type as in code auto f int code
__label__summary get function scope this node represents returns codenullcode if this declaratordoes not declare a functionprototype or functiondefinition
__label__summary returns whether this function is declared override
__label__summary sets whether this function is declared override
__label__summary returns whether this function is declared final
__label__summary sets whether this function is declared final
__label__summary returns the virtspecifiers of this function
__label__summary add a virtspecifiers to this function
__label__summary when used as a lambda declarator it can be mutable
__label__summary is the method pure virtual
__label__summary info for ic project
__label__summary add quotes to each of the command strings andreturn as a single string
__label__summary load training data
__label__summary fit the model
__label__summary print the coefficients and intercept for logistic regression
__label__summary method to return the location of user log directory
__label__summary endianness key
__label__summary currentlyselected data type
__label__summary bit floating point data type displayed precision
__label__summary bit floating point data type displayed precision
__label__summary get the user log directory for the job jobid
__label__summary number of columns to display
__label__summary renderer update mode
__label__summary test to check notification delay
__label__summary this space intentionally left blank
__label__summary interface to configure @link http url connection created by@link authenticated url instances
__label__summary configures the given @link http url connection instance@param conn the @link http url connection instance to configure@return the configured @link http url connection instance@throws io exception if an io error occurred
__label__summary tests for @code multisetadd@author jared levy
__label__summary validates the data in event to be appropriate for the@link drop handler#drop drag and drop event methodp note that even if your criterion is validated on client side you shouldalways validate the data on server side too@param drag event@return
__label__summary this needs to be implemented iff criterion does some lazy server sideinitialization the uidl painted in this method will be passed to clientside drop handler implementation implementation can assume that@link #accept drag and drop event is called before this method@param target@throws paint exception
__label__summary returns whether the criteria can be checked on the client or whether aserver request is needed to check the criteria this requirement may depend on the state of the criterion eg logicaloperations between criteria so this cannot be based on a markerinterface
__label__summary criterion that can be used create policy to acceptdiscard dragged contentpresented by @link transferable the drag and drop mechanism will verify the criteria returned by@link drop handler#get accept criterion before calling@link drop handler#drop drag and drop event the criteria can be evaluated either on the client browser see@link client side criterion or on the server see@link server side criterion if no constraints are needed an@link accept all can be used in addition to accepting or rejecting a possible drop criteria can provideadditional hints for client side painting@see drop handler@see client side criterion@see server side criterion@since 
__label__summary read a log file from start to end positions the offsets may be negativein which case they are relative to the end of the file for example readertaskid kind is the entire file and readertaskid kind is the last bytes
__label__summary set local fs once
__label__summary source document provider
__label__summary dispose all connected documents
__label__summary force refcount to 
__label__summary ignore
__label__summary any object which can accept registrations of @link tear down instances@author kevin bourrillion@since 
__label__summary registers a tear down implementor which will be run after the test properp in j unit language that means as an @code @ afterp in j unit language that means during the@link junitframework test case#tear down step
__label__summary base class for the events that are sent to various methods in ui provider
__label__summary creates a new ui provider event
__label__summary gets the vaadin service from which the event originates
__label__summary gets the request associated with this event
__label__summary shared functionality for hadoop streaming formatsa custom reader can be defined to be a record reader with the constructor belowand is selected with the option binhadoop streaming inputreader 
__label__summary a generic j unit test which tests add all operations on a set cant beinvoked directly please see@link comgooglecommoncollecttesting set test suite builder@author kevin bourrillion
__label__summary too many unchecked generic array creations
__label__summary create a path tuple of container path where the container ischosen from the host of the uria trailing slash can be added to the path this is the point wherethese es need to be appended because when you construct a @link pathinstance @link path#normalize path string string is calledwhich strips off any trailing slash@param uri uri to start from@param path path underneath@param add trailing slash should a trailing slash be added if there isnt one@return a new instance@throws swift configuration exception if the uri host doesnt parse intocontainerservice
__label__summary add a trailing slash if needed
__label__summary no container not good replace with 
__label__summary its a containerservice uri strip the container
__label__summary create a path tuple of container path where the container ischosen from the host of the uri@param uri uri to start from@param path path underneath@return a new instance@throws swift configuration exception if the uri host doesnt parse intocontainerservice
__label__summary query to see if the possible child object is a child path of thisobject the test is done by probing for the path of the this object beingat the start of the second with a trailing slash and bothcontainers being equal@param possible child possible child dir@return true iff the possible child is under this object
__label__summary test for the object matching a path ignoring the containervalue@param path path string@return true iff the objects name matches the path
__label__summary build an instance from a host object pair@param container container name@param object object ref underneath the container
__label__summary swift object
__label__summary swift container
__label__summary swift hierarchy mapping of container path
__label__summary configures the parser for csource code as accepted by gcc
__label__summary an array of long values compared with native jvm arrays thisullisupports using both inheap and offheap memorylilihas no bound checking and thus can crash the jvm process when assert is turned offliul
__label__summary this is a long so that we perform long multiplications when computing offsets
__label__summary returns the number of elements this array can hold
__label__summary fill this all with l
__label__summary sets the value at position @code index
__label__summary returns the value at position @code index
__label__summary required when creating a c merge viewer from the pluginxml file
__label__summary run hdfs dfsadmin fetch image and verify that the downloaded image iscorrect
__label__summary download a few fsimages using hdfs dfsadmin fetch image and verifythe results
__label__summary shamelessly stolen from nn storage
__label__summary read a record implementation should call num rec stats at the end
__label__summary this file was generated by lpg
__label__summary set the current status of the task to the given string
__label__summary report progress
__label__summary get the unique name for this task attempt
__label__summary group launch delegate launches each configuration in the user selected mode
__label__summary returns the current position in the input
__label__summary the context for task attempts
__label__summary get the last set status message@return the current status message
__label__summary a classvirtspecifier after a class name there is currently one specifier final@noimplement this interface is not intended to be implemented by clients@noextend this interface is not intended to be extended by clients@since 
__label__summary close this to future operations
__label__summary final specifier
__label__summary return the kind of this classvirtspecifier currently the only kind is final
__label__summary implementation of field designator
__label__summary active state of the namenode in this state namenode provides the namenodeservice and handles operations of type @link operation category#write and@link operation category#read
__label__summary all operations are allowed in active state
__label__summary utility functions some collectors may need@author vhirsl
__label__summary delete all discovered paths for the resource
__label__summary delete all discovered symbols for the resource
__label__summary delete a specific include path
__label__summary delete a specific symbol definition
__label__summary delete all discovered scanner info for the resource
__label__summary a task for rebuilding an index works for all indexers
__label__summary remove tasktags
__label__summary first clear the pdom
__label__summary returns the list of controls for which tooltips should be displayed by the build settings dialogpage@return the list of controls for which tooltips should automatically be displayed by the build settings dialogpage may return @code null to signify that tooltips are handled by the custom fieldeditor itself
__label__summary initializes the custom fieldeditor@param option the underlying buildoption@param extra argument an optional @link i option#get field editor extra argument extra argumentfor the fieldeditor may be @code null@param preference name the name of the preference this field editor binds to@param parent the parent of the field editors control@return @code true iff the custom fieldeditor can be successfully displayed returning @code falsewould cause the builtin fieldeditor to be displayed based on the options @link i option#get value type value type
__label__summary guicepersists java persistence api jpa support
__label__summary a java script call expression from the a hrefhttpsgithubcomestreeestreeblobmasterspecmd#callexpressiones tree specificationa
__label__summary task id should be managed as string rather than task id object
__label__summary so that logj can configure it from the configurationlogjproperties
__label__summary system properties passed in from jvm runner
__label__summary static final string iscleanupproperty hadooptasklogiscleanup static final string logsizeproperty hadooptasklogtotal log file size static final string taskidproperty hadooptasklogtaskid
__label__summary a simple logjappender for the task childsmapreduce system logs
__label__summary the task runner passes in the options as system properties setthe options if the setters havent already been called
__label__summary getter setter methods for logj
__label__summary set whether the task is a cleanup attempt or not@param is cleanuptrue if the task is cleanup attempt false otherwise
__label__summary get whether task is cleanup attempt or not@return true if the task is cleanup attempt false otherwise
__label__summary create a rolling upgrade marker file for each bp storage root if itdoes not exist already
__label__summary check whether the rolling upgrade marker file exists for each bp storageroot if it does exist then the marker file is cleared and moreimportantly the layout upgrade is finalized
__label__summary trash is enabled if at least one storage directory contains trash root
__label__summary delete all files and directories in the trash directories
__label__summary expose visibility for volume builder#commit
__label__summary get a target subdirectory under current for a given block file that is beingrestored from trash the subdirectory structure under trash mirrors that under current to keepimplicit memory of where the files are to be restored@return the target directory to restore a previously deleted block file
__label__summary get a target subdirectory under trash for a given block file that is beingdeleted the subdirectory structure under trash mirrors that under current to keepimplicit memory of where the files are to be restored if necessary@return the trash directory for a given block file that is being deleted
__label__summary determine whether we can use trash for the given block file trashis disallowed if a previous directory exists for thestorage directory containing the block
__label__summary get a block pool storage root based on data node storage root@param bp id block pool id@param dn cur dir data node storage root directory@return root directory for block pool storage
__label__summary return the data node root directory
__label__summary gets the data node storage directory based on block pool storage
__label__summary do the link hardlink finalized blocks in tmp dir
__label__summary hardlink all finalized and rbw blocks in from dir to to dir@param from dir directory where the snapshot is stored@param to dir the current data directory@throws io exception if error occurs during hardlink
__label__summary delete finalizedtmp dir in a separate thread
__label__summary rename previous to finalizedtmp
__label__summary already finalized
__label__summary block pool level previous directory
__label__summary finalize the block pool storage by deleting bpprevious directorythat holds the snapshot
__label__summary delete removedtmp dir
__label__summary rename previous to current
__label__summary rename current to tmp
__label__summary manages storage for the set of block pool slices which share a particularblock pool id on this data node this class supports the following functionalityolli formatting a new block pool storagelili recovering a storage state to a consistent state if possiblelili taking a snapshot of the block pool during upgradelili rolling back a block pool to a previous snapshotlili finalizing block storage by deletion of a snapshotliul@see storage
__label__summary id of the blockpool
__label__summary these maps are used as an optimization to avoid one filesystem operationper storage on each heartbeat response
__label__summary load one storage directory recover from previous transitions if required@param ns info namespace information@param data dir the root path of the storage directory@param start opt startup option@return the storage directory successfully loaded@throws io exception
__label__summary format
__label__summary recovery part is common
__label__summary analyze and load storage directories recover from previous transitions ifrequired the block pool storages are either all analyzed or none of them is loaded therefore a failure on loading any block pool storage results a faultydata volume@param ns info namespace information@param data dirs storage directories of block pool@param start opt startup option@return an array of loaded block pool directories@throws io exception on error
__label__summary sd is locked but not opened
__label__summary analyze storage directories recover from previous transitions if required the block pool storages are either all analyzed or none of them is loaded therefore a failure on loading any block pool storage results a faultydata volume@param ns info namespace information@param data dirs storage directories of block pool@param start opt startup option@throws io exception on error
__label__summary format a block pool slice storage@param dn cur dir data storage current directory@param ns info the name space info@throws io exception signals that an io exception has occurred
__label__summary format a block pool slice storage@param bp sdir the block pool storage@param ns info the name space info@throws io exception signals that an io exception has occurred
__label__summary create directory
__label__summary remove block pool level storage directory@param abs path to remove the absolute path of the root for the block poollevel storage to remove
__label__summary set layout version namespace id and blockpool id into block pool storage version file
__label__summary validate and set block pool id
__label__summary analyze whether a transition of the bp state is required andperform it if necessarybr rollback if previous lv layoutversion prev c time namenodec time upgrade if thislv layoutversion thisc time namenodec time regularstartup if thislv layoutversion thisc time namenodec time@param sd storage directory sdcurrentbpid@param ns info namespace info@param start opt startup option@return true if the new properties has been written
__label__summary restore all the files in the trash the restored files are retained during rolling upgrade rollback they are deleted during rolling upgrade downgrade
__label__summary regular startup
__label__summary upgrade
__label__summary layout version layoutversion thisc time ns infoc time must shutdown
__label__summary upgrade to any release after included release eg upgrade procedure is as followsolli if sdcurrentbpidprevious exists then delete itlili rename sdcurrentbpidcurrent tosdcurrentbpidcurrentprevioustmplili create new sdcurrentbpidcurrent directoryliolli hard links for block files are created from previoustmp to currentlili save new version file in current directoryliolli rename previoustmp to previousli ol@param bp sd storage directory sdcurrentbpid@param ns info namespace info from the namenode@throws io exception on error
__label__summary upgrading is applicable only to release with federation or after
__label__summary get sdprevious directory
__label__summary delete sdcurrentbpidprevious dir before upgrading
__label__summary create new sdcurrent with block files hardlinks and version
__label__summary cleanup the detach dir if the directory is not empty report an error otherwise remove thedirectory@param detach dir detach directory@throws io exception if the directory is not empty or it can not be removed
__label__summary restore all files from the trash directory to their correspondinglocations under current
__label__summary recurse to process subdirectories
__label__summary failsafe we should not hit this case but lets make sure we never overwrite a newer version of a block file with an older version
__label__summary roll back to old snapshot at the block pool level if previous directory existsolli rename sdcurrentbpidcurrent to removedtmplili renamesdcurrentbpidprevious to currentlili remove removedtmpliol do nothing if previous directory does not exist@param bp sd block pool storage directory at sdcurrentbpid
__label__summary regular startup if previous dir does not exist
__label__summary read attributes out of the version file of previous directory
__label__summary cannot rollback
__label__summary initialize resource bundle
__label__summary the lookup does not find the binding that is defined by this name
__label__summary unqualified name also base class for operator and conversion name
__label__summary this will support up to files
__label__summary file name generator each directory contains not more than a fixed number files per dirof files and directories when the number of files in one directory reaches the maximumthe generator creates a new directory and proceeds generating files in it the generated namespace tree is balanced that is any path to a leaffile is not less than the height of the tree minus one
__label__summary skeletal implementation of @link immutable sorted set#descending set@author louis wasserman
__label__summary injects dependencies into the fields and methods on instances of type @code t ignores thepresence or absence of an injectable constructor@param t type to inject members of@author crazybob@googlecom bob lee@author jessewilson@googlecom jesse wilson@since 
__label__summary injects dependencies into the fields and methods of @code instance ignores the presence orabsence of an injectable constructorp whenever guice creates an instance it performs this injection automatically after firstperforming constructor injection so if youre able to let guice create all your objects foryou youll never need to use this method@param instance to inject members on may be @code null
__label__summary a @link compressor based on the popularzlib compression algorithmhttpwwwzlibnet
__label__summary the compression level for zlib library
__label__summary compression level for no compression
__label__summary compression level for fastest compression
__label__summary compression level 
__label__summary compression level 
__label__summary three 
__label__summary compression level 
__label__summary compression level 
__label__summary compression level 
__label__summary compression level 
__label__summary compression level 
__label__summary compression level for best compression
__label__summary default compression level
__label__summary compression strategy best used for data consisting mostly of smallvalues with a somewhat random distribution forces more huffman codingand less string matching
__label__summary compression strategy for huffman coding only
__label__summary compression strategy to limit match distances to onerunlength encoding
__label__summary compression strategy to prevent the use of dynamic huffman codesallowing for a simpler decoder for special applications
__label__summary default compression strategy
__label__summary the type of header for compressed data
__label__summary no headerstrailerschecksums
__label__summary default headerstrailerschecksums
__label__summary simple gzip headerstrailers
__label__summary initialize the native library
__label__summary ignore failure to loadinitialize nativezlib
__label__summary creates a new compressor with the default compression level compressed data will be generated in zlib format
__label__summary creates a new compressor taking settings from the configuration
__label__summary creates a new compressor using the specified compression level compressed data will be generated in zlib format@param level compression level # compression level@param strategy compression strategy # compression strategy@param header compression header # compression header@param direct buffer size size of the direct buffer to be used
__label__summary prepare the compressor to be used in a new stream with settings defined inthe given configuration it will reset the compressors compression leveland compression strategy@param conf configuration storing new settings
__label__summary reinitialize zlibs output direct buffer
__label__summary copy enough data from user buf to uncompressed direct buf
__label__summary consume remaining compressed data
__label__summary returns the total number of uncompressed bytes input so farp
__label__summary returns the total number of compressed bytes output so far
__label__summary get atmost len bytes
__label__summary zlib did not consume all input buffer
__label__summary zlib consumed all input buffer
__label__summary compress data
__label__summary reinitialize the zlibs output direct buffer
__label__summary copy enough data from user buf to uncompressed direct buf
__label__summary uncompressed direct buf is not full
__label__summary the compression level for zlib library
__label__summary a container for things that can be tagged and then stored in the index database
__label__summary a resource that is served through the connector that is using the resource@see abstract client connector#set resource string resource@author vaadin ltd@version @version@@since 
__label__summary gets the virtual filename for this resource@return the file name associated to this resource
__label__summary thrown for unexpected filesystem errors presumed to reflect disk errorsin the native filesystem
__label__summary returns an array of the i build macro status statuses this exception holds
__label__summary this exception is thrown in the case of some build macrosrelated operation failure the exception typically contains one or more i build macro status statuses@since @noextend this class is not intended to be subclassed by clients
__label__summary all serializable objects should have a stable serial version uid
__label__summary private static final long serial version uid l
__label__summary we mimic the order from gen
__label__summary creates based on your criteria a j unit test suite that exhaustively testsa @code multiset implementation@author jared levy@author louis wasserman
__label__summary implements project nature for llvm projects
__label__summary configure the project which have this project nature
__label__summary deconfigure those projects which have this project nature
__label__summary return the project
__label__summary set the project
__label__summary a specialization of a template template parameter this is needed when a nested templatehas a template template parameter whose default value is dependent on a templateparameter of an enclosing template this class can represent a specialization of either an ast or a pdom template parameter
__label__summary not going to happen
__label__summary not aggregated 
__label__summary aggregated
__label__summary color manager for cc debug ui@since jul 
__label__summary some microbenchmarks for the @link objects to string helper class@author osvaldo doederlein
__label__summary annotation utilities@author crazybob@googlecom bob lee
__label__summary returns @code true if the given annotation type has no attributes
__label__summary generates an annotation for the annotation class requires that the annotation is alloptionals
__label__summary implements @link annotation#equals
__label__summary implements @link annotation#hash code
__label__summary cut off brackets
__label__summary implements @link annotation#to string
__label__summary checks for the presence of annotations caches results because android doesnt
__label__summary returns true if the given class has one of the desired annotations
__label__summary constructs a new checker that looks for annotations of the given types
__label__summary returns true if the given type has one of the desired annotations
__label__summary adds an error if there is a misplaced annotations on @code type scopingannotations are not allowed on abstract classes or interfaces
__label__summary we let dagger components through to aid migrations
__label__summary gets a key for the given type member and annotations
__label__summary returns the binding annotation on @code member or null if there isnt one
__label__summary interface to the test suite of the tests hierarchy test suites group the test cases and the other test suites they also provides group operations eg status or execution time access@noextend this interface is not intended to be extended by clients@noimplement this interface is not intended to be implemented by clients
__label__summary input format that is a code combine file input formatcodeequivalent forcode sequence file input formatcode@see combine file input format
__label__summary a record reader that may be passed to code combine file record readercodeso that it can be used in a code combine file input formatcodeequivalentfor code sequence file input formatcode@see combine file record reader@see combine file input format@see sequence file input format
__label__summary this constructor signature is required by combine file record reader
__label__summary run the action to completion using the supplied path
__label__summary handle the key release
__label__summary create a resource navigator rename action and use the tree of the supplied viewerfor editing
__label__summary create a resource navigator rename action and use the tree of the supplied viewerfor editing
__label__summary the resource navigator rename action is the rename action used by the resource navigator that also allows updating after rename
__label__summary stringformat
__label__summary null pointer tester
__label__summary depends on the correctness of big integer mathfactorial
__label__summary too slow
__label__summary slow
__label__summary slow
__label__summary now figure out what rounding mode we should behave like it depends if floor was oddeven
__label__summary relies on the correctness of sqrt big integer halfuphalfdown
__label__summary sqrtx result so x result result result result 
__label__summary sqrtx result so x result result result result 
__label__summary sqrtx result so x result result result result 
__label__summary sqrtx result so x result result result result 
__label__summary relies on the correctness of sqrt big integer floor
__label__summary relies on the correctness of log big integer halfuphalfdown
__label__summary x result or else we would have rounded down
__label__summary x result or else we would have rounded up
__label__summary x result or else we would have rounded down
__label__summary x result or else we would have rounded up
__label__summary relies on the correctness of log big integer floor
__label__summary relies on the correctness of log big integer halfuphalfdown
__label__summary x result or else we would have rounded down
__label__summary x result or else we would have rounded up
__label__summary x result or else we would have rounded down
__label__summary x result or else we would have rounded up
__label__summary relies on the correctness of is power of two big integer
__label__summary checks for a single bit set
__label__summary tests for big integer math@author louis wasserman
__label__summary basic testing of config based scanner config profile management this test runs through some of the funcationality used by the discovery tab@throws core exception
__label__summary test changing i cfg scanner config builder info set settings
__label__summary test changing settings on one of the scanner config builder infos
__label__summary get all the settings and invert them
__label__summary persist the changes
__label__summary save the project description
__label__summary check that the changes have persisted
__label__summary check that the changes have persisted
__label__summary test restore defaults
__label__summary save the project description
__label__summary check settings are back to original
__label__summary a helper to load the native hadoop code ie libhadoopso this handles the fallback to either the bundled libhadoop linuxisoor the default java implementations where appropriate
__label__summary try to load native hadoop library and set fallback flag appropriately
__label__summary ignore failure to load
__label__summary unary expression in c
__label__summary multicore visualizer thread object
__label__summary thread pixie spot widthheight
__label__summary minimum containing object size to allow thread to draw itself
__label__summary parent cpu
__label__summary visualizer model thread
__label__summary whether this thread is part of a currently selected process
__label__summary constructor
__label__summary dispose method
__label__summary gets parent core
__label__summary sets parent core
__label__summary gets thread model object
__label__summary gets process id
__label__summary gets thread id
__label__summary gets thread state
__label__summary sets whether threads process is selected
__label__summary gets whether threads process is selected
__label__summary gets thread color based on current state
__label__summary invoked to allow element to paint itself on the viewer canvas
__label__summary draw an alphashaded pixie light for each thread
__label__summary special case for the process thread draw an enclosing circle
__label__summary draw text annotations
__label__summary draw tid
__label__summary dont visit the method
__label__summary for implementation sharing between pdomcpp class type and pdomcpp class specialization
__label__summary a base class for @link output format
__label__summary breakpoints vm model proxy that includes an i checkbox model proxy implementation
__label__summary set whether the output of the job is compressed
__label__summary c document setup participant
__label__summary is the job output compressed
__label__summary initialize resource bundle
__label__summary for class types the constructor being called
__label__summary set the @link compression codec to be used to compress job outputs
__label__summary get the @link compression codec for compressing the job outputs
__label__summary return the state text as the to string value
__label__summary is a state transition valid there are no checks for currentproposedas that is considered a nontransitionusing an array kills off all branch misprediction costs at the expenseof cache line misses
__label__summary check that a state tansition is valid andthrow an exception if not
__label__summary atomic write of the new state
__label__summary enter a state thread safe
__label__summary verify that that a service is in a given state
__label__summary query that the state is in a specific state
__label__summary query the service state this is a nonblocking operation
__label__summary create a service state model instance in the chosen state
__label__summary ensure that the output directory is set and not already there
__label__summary create the service state model in the @link servicestate#notinitedstate
__label__summary the name of the service used in exceptions
__label__summary the state of the service
__label__summary uninited inited started stopped
__label__summary uninited
__label__summary inited
__label__summary started
__label__summary stopped
__label__summary map of all valid state transitionscurrent proposed proposed 
__label__summary normalize the output directory
__label__summary implements the service state model
__label__summary a delegate for the add line breakpoint actionp initially derived from add function breakpoint action delegate
__label__summary get delegation token for the out dirs file system
__label__summary check its existence
__label__summary creates a new context information with an image@param image the image to display when presenting the context information@param context display string the string to be used when presenting the context@param information display string the string to be displayed when presenting the context informationmay not be codenullcode
__label__summary creates a new context information without an image@param context display string the string to be used when presenting the context@param information display string the string to be displayed when presenting the context information
__label__summary the image to be displayed
__label__summary the position to display the information
__label__summary the information to be displayed
__label__summary the name of the context
__label__summary created on may 
__label__summary set the @link path of the output directory for the mapreduce job
__label__summary nonha case no need to set rmid
__label__summary set rmid to get the corresponding rmaddress
__label__summary build a list of service addresses to form the service name
__label__summary preserve the token service sent by the rm when adding the token to ensure we replace the previous token setup by the rm afterwards we can update the service address for the rpc layer
__label__summary extends the abstract request interceptor class and provides an implementationthat simply forwards the am requests to the cluster resource manager
__label__summary method for compressor availability check
__label__summary compressed bytes
__label__summary use default of as buffer size and compression overhead of of buffer size bytes bytes zlib algorithm
__label__summary no byte is available because stream was closed
__label__summary set the @link path of the tasks temporary output directoryfor the mapreduce job
__label__summary create decompression stream
__label__summary use compressed output as input for decompression
__label__summary check compressed output
__label__summary decompressorend
__label__summary close without write
__label__summary get the @link path to the output directory for the mapreduce job
__label__summary default is to write a new line after the trailing comments
__label__summary helper function to create the tasks temporary output directory andreturn the path to the tasks output file
__label__summary base class for node writers this class contains methods and string constantsused by multiple node writers@author emanuel graf ifs
__label__summary default to true when in doubt just leave the file in the cache
__label__summary create a file with length entries
__label__summary generate a number of files with various lengths
__label__summary check the split
__label__summary we should have a single split as the length is comfortably smaller than the block size
__label__summary create a combine split for the files
__label__summary create files with a variety of lengths
__label__summary helper function to generate a @link path for a file that is unique forthe task within the job output directory
__label__summary append the contents to the file
__label__summary this method appends the contents to a file
__label__summary typedefs for c
__label__summary p the path can be used to create custom files from within the map andreduce tasks the path name will be unique for each task the path parentwill be the job output directoryplsp this method uses the @link #get unique name method to make the file nameunique for the taskp
__label__summary helper function to generate a name that is unique for the taskp the generated name can be used to create custom files from within thedifferent tasks for the job the names for different tasks will not collidewith each otherpp the given name is postfixed with the task type m for maps r forreduces and the task partition number for example give a name testrunning on the first map o the job the generated name will betestmp
__label__summary get the @link path to the tasks temporary output directoryfor the mapreduce job
__label__summary pi notei task output path is set by the frameworkp
__label__summary a reduce task
__label__summary register a ctor
__label__summary sets the tree input@param inputthe tree input
__label__summary adds a filter to the tree viewer@param filtera filter
__label__summary handles cancel button pressed event
__label__summary creates the tree viewer
__label__summary test ui for topcenter and topright alignments in vertical layout
__label__summary needed to stop eclipse whining
__label__summary resets the contents of sorted multiset to have entries a c for the navigation tests
__label__summary some tests assume several 
__label__summary tester for navigation of sorted multisets
__label__summary try sending old request again
__label__summary try resending
__label__summary a custom comparator for map output files here the ordering is determined by the files size and path in case of files with same size and different file paths the first parameter is considered smaller than the second one in case of files with same size and path are considered equal
__label__summary trigger the scheduling so the am gets launched
__label__summary this class tests hadoop streamings stream job class
__label__summary the hotornotcom of unit tests makes sure that the standby not onlyhas namespace information but also has the correct block reports etc
__label__summary we read from the standby to watch block locations
__label__summary have to force an edit log roll so that the standby catches up
__label__summary block locations should show up on standby
__label__summary trigger immediate heartbeats and block reports so that the active trusts all of the d ns
__label__summary a sorted set for keeping a set of map output files on disk
__label__summary change replication
__label__summary change back to 
__label__summary regression test for hdfs start an ha cluster with a dn write several blocks to the fs with replication shutdown the dn wait for the n ns to declare the dn dead all blocks will be underreplicated restart the dn in the bug the standby node would only very slowly notice the blocks returningto the cluster
__label__summary we read from the standby to watch block locations
__label__summary create blocks
__label__summary stop the dn
__label__summary make sure both n ns register it as dead
__label__summary the sbn will not have any blocks in its needed replication queue since the sbn doesnt process replication
__label__summary wait for both n ns to reregister the dn
__label__summary register the set of mapper outputs created by a local job runnerbasedjob with this reduce task so it knows where to fetch from this should not be called in normal networked execution
__label__summary check if mapoutputs are to be compressed
__label__summary localize the given job conf to be specific for this task
__label__summary parse the assembly instruction result each instruction has the followingfields address function name offset instructionaddressxcfuncnamemainoffsetinstmov oaddressxcfuncnamemainoffsetinstsethi hix oaddressxfuncnamemainoffsetinstrestore an instruction may also contain opcode bytesaddressxbfuncnamemainoffsetopcodese a instcall xc main in addition the opcode and arguments are extracted form the assembly instruction
__label__summary for the instruction we do not want the c string but the translated string since the only thing we are doing is displaying it
__label__summary to avoid improper displaying of instructions we need to translate tabs
__label__summary count the nonwhitespace characters
__label__summary skip any whitespace characters
__label__summary write the number of maps
__label__summary guard no argument
__label__summary decode given string representation of a nonnegative integer ahexadecimal encoded integer is expected to start with codexcode@param stringdecimal or hexadecimal representation of an nonnegative integer@return address value as code big integercode
__label__summary decode given string representation of a space separated hex encoded bytearray@param stringspace separated hexadecimal byte array@return opcode bytes as code big integercode
__label__summary removing space separation and parse as single big integer
__label__summary the parsed information
__label__summary this file was generated by lpg
__label__summary this file was generated by lpg
__label__summary get the input files for the reducer for local jobs
__label__summary this file was generated by lpg
__label__summary this file was generated by lpg
__label__summary currently defined in registry constantscoresitexml
__label__summary ignore all yarn application timeline service version properties
__label__summary used in the xml file as a variable reference internal to the xml file
__label__summary update progress
__label__summary possibly obsolete but unable to verify 
__label__summary should probably be moved from yarndefaultxml to mapreddefaultxml
__label__summary allocate for usage
__label__summary ignore deprecated properties
__label__summary set by containerexecutorcfg
__label__summary ignore distributed scheduling related configurations since it is still a work in progress feature
__label__summary ignore node manager work in progress variables
__label__summary used as java command line properties not xml
__label__summary ignore all yarn application timeline service version properties
__label__summary specific properties to skip
__label__summary close the skip writer once all the ranges are skipped
__label__summary set error modes
__label__summary allocate for usage
__label__summary unit test class to compare@link orgapachehadoopyarnconf yarn configuration andyarndefaultxml for missing properties currently only throws an errorif the class is missing a propertypp refer to @link orgapachehadoopconf test configuration fields basefor how this class works
__label__summary start thread that will handle communication with parent
__label__summary error stream reader
__label__summary output stream reader
__label__summary check if it is a cleanup job task
__label__summary clear the old listeners
__label__summary set the colors
__label__summary initialize the codec
__label__summary configures this action with a label tool tip and description
__label__summary updates the enabled state of the action fires a property change if the enabled state changes
__label__summary constructs a new action in the given text viewer withthe specified operation code
__label__summary common function for actions that operate on a text viewerp clients may subclass this classp@since 
__label__summary free up the data structures
__label__summary test ui for dn d image element size
__label__summary sort is complete
__label__summary c element label provider that respects settings from the appearance preference page triggers a viewer update when a preference changes@deprecated use @link appearance aware label provider instead
__label__summary constructor for standard c element label provider@see c element label provider#c element label provider
__label__summary creates a standard c element label provider with defaulttextflags defaultimageflag sand the error tick adornment provider
__label__summary turn on or off the flags depending on propertypreference changes
__label__summary make output collector
__label__summary a preference store that presents the state of the properties of a cc breakpointtracepoint or dynamicprintf
__label__summary this map is the current propertiesvalues being maintainedmanipulated
__label__summary indicate that progress update needs to be sent
__label__summary get the resource to apply the marker against this may not be the sameresource the dialog was created for if the user has selected a differentresource
__label__summary apply reduce function
__label__summary already workspace runnable setting markers are safe
__label__summary breakpointget markerset attributei markerlinenumber get inti markerlinenumber breakpointget markerset attributeic line breakpointrequestedline get inti markerlinenumber 
__label__summary this allow set attributes contributed by other plugins
__label__summary to be safe refresh the breakpoint message as the property change might affect it
__label__summary on initial creation of bp make sure that requested values of breakpoint match the current values ie make sure it starts as a notrelocated breakpoint see cdi debug modelset line breakpoint attributes
__label__summary do we need to fire an event
__label__summary increment processed counter only if skipping feature is enabled
__label__summary returns @code fieldclass @code methodclass or @code constructorclass
__label__summary formats a member as concise string such as @code javautil array listsize@code javautil array listinit or @code javautil listremove
__label__summary class utilities
__label__summary methods to generate the home directory for dummy users
__label__summary wrap value iterator to report progress
__label__summary represents a container of all the i archives found in the projectwhile inspecting the project@noextend this interface is not intended to be extended by clients@noimplement this interface is not intended to be implemented by clients
__label__summary specifies the scope or intended usage of an acl entry
__label__summary make a task context so we can get the classes
__label__summary exit status the values associated with each exit status is directly mappedto the processs exit code in command line
__label__summary this interface is used for choosing the desired number of targetsfor placing block replicas
__label__summary choose inum of replicasi data nodes for iwriterito rereplicate a block with size iblocksizei
__label__summary make a reducer
__label__summary for lhs rhs
__label__summary lhs rhs
__label__summary split data nodes into two sets one set includes nodes on rack withmore than one replica the other set contains the remaining nodes
__label__summary get rack string from a data node
__label__summary exactly one contains nodes on rack with only one replica
__label__summary more than one contains nodes on rack with more than one replica
__label__summary adjust rackmap more than one and exactly one after removing replica on cur
__label__summary check if the move is allowed used by balancer and other tools
__label__summary for lhs rhs
__label__summary used to setup a block placement policy object this should be defined byall implementations of a block placement policy
__label__summary select the excess replica storages for deletion based on eitherdel nodehint excess storage types
__label__summary this class does not provide the functionality of placing a block in favored datanodes the implementations of this class are expected to provide this functionality
__label__summary verify for dimensional resources ie memory and cpu dominant resource types
__label__summary write all documents to their respective files
__label__summary getting here means that the replace was taken care of by the previous code otherwise it will be removed in the subsequent code for the removed case
__label__summary somewhat edgecase where a file from one qt project was moved to a different qt project
__label__summary resource was moved from another location
__label__summary determine from the file extension where we should add this resource
__label__summary cache the project file under its containing project and read its contents into a document
__label__summary cache the project files so we dont continuously open them
__label__summary job that calls the code qt project file modifiercode after changes to resources found in qt projects in order to update theircodesourcescode variable
__label__summary performs no reduction writing all input values directly to the output
__label__summary writes all keys and values directly to output
__label__summary internally used by the calendar
__label__summary assoc is marked to be added
__label__summary the line wrapping tab page
__label__summary represents a line wrapping category
__label__summary in order to select a category with preview initially
__label__summary create the top level node to deal with the root selection
__label__summary create the group nodes next they represent the first level shown in the view
__label__summary now set this schema set as the layout set
__label__summary current default for register formatting
__label__summary selection state object
__label__summary combo indent style combo
__label__summary label select indentation style
__label__summary checkbox force split
__label__summary combo split style combo
__label__summary label select split style
__label__summary create a new line wrapping tab page
__label__summary the key for the preview line width
__label__summary a special options store wherein the preview line width is kept
__label__summary an object containing the state for the ui
__label__summary the current selection of elements
__label__summary the category listener which makes the selection persistent
__label__summary a collection containing the categories tree this is used as model for the tree viewer
__label__summary the dialog settings
__label__summary the key to save the users preview window width in the dialog settings
__label__summary the default preview line width
__label__summary input writer that writes the clients input as raw bytes
__label__summary validator for validating that an @link long is inside a given range
__label__summary creates a validator for checking that an long is within a given range by default the range is inclusive ie both min value and max value arevalid values use @link #set min value includedboolean or@link #set max value includedboolean to change it
__label__summary used to evaluate expressions in preprocessor directives
__label__summary alternate keywords are not replaced by a 
__label__summary keywords are replaced by 
__label__summary return early
__label__summary a suffix cannot start with a number
__label__summary possible that the prefix is bad
__label__summary the rest should be a suffix
__label__summary load and parse the data file converting it to a data frame
__label__summary index labels adding metadata to the label column fit on whole dataset to include all labels in index
__label__summary automatically identify categorical features and index them set max categories so features with distinct values are treated as continuous
__label__summary split the data into training and test sets held out for testing
__label__summary train a gbt model
__label__summary convert indexed labels back to original labels
__label__summary chain indexers and gbt in a pipeline
__label__summary train model this also runs the indexers
__label__summary make predictions
__label__summary select example rows to display
__label__summary select prediction true label and compute test error
__label__summary listens to change in doccomment ownership and reinitializesthe editors or a safe superset of that need reopening
__label__summary this could be smarter in determining smaller sets of editors to reopen
__label__summary abstract dialog page for cc project paths page for x projects
__label__summary this interface represents the given build macro clients may implement or extend this interface
__label__summary can hold any text string
__label__summary can hold the array of text string values
__label__summary can hold file path
__label__summary can hold the array of file path values
__label__summary can hold dir path
__label__summary can hold the array of dir path values
__label__summary can hold both file and dir path
__label__summary can hold the array of pathany values
__label__summary returns the macro name
__label__summary too many unchecked generic array creations
__label__summary a generic j unit test which tests @code remove operations on a map cant beinvoked directly please see
__label__summary success
__label__summary success
__label__summary success
__label__summary prerequisites of this special target are targets themselves this shall casecommands associated with them not to be written to the standard output beforethey are executed
__label__summary reset the count cache and all the value caches
__label__summary reset selected value caches
__label__summary returns the cache for a value at given index
__label__summary returns the cache for data generator count
__label__summary returns the data generator that this cache manager wraps
__label__summary map of caches for retrieving values each value index has a separatecache value object
__label__summary cache for data generators count
__label__summary data generator that this cache manager is a wrapper for
__label__summary cache class for retrieving the data generators values
__label__summary reset the cache when the count is changed
__label__summary cache class for retrieving the data generators count
__label__summary a wrapper class for the @link i data generator interface which returns acpm cache objects to use for data retrieval instead of calling
__label__summary rovides mechanisms to get various resource handlers cpu memory networkdisk etc based on configuration
__label__summary returns an initialized threadsafe c groups handler instance
__label__summary class used to initialize default preference values
__label__summary the following preferences should be kept in the store
__label__summary remove the temporary file
__label__summary the mf order must correspond with manifestjarfile order
__label__summary update the manifest in the jar
__label__summary check that the manifest is ok
__label__summary write the manifest to the temporary file
__label__summary determine a temporary file name
__label__summary writes the manifest to given jar file
__label__summary writes a manifest attribute to a temporary buffer
__label__summary thrown when a symbolic link is encountered in a path
__label__summary test to check ability to reschedule events unlimited times
__label__summary reschedule event for the first time
__label__summary reschedule event for the second time
__label__summary dn d event by y axis
__label__summary returns the name of the enumerator
__label__summary returns the ordinal either explicitly or implicitly assigned to the enumerator
__label__summary this file was generated by lpg
__label__summary used during overload resolution as a placeholder for function sets
__label__summary utility methods for working with @link flushable objects
__label__summary flush a @link flushable with control over whether an @code io exception may be thrown
__label__summary equivalent to calling @code flushflushable true but with no @code io exception in thesignature
__label__summary widget wrapper height
__label__summary widget wrapper height
__label__summary vtabsheettabsheetpanel height
__label__summary multirow selection model
__label__summary height of widget might have changed due wrapping
__label__summary width first
__label__summary shows the widget at the specified index this causes the currentlyvisible widget to be hidden
__label__summary event handling for selection with space key
__label__summary a panel that displays all of its child widgets in a deck where only onecan be visible at a time it is used by
__label__summary this class has the same basic functionality as the gwt deck panel@link comgooglegwtuserclientui deck panel with the exception that itdoesnt manipulate the child widgets width and height attributes
__label__summary creates an empty tabsheet panel
__label__summary adds the specified widget to the deck
__label__summary gets the index of the currentlyvisible widget
__label__summary inserts a widget before the specified index
__label__summary trying to replace grid
__label__summary unpin deselected rows
__label__summary there was a problem opening the log file so log to the console
__label__summary writes the given string to the log followed by the line terminator string
__label__summary shuts down the log
__label__summary weve shutdown the log so not much else we can do
__label__summary took out the stack dump too much space
__label__summary took out the stack dump too much space
__label__summary number of partitions
__label__summary step in sequence
__label__summary end of test sequence
__label__summary maximum error for considering too bigsmall bucket
__label__summary maximum number of oddly sized buckets
__label__summary test partitioner for patterns
__label__summary test sequence 
__label__summary inject some resources initially
__label__summary handler for @link grid click events that happen in the header of the grid
__label__summary build entry storage has a handle back to the build language datato allow checking on which language entries are actually defined
__label__summary there was a problem opening the log file so log to the console
__label__summary extending single browser test just to include the test into our test suites
__label__summary the default presentation control creator
__label__summary part listener handling editor close
__label__summary default control creator
__label__summary provides information for the current word under the cursor based on the documentation hoverand spelling correction hover
__label__summary abstract base for classes that read the clients output
__label__summary initializes the output reader this method has to be called beforecalling any of the other methods
__label__summary nothing here yet but that might change in the future
__label__summary read the next keyvalue pair outputted by the client
__label__summary returns the current key
__label__summary returns the current value
__label__summary returns the last output from the client as a string
__label__summary writes the given string to the log followed by the line terminator string
__label__summary shuts down the log
__label__summary weve shutdown the log so not much else we can do
__label__summary set the reserved vcores
__label__summary get the reserved vcores
__label__summary set the number of reserved containers
__label__summary get the number of reserved containers
__label__summary set the number of allocated containers
__label__summary set the number of pending containers
__label__summary get the number of pending containers
__label__summary set the pending vcores
__label__summary get the pending vcores
__label__summary set the allocated vcores
__label__summary get the allocated vcores
__label__summary set the available vcores
__label__summary get the available vcores
__label__summary set the reserved memory in mb
__label__summary get the reserved memory in mb
__label__summary set the pending memory in mb
__label__summary get the pending memory in mb
__label__summary set the allocated memory in mb
__label__summary get the allocated memory in mb
__label__summary set the available memory in mb
__label__summary get the available memory in mb
__label__summary set the number of active users
__label__summary log writer utility@author vhirsl
__label__summary get the number of active users
__label__summary set the number of failed apps
__label__summary get the number of failed apps
__label__summary set the number of killed apps
__label__summary get the number of killed apps
__label__summary set the number of completed apps
__label__summary get the number of completed apps
__label__summary set the number of pending apps
__label__summary get the number of pending apps
__label__summary set the number of running apps
__label__summary get the number of running apps
__label__summary set the number of apps submitted
__label__summary get the number of apps submitted
__label__summary an adapter class for metrics source and associated filter and jmx impl
__label__summary initialize to true so we always trigger update m bean info cache the first time calling update jmx cache
__label__summary hack to avoid most of the innocuous races
__label__summary temporarilly advance the expiry while updating the cache
__label__summary in case regular interval update is not running
__label__summary get all the metrics to populate the sink caches
__label__summary represents a mount entry
__label__summary host corresponding to the mount entry
__label__summary path corresponding to the mount entry
__label__summary collect the stats
__label__summary operation
__label__summary gets the file to delete
__label__summary returns the editor document
__label__summary returns the content of the editor buffer
__label__summary override to relax checking of extra results
__label__summary filter out proposals keep only templates
__label__summary filter out template and keyword proposals
__label__summary for the time being lets be optimistic
__label__summary call the c content assist processor
__label__summary sets up the projects content
__label__summary maintains information which may be used by the job history indexingsystem
__label__summary keep url of main view
__label__summary do it times to verify that this is not broken after first time
__label__summary verify we are in another view and url is correct
__label__summary go to prompted view
__label__summary click back button
__label__summary verify we are in main view and url is correct
__label__summary concurrent modification exception
__label__summary indicates that a result could not be returned while preparing or resolving a binding the callershould @link errors#merge errors merge the errors from this exception with their existingerrors
__label__summary allows us decouple the enum identifier in the code from its textual representation in the gui
__label__summary returns the affected i path
__label__summary a connector for @link progress bar renderer
__label__summary dialog to edit a template
__label__summary creates a new action
__label__summary updates the enabled state of the action fires a property change if the enabled state changes
__label__summary creates a new dialog
__label__summary file
__label__summary edit
__label__summary the above specifies this
__label__summary but it doesnt specify this
__label__summary need to do this otherwise string will jit
__label__summary calling get on an optional integer multiple times will keep giving the same thing
__label__summary but getting another optional integer will give a new one
__label__summary and the optional provider will return a provider that gives a new value each time
__label__summary and same rules with javautil optional
__label__summary doublyinstalled modules should not conflict even when one is overridden
__label__summary providers#of does not redefine equalshash code so use the same one both times
__label__summary found by reflection
__label__summary found by reflection
__label__summary used to disambiguate constructors
__label__summary unscoped bindings should not conflict whether they were bound with no explicit scope orexplicitly bound in @link scopes#noscope
__label__summary ensure key hash codes are fixed at injection time not binding time
__label__summary this assures us that the two binders are equivalent so we expect the instance added to each to have been added to one set
__label__summary these must be identical because the marker annotations collapsed to the same thing
__label__summary tests for comgoogleinjectinternal weak key set not leaking memory
__label__summary clear the ref gc and ensure that we are no longer blacklisting
__label__summary default retry policy enabled false
__label__summary verify that the default retry policy doesnotretry retriable exception when default retry policy enabled is disabled
__label__summary default retry policy enabled true
__label__summary allows us decouple the enum identifier in the code from its textual representation in the gui
__label__summary use this singleton to get or register a broadcast variable
__label__summary verify that the default retry policy correctly retriesa retriable exception wrapped in a remote exception whendefault retry policy enabled is enabled
__label__summary verify that the default retry policy correctly retries retriable exception when default retry policy enabled is enabled
__label__summary default retry policy enabled true
__label__summary test the behavior of the default retry policy
__label__summary decoder for converting rpc parameters and other values from json in transferbetween the client and the server and vice versa
__label__summary immutable encode result representing null
__label__summary immutable empty json array
__label__summary use this singleton to get or register an accumulator
__label__summary almost all primitive types are handled internally
__label__summary all primitive types are handled internally
__label__summary uidl value is a special internal type wrapping type info and a value
__label__summary try to decode object using fields
__label__summary legacy object and string handled elsewhere this takes care of generic arrays
__label__summary counts words in text encoded with utf received from the network every second this example alsoshows how to use lazily instantiated singleton instances for accumulator and broadcast so thatthey can be registered on driver failures
__label__summary these methods looks good to inline but are on a cold path of theotherwise hot encode method which needed to be shorted to allow inliningof the hot part
__label__summary encodes a connector map invisible connectors are skipped
__label__summary client server encodes empty map as an empty array because of
__label__summary encode using the given type
__label__summary uidl value
__label__summary collections
__label__summary arrays
__label__summary special vaadin types
__label__summary legacy types
__label__summary clientside has no declared type information to determine encoding method for empty maps so these are handled separately
__label__summary create the context with a second batch size
__label__summary only decode the given type
__label__summary only uidl value when not enforcing a given type to avoid security issues
__label__summary each entry always has two elements type and value
__label__summary storing a single reference and only returning the encode result at the end the method is much shorter in bytecode which allows inlining
__label__summary all json compatible types are returned as is
__label__summary an encoded null is cached return it directly
__label__summary connectors are simply serialized as id
__label__summary encode object returns an encode result with a diff thus it needs to return it directly rather than assigning it to to return
__label__summary doesnt matter if the same calculation is done multiple times from different threads so theres no need to do eg put if absent
__label__summary loops through the fields of value and encodes them
__label__summary create a socket stream on target ipport and count the words in input stream of \n delimited text eg generated by nc
__label__summary we cant use property descriptorget property type as it does not support generics
__label__summary compares the value with the reference if they match returns false
__label__summary the content of the code shared librariescode tab of the codegdb debugger pagecode
__label__summary if you do not see this printed that means the streaming context has been loaded from the new checkpoint
__label__summary get or register the blacklist broadcast
__label__summary invoked when visualizer views context menu is invoked to populate it
__label__summary invoked when visualizer is selected to populate the toolbars menu
__label__summary invoked when visualizer is selected to populate the toolbar
__label__summary gets downcast reference to canvas control
__label__summary invoked after visualizer control creationto allow derived classes to do any initialization of canvas
__label__summary invoked when canvas control should be disposed
__label__summary creates and returns visualizer canvas control
__label__summary get or register the dropped words counter accumulator
__label__summary invoked when visualizer control should be disposed
__label__summary creates and returns visualizer control on specified parent
__label__summary dispose method
__label__summary constructor specifying name and such information
__label__summary constructor
__label__summary viewer canvas base class for canvas that displays a collectionof persistent repositionable graphic objects
__label__summary use blacklist to drop words and use dropped words counter to count them
__label__summary handles configuring the jul slfj bridge
__label__summary function to create java streaming context without any output operations used to detect the new context
__label__summary evaluates the given @link ijs expression as a constant expression and returns the result at the moment this only supportsvery simple expressions involving unary operators and literals alone support for more complex expressions will be added asneeded
__label__summary a spark sql udf that has arguments
__label__summary set the list of enum values for this combo field editor
__label__summary set the list of enum values for this combo field editor
__label__summary used to create the controls if required
__label__summary set whether or not the controls in the field editorare enabled
__label__summary returns this field editors text control
__label__summary returns this field editors text control
__label__summary there is just the label from the parent and the combo
__label__summary save the selected item in the store
__label__summary set the index of selection in the combo box
__label__summary get the selected option from preference store
__label__summary now add the combo selector
__label__summary add the label
__label__summary returns the field editors tool tip text or null if it hasnot been set
__label__summary sets the field editors tool tip text to the argument whichmay be null indicating that no tool tip text should be shown
__label__summary widgets and bookeeping variables
__label__summary class to detect builtin compiler settings for min gw toolchain
__label__summary id must match the toolchain definition in orgeclipsecdtmanagedbuildercorebuild definitions extension point
__label__summary this class tests cache archive option of streaming the test case creates archive files ships it with hadoopstreaming and compares the output with expected output
__label__summary the function interface is used for passing method pointers that can beinvoked asynchronously at a later point
__label__summary this method is used by the test code to initialize the pipeline in theactual service the initialization is called by the container manager impl start containers method
__label__summary return an instance of application attempt id using specified identifier andapplication id
__label__summary return an instance of application attempt id using specified identifier thisidentifier will be used for the application id too
__label__summary returns an application id with the specified identifier
__label__summary a specialization of launch to track sublaunches lifecycle also terminates itself when all sublaunches are terminated
__label__summary helper method to register an application master using specified test app idas the application identifier and return the response
__label__summary thread pool used for asynchronous operations
__label__summary the amrm proxy service instance that will be used by all the test cases
__label__summary base class for all the amrm proxy service test cases it provides utilitymethods that can be used by the concrete test case classes
__label__summary the identify function input keyvalue pair is written directly to output
__label__summary adjust counters and buffer limit
__label__summary write data to the target
__label__summary call when the transfer completes successfully so we can advise the os thatwe dont need the region to be cached anymore
__label__summary an @link audit logger that sends logged data directly to the metricssystems it is used when the top service is used directly by the name node
__label__summary unit test for supporting methodname based compatible rp cs
__label__summary test protocol is a compatible impl of test protocol hence use its name
__label__summary create a server with two handlers
__label__summary old client vs new server
__label__summary old client vs new server
__label__summary create a server with two handlers
__label__summary server is version 
__label__summary use version echo long
__label__summary this class implements a mapperreducer class that can be used to performfield selections in a manner similar to unix cut the input data is treatedas fields separated by a user specified separator the default value is\t the user can specify a list of fields that form the map output keysand a list of fields that form the map output values if the inputformat is text input format the mapper will ignore the key to the map function and thefields are from the value only otherwise the fields are the union of thosefrom the key and those from the value
__label__summary search linked resources
__label__summary generalize occurrences of the file name
__label__summary sanity check
__label__summary find a file name
__label__summary gcc cc compiler invocation
__label__summary gcc per file build output parser
__label__summary similar to cp element describes discovered paths and symbols availablethrough discovered path info instead of c path entry
__label__summary no map outputs available
__label__summary map outputs are being fetched
__label__summary known map outputs which need to be fetched
__label__summary host penalized due to shuffle failures
__label__summary mark the host as penalized
__label__summary called when the node is done with its penalty or done copying
__label__summary marks an event subscriber method as being threadsafe this annotation indicates that event busmay invoke the event subscriber simultaneously from multiple threads
__label__summary test methods for @link checked provider methods module
__label__summary whether this process has been terminated
__label__summary an implementation of the core algorithm of merge sort
__label__summary reusable int writables
__label__summary the comparator that the algo should use
__label__summary update the java command in the build spec replace existing one if presentadd one first if none
__label__summary add a java build spec before other builders fwjki
__label__summary commit the spec change into the project
__label__summary adds a builder to the build spec for the given project
__label__summary add it before other builders see fwjki itpjcorewin
__label__summary insertion sort on smallest arrays
__label__summary removes the given builder from the build spec for the given project
__label__summary task type
__label__summary task state
__label__summary task attempt state
__label__summary task attempt completion event status
__label__summary phase
__label__summary job state
__label__summary recursively sort halves of dest into src
__label__summary encapsulates the http server started by the name node
__label__summary set user pattern based on configuration file
__label__summary add authentication filter for webhdfs
__label__expand if list is already sorted just copy from src to dest this is an optimization that results in faster sorts for nearly ordered lists
__label__expand set container tokens to be used during container resource increase the token is acquired fromcode allocate responseget increased containerscode the token contains the container id and resource capability required forcontainer resource increase
__label__expand get a list of container tokens to be used for authorization duringcontainer resource increasep
__label__expand a metrics sink that writes metrics to a stats d daemon this sink will produce metrics of the formhostnameservicenamecontextnamemetricnamevaluetypewhere hostname is optional this is useful when sending toa daemon that is running on the localhost and will add thehostname to the metric such as thea hrefhttpscollectdorg collect da stats d pluginbr to configure this plugin you will need to add the followingentries to your hadoopmetricsproperties filebrpresinkstatsdclassorgapachehadoopmetricssink stats d sinkprefixsinkstatsdserverhostprefixsinkstatsdserverportprefixsinkstatsdskiphostnametruefalse optionalprefixsinkstatsdservicename name node name you want for servicepre
__label__expand the view model provider for the timers view this provider allows forswitching between two different view layoutsolli timers triggers alarmslili triggers timers alarmsliola special event is sent when the layout is changed in order to generatea proper delta to refresh the view
__label__expand safely computes completion proposals of all computers of this category through theirextension if an extension is disabled throws an exception or otherwise does not adhere tothe contract described in @link i completion proposal computer it is disabled
__label__expand returns the dirty state for this set of macros if the dirty state is codetruecode that means that the macrosis out of synch with the repository and the macros need to be serializedbrbr the dirty state is automatically set to codefalsecode when the macros are serializedby calling the serialize method
__label__expand returns the change state for this set of macros the change state represents whether the macros were changed or not this state is not reset when the serialize method is called users can use this state to monitor whether the macros were changed or not the change state can be reset only by calling the set changedfalse method
__label__expand set a really long value for dfsblockreportinterval msec and dfsheartbeatinterval so that incremental block reports and heartbeats wont be sent during this test unless theyre triggered manually
__label__expand this request object contains all the context information to determine whethera user has permission to access the target entityuser the user whos currently accessingaccess type the access type against the entityentity the target object user is accessingapp id the associated app id for current access this could be nullif no app is associatedapp name the associated app name for current access this could be null ifno app is associated
__label__expand finds the jar for a class if the class is in a directory in theclasspath it creates a jar on the fly with the contents of the directoryand returns the path to that jar if a jar is created it is created inthe system temporary directory
__label__expand the below logic allows us to keep the checked state of the toggle button properly set this is because in some case the checked state may change without the user actually pressing the button for instance if we restart the inferior the toggle may automatically turn off to figure this out whenever a debug context changes we make sure we are showing the proper checked state
__label__expand modified internal test class that is designed to read all the files in theinput directory and find the standard deviation between all of the wordlengths
__label__expand a factory for registry operation service instancespi each created instance will be returned initializedip that is the service will have had code serviceinitconfcode appliedto it â€”possibly after the configuration has been modified tosupport the specific bindingsecurity mechanism used
__label__expand a future which forwards all its method calls to another future subclasses should override one ormore methods to modify the behavior of the backing future as desired per the a hrefhttpenwikipediaorgwiki decoratorpatterndecorator patterna
__label__expand this iterator wraps another iterator and gives it a bug foundin jdkp this bug is this if you create an iterator from a tree setand call next on that iterator when has next is false sothat next throws a no such element exception then subsequentcalls to remove will incorrectly throw an illegal state exceptioninstead of removing the last element returned
__label__expand contents of whole class such as resource description configuration description or project description notes many strings in the file remain unlocalizedsince they represent method names it is experimental functionality work is in progress tree depth is limited by deeper branches are truncated but it seems to be very rare situation
__label__expand the options that may need exhaustive file search since index lookup is not guaranteed toreturn all files participating in refactoring when one of these options is selectedthe exhaustive file search is enabled
__label__expand class used by the properties based label provider to generate storelabel attributes related to a single column each column info isconfigured with an array of attributes there are currently fourtypes of attributes text image font and color which areevaluated in order to generate the labelp clients are not intended to extend this class
__label__expand this class is meant to be empty it enables us to definethe annotations which list all the different j unit class wewant to run when creating a new test class it should beadded to the list below
__label__expand an implementation of @link vaadin session for jsr portlet environments this is automatically registered as a @link http session binding listener when@link portlet session#set attribute is called with the context as value only the documented parts of this class should be considered as stable public api note also that some methods andor nested interfaces might move to@link vaadin portlet service in future minor or major versions of vaadin inthese cases a deprecated redirection for backwards compatibility will beused in vaadin portlet session for a transition period
__label__expand listener interface for the various types of jsr portlet requests thelistener methods are called by the request handler@link portlet listener notifier after the session is locked and thecorresponding ui has been found if already created but before otherrequest processing takes place direct rendering of output is not possible in a portlet listener and the jsr limitations on allowed operations in each phase or portletrequest processing must be respected by the listeners note that internal action requests used by the framework to triggerevents or set shared parameters do not call the action request listenerbut will result in a later event or render request that will trigger thecorresponding listener
__label__expand this service maintains the shared cache meta data it handles claiming andreleasing of resources all rpc calls from the client to the shared cachemanager and administrative commands it also persists the shared cache metadata to a backend store and cleans up stale entries on a regular basis
__label__expand test the sync returns false in the following scenarios the sourcetarget dir are not snapshottable dir the sourcetarget does not have the given snapshots changes have been made in target
__label__expand the corrupt block has to be removed when the number of valid replicasmatches replication factor for the file in this the above condition istested by reducing the replication factor the test strategy bring up cluster with data nodes create a file of replication factor corrupt one replica of a block of the file verify that there are still good replicas and corrupt replicacorrupt replica should not be removed since number of goodreplicas is less than replication factor set the replication factor to verify that the corrupt replica is removedcorrupt replica should not be removed since number of goodreplicas is equal to replication factor 
__label__expand the corrupt block has to be removed when the number of valid replicasmatches replication factor for the file in this test the abovecondition is achieved by increasing the number of good replicas byreplicating on a new datanode the test strategy bring up cluster with data nodes create a file of replication factor corrupt one replica of a block of the file verify that there are still good replicas and corrupt replicacorrupt replica should not be removed since number of good replicas is less than replication factor start a new data node verify that the a new replica is created and corrupt replica isremoved
__label__expand the corrupt block has to be removed when the number of valid replicasmatches replication factor for the file the above condition should holdtrue as long as there is one good replica this test verifies that the test strategy bring up cluster with data nodes create a file of replication factor corrupt one replica of a block of the file verify that there is one good replicas and corrupt replicacorrupt replica should not be removed since number of goodreplicas is less than replication factor set the replication factor to verify that the corrupt replica is removedcorrupt replica should be removed since number of goodreplicas is equal to replication factor 
__label__expand none of the blocks can be removed if all blocks are corrupt the test strategy bring up cluster with data nodes create a file of replication factor corrupt all three replicas verify that all replicas are corrupt and replicas are present set the replication factor to verify that all replicas are corrupt and replicas are present
__label__expand truncate the block on the first datanode that has not been corrupted so that directory scanner can discover the corruption from file size change the indexes change once the nodes are restarted but the datadirectory will not change
__label__expand remove sub launch keeping the processes of the terminated launch to show the association and to keep the console content accessible
__label__expand this is wireincompatible with hadoop alpha due to hdfs because it changes the length of the packet header and block receiver in that version did not support variablelength headers
__label__expand the hostdomain name and port are set as separate strings in the addresslist
__label__expand these are provide as a element tuple of hostname portand optionally path depending on the application
__label__expand previous layout pass may have changed the position already needs to be reset before calculating which positioning should be used
__label__expand dragging curtain interferes with click events if added in mousedown so we add it only when needed ie if the mouse moves outside the splitter
__label__expand reset the resized flag after a mouseup has occured so the next mousedownmouseup can be interpreted as a click
__label__expand each modify dialog tab page has its own instanceand it should add all relevant controls upon creation always in the same sequence this established a mapping of controls to indexes which allows to restore the focusin a later session the index is saved in the dialog settings and there is only one common preference forall tab pages it is always the currently active tab page which stores its focusindex
__label__expand the standard preference object are managed by this focus manager if they are createdusing the respective factory methods other swt widgets can be added in subclasseswhen they are created
__label__expand this class provides common implementation for cpp template non type parameter specializationcpp template type parameter specialization and cpp template template parameter specialization
__label__expand by default the range is inclusive ie both min value and max value arevalid values use @link #set min value includedboolean or@link #set max value includedboolean to change it
__label__expand the client uses a checksum to identify theresource and an @link application id to identify which application will beusing the resourcepp the code shared cache managercode responds with whether or not theresource exists in the cache if the resource exists a code pathcodeto the resource in the shared cache is returned if the resource does notexist the response is empty
__label__expand this method is called once an applicationis no longer using a claimed resource in the shared cache the client usesa checksum to identify the resource and an @link application id toidentify which application is releasing the resourcep
__label__expand a simple heuristic is used to detect valid line end comment characters if acharacter known to be a potential line end comment character is used as aline start comment char this character is considered a valid line endcomment character too if eg a @ is used to introduce a line startcomment it is also recognized as a line end comment introducer afterwardsp
__label__expand this function is called when setting a filter for this generatedproperty returning null from this function causes generated property container to discard the filter and not use it by default this function throws unsupported filter exception
__label__expand sort order is similar to or the same as the sort order already definedfor grid the default implementation of this method returns an empty array whichmeans that the property will not be included inget sortable container property ids attempting to sort by that columnthrows unsupported operation exception returning null is not allowed
__label__expand the checkbox selection will normally be propagated to the label and text controls in the checkbox selection listener however the callback is only invoked when the selection changes which means that an initial value of false will not be properly propagated the state is directly updated here
__label__expand p the returned sets @link object#to string method returns a shorthand form of the setscontents such as @code 
__label__expand add the drag selection position the position is used to delete the selection on a dropmove and it can be used by the drop target to determine if it should allow the drop eg if drop location overlaps selection
__label__expand with gdb we can create a breakpoint that is disabled this avoids having to disable it asa separate command it is also much better because in nonstop we dont risk habing a threadhitting the breakpoint between creation and disablement
__label__expand it seems that thread termination and stream closing is working without any help
__label__expand value codecode means its not known value codecode means its known
__label__expand value codecode means its not known value codecode means its known@since 
__label__expand value codecode means its not known value codecode means its known
__label__expand value codecode means its not known value codecode means its known
__label__expand check that the bytes are stored correctly in modifiedutf format note that the data input and data output interfaces convert between bytes and strings using the modifiedutf format
__label__expand test using the cat face character uf
__label__expand truncated cat face character this is a byte sequence but we only have the first three bytes
__label__expand consists of two data structures a hash table for fast lookupof bindings given their names and a stack used to keep trackof scopes
__label__expand no need for volatile pdomcpp unknown scope protects its fields
__label__expand must be first to match short string
__label__expand this constructor does the actual verification by ensuring that the datanode uuid is initialized
__label__expand the following steps are important check quotas in this inode and all ancestors before changing counts so that no change is made if there is any quota violation verify quota in this inode
__label__expand ignore exit exceptions as the tests may result in the name node doing an immediate shutdown
__label__expand since the required directory failed set ready to flush and that directory was listed prior to the nonrequired directory we should not call set ready to flush on the nonrequired directory regression test for hdfs
__label__expand number of external references to this replica replicas are referencedby the cache block reader local instances and by client mmap instances the number starts at because when we create a replica it is referencedby both the cache and the requester protected by the cache lock
__label__expand the monotonic time in nanoseconds at which the replica became evictable ornull if it is not evictable protected by the cache lock
__label__expand try to add a nochecksum anchor to our shared memory slot it is only possible to add this anchor when the block is mlocked on the datanode the data node will not munlock the block until the number of nochecksum anchorsfor the block reaches zero this method does not require any synchronization@return true if we successfully added a nochecksum anchor
__label__expand already initialized
__label__expand look for any breakpoint base bp class that has the same source file and line number as what is currently being inputed careful not to compare with the current dprintf in the case of modifying the properties of an existing dprintf in that case we of course have this particular dprintf at this file and line
__label__expand check if parent access null file exists then check sb if resolve link the check is performed on the link target
__label__expand in order for this function to be better than the previous best it must have at least one parameter match that is better that the corresponding match for the other function and none that are worse
__label__expand the ast can be released by a thread other than the one that acquired itp clients are not allowed to modify the ast and must hold an index readlock prior to calling this method and continue to hold the lock as longas the ast is being used
__label__expand add in the web services filtersserves if app has them using jerseyguice integration module if user has web services they must have also bound a default one in their webapp code
__label__expand there seems to be an issue with the guicejersey integration where we have to list the stuff we dont want it to serve through the guicecontainer in this case its everything except the the web services api prefix we cant just change the filter from below that doesnt work
__label__expand the benchmark does not involve any other hadoop componentsexcept for the namenode each operation is executedby calling directly the respective namenode method the namenode here is real all other components are simulated this benchmark supportsa href@doc roothadoopprojectdisthadoopcommon commands manualhtml# generic optionsstandard commandline optionsa if you use remote namenode by ttfsttoption its config ttdfsnamenodefslimitsminblocksizett should beset as command line arguments for the benchmark includeollitotal number of operations to be performedlilinumber of threads to run these operationslilifollowed by operation specific input parameterslililog level l specifies the logging level when the benchmark runs the default logging level is @link level#errorliliug cache refresh count g will cause the benchmark to call@link name node rpc server#refresh user to groups mappings afterevery g operations which purges the namenodes user group cache by default the refresh is never calledlilikeep results do not clean up the namespace after executionliliuse existing do not recreate the namespace use existing dataliol the benchmark first generates inputs for each thread so that theinput generation overhead does not effect the resulting statistics the number of operations performed by threads is practically the same precisely the difference between the number of operationsperformed by any two threads does not exceed then the benchmark executes the specified number of operations usingthe specified number of threads and outputs the resulting stats
__label__expand the benchmark does not involve any other hadoop componentsexcept for the namenode each operation is executedby calling directly the respective namenode method the namenode here is real all other components are simulated this benchmark supportsa href@doc roothadoopprojectdisthadoopcommon commands manualhtml# generic optionsstandard commandline optionsa if you use remote namenode by ttfsttoption its config ttdfsnamenodefslimitsminblocksizett should beset as command line arguments for the benchmark includeollitotal number of operations to be performedlilinumber of threads to run these operationslilifollowed by operation specific input parameterslililog level l specifies the logging level when the benchmark runs the default logging level is @link level#errorliliug cache refresh count g will cause the benchmark to call@link name node rpc server#refresh user to groups mappings afterevery g operations which purges the namenodes user group cache by default the refresh is never calledlilikeep results do not clean up the namespace after executionliliuse existing do not recreate the namespace use existing dataliol the benchmark first generates inputs for each thread so that theinput generation overhead does not effect the resulting statistics the number of operations performed by threads is practically the same precisely the difference between the number of operationsperformed by any two threads does not exceed then the benchmark executes the specified number of operations usingthe specified number of threads and outputs the resulting stats
__label__expand for inmemory filtering a simple check is performed for othercontainers the comparison implementation is container dependent butshould correspond to the inmemory null check
__label__expand protect against http response splitting vulnerability since value is written as part of the response header ensure this header only has one header by removing c rs and l fs
__label__expand leading and trailing white spaces are ignored when converting from a stringpp override and overwrite @link #get format locale to use a different format
__label__expand ulliif n in encode in one byte with the actual value otherwiseliif n in encode in two bytes byte n bytenxff otherwiseliif n in encode in three bytes byten bytenxff bytenxff otherwiseliif n in encode in four bytes byten byte nxff byte nxff bytenxff otherwiseliif n in encode in five bytes byte byte nxff bytenxff bytenxff bytenxffliif n in encode in six bytes byte byte nxff bytenxff bytenxffbytenxff bytenxffliif n in encode in seven bytes byte byte nxff bytenxff bytenxffbytenxff bytenxff bytenxffliif n in encode in eight bytes byte byte nxff byte nxff bytenxffbytenxff bytenxff bytenxffbytenxffliif n in encode in nine bytes byte byte nxff byte nxff byte nxffbytenxff bytenxff bytenxffbytenxff bytenxfful
__label__expand ulliif fb return longfbliif fb in return fb nbxffliif fb in return fb nbxff nbxffliif fb in return fb nbxff nbxff nbxffliif fb in return interpret nbfb as a signedbigendian integer
__label__expand a version number consists of a major version and a minor version thesuggested usage of major and minor version number is to increment majorversion number when the new storage format is not backward compatible andincrement the minor version otherwise
__label__expand ulli importing projects into the workspacelili adding expected resources to the delta verifierlili verifying the deltalili printing markerslili cleaning up the workspace at the endliul
__label__expand the checkpointer is a daemon that periodically wakes upup determined by the schedule specified in the configurationtriggers a periodic checkpoint and then goes back to sleep the start of a checkpoint is triggered by one of the two factors time or the size of the edits file
__label__expand this example shows this storage structure for three names in two linkages name a name a name b record linkage a linkage b name a and name a should both be created in linkage a name b should be created in linkage b the interface to this class flattens this storage structure so it appears as a simplelist that can be iterated over continuing with the same example the iterator behaves as though the list were name a name a name b this class mostly doesnt care about the inner lists they are implemented using the#get next in binding attribute of pdom name this class implements the outer list as a singly linked list of nodes each node storesthe linkage id the record of the first pdom name in the list and the record of the next node
__label__expand usage java sql network word count hostname porthostname and port describe the tcp server that spark streaming would connect to receive data to run this on your local machine you need to first run a netcat server nc lk and then run the example binrunexample orgapachesparkexamplesstreaming java sql network word count localhost 
__label__expand the input data is treated as fields separated by a user specifiedseparator the default value is \t the user can specify a list offields that form the reduce output keys and a list of fields that formthe reduce output values the fields are the union of those from the keyand those from the value the field separator is under attribute mapreducefieldseldatafieldseparator the reduce output field list spec is under attributemapreducefieldselreduceoutputkeyvaluefieldsspec the value is expected to be likekey fields specvalue fields spec keyvalue fields spec are comma separated field spec field specfield specfield spec each field speccan be a simple number eg specifying a specific field or a rangelike to specify a range of fields or an open range like specifying all the fields starting from field the open range fieldspec applies value fields only they have no effect on the key fields here is an example it specifies to use fields and for keys and use fields and above for values
__label__expand more specifically this method depends on these invariants in an acl the list must be sorted each entry in the list must be unique by scope type name there is exactly one each of the unnamed usergroupother entries the mask entry must not have a name the other entry must not have a name default entries may be present but they are ignored during enforcement
__label__expand pa @link string map key and @link class map key are provided for convenience with maps whosekeys are strings or classes for maps with enums or primitive types as keys you must provideyour own map key annotation such as this one for an enumpre@literal @ map keyunwrap value true@literal @ retentionruntimepublic @literal @interface my custom enum key my custom enum valuepre you can also use the whole annotation as the key if @code unwrap valuefalse when unwrap value is false the annotation type will be the key type for the injected map andthe annotation instances will be the key values if @code unwrap valuetrue the value typewill be the key type for injected map and the value instances will be the keys values
__label__expand p the supported configuration properties arepulliauthenticationproviderurl the full url to the authentication server this is the url that the handler will redirect the browser to in order toauthenticate the user it does not have a default valuelilipublickeypem this is the pem formatted public key of the issuer of the jwt token it is required for verifying that the issuer is a trusted partydo not include the pem header and footer portions of the pem encodedcertificate it does not have a default valueliliexpectedjwtaudiences this is a list of strings that identifyacceptable audiences for the jwt token the audience is a way for the issuerto indicate what entitys that the token is intended for default value isnull which indicates that all audiences will be acceptedlilijwtcookiename the name of the cookie that contains the jwt token default value is hadoopjwtliul
__label__expand get block locations should not need the write lock since we just created the file and thus its access time is already within the second accesstime precision configured above
__label__expand p@link total heap usage emulator plugin emulates the heap usage in steps the frequency of emulation can be configured via@link #heapemulationprogressinterval heap usage values are matched via emulation only at specific intervalboundariesp@link total heap usage emulator plugin is a wrapper program for managingthe heap usage emulation feature it internally uses an emulation algorithmcalled as core and described using @link heap usage emulator core forperforming the actual emulation multiple calls to this core engine shoulduse up some amount of heap
__label__expand the cleaner task ran into an error while processing the resource
__label__expand resource was successfully deleted
__label__expand resource was successfully processed but not deleted
__label__expand the qt implementation ensures uniqueness by creating only a single instance of the iast name for each thing that should create a single instance in the pdom this will work as long as all qt elements are updated at once which is currently the case i dont think this needs to be threadsafe because things are only added from the single indexer task doug the cache is causing out of memory conditions commenting out for now
__label__expand p the tool scans all files and directories starting from an indicatedroot path the following abnormal conditions are detected and handledpullifiles with blocks that are completely missing from all datanodesbr in this case the tool can perform one of the following actionsullinone @link #fixingnonelilimove corrupted files to lostfound directory on dfs@link #fixingmove remaining data blocks are saved as ablock chains representing longest consecutive series of valid blockslilidelete corrupted files @link #fixingdeleteliullilidetect files with underreplicated or overreplicated blocksliul additionally the tool collects a detailed overall dfs statistics andoptionally can print detailed statistics on block locations and replicationfactors of each file
__label__expand extract the substring that likely contributes to this qproperty declaration the declaration could be in any state of being entered so use the heuristic scanner to guess about the possible structure the fixed assumptions are that the content assistant was invoked within the expansion parameter of qproperty we try to guess at the end of the string which is either the closing paren within characters from the opening paren or the current cursor location the offset is always right after the opening paren use it to get to a fixed point in the declaration
__label__expand there are two significant regions in a qproperty declaration the first is everything between the opening paren and the first parameter this region specifies the type and the name the other is the region that declares all the parameters there is an arbitrary amount of whitespace between these regions this function finds and returns the offset of the end of the region containing the type and name returns if the typename region cannot be found
__label__expand there are two types of proposals if the previous identifier matches a known attribute name then we propose possible values for that attribute otherwise we want to propose the identifiers that dont already appear in the expansion this is implemented by iterating over the list of known attributes if any of the attributes matches the previous identifier then we build and return a list of valid proposals for that attribute otherwise for each attribute we build a regular expression that checks to see if that token appears within the expansion if it already appears then the attribute is ignored otherwise it is added as an unspecified attribute if the loop completes then we create a list of proposals for from that unspecified list
__label__expand we need to cover the following cases no snapshot truncate to no snapshot truncate at block boundary no snapshot not on block boundary with snapshot all the current blocks are included in latestsnapshots repeat with snapshot blocks in the latest snapshot and blocks in the currentfile diverged repeat 
__label__expand use group entry unnamed or named with mask from permission bits applied if user is a member and entry grants access if user is a member of multiple groups that have entries that grant access then it doesnt matter which is chosen so exit early after first match
__label__expand prelong timestampi binding binding nullindexacquire read locktry timestamp indexget last write accessbinding indexfind binding finally indexrelease read lockindexacqure read locktry if indexget last write access timestamp dont use binding its not valid anymorebinding indexfind binding string name bindingget name finally indexrelease read lock
__label__expand move keyboard focus to menu deferring the focus setting sothe focus is certainly moved to the menu in all browser afterthe positioning has been done
__label__expand make focusable as we dont need access key magic we dont need to use focus implcreate focusable
__label__expand make the default constructor private since this only holds static methods
__label__expand p the urls in uidl message may use vaadin specific protocol beforeactually using the urls on the client side they should be passed via@link comvaadinclient application connection#translate vaadin uri stringp note that in current terminal implementation stream variables are cleanedfrom the terminal only whenullia stream variable with same name replaces an old onelithe variable owner is no more attachedlithe developer signals this by calling@link streaming start event#dispose stream variableul most commonly a component developer can just ignore this issue but withstrict memory requirements and lots of stream variables implementationsthat reserve a lot of memory this may be a critical issue
__label__expand p if the @link component is found in cache and this function returns trueit may omit the content and close the tag in which case cached contentshould be usedpp this method may also add only a reference to the paintable and queue thepaintable to be painted separatelypp each paintable being painted should be closed by a matching@link #end paintable component regardless of the @link paint statusreturnedp
__label__expand a previously unpainted or painted @link component has been queuedbe createdupdate later in a separate change in the same set ofchanges
__label__expand painting started add variable and add attribute etc methods maybe called
__label__expand add create link always enabled edit enabled if element selected entry or filter delete enabled if selected element is entry
__label__expand test that virtual bounds graphic object scale correctly to do that create a hierarchy of graphical object using virtual coordinatesand sizes bounds then set the real pixelbounds for the outermost object verify that child objects endup with expected pixel bounds also test retrieval of child objects
__label__expand the list of alarms has changed which means that the parent node needs to refresh its contents which in turn will refetch the elements from this node
__label__expand since the label for triggers doesnt change this node will generate delta info only if the list of alarms is changed
__label__expand local fs is set in and used by write to index file
__label__expand the format of the index file is logdir the dir where the task logs are really stored stdoutstartoffset in the stdout file length stderrstartoffset in the stderr file length syslogstartoffset in the syslog file length
__label__expand the file doesnt have anything
__label__expand special cases are the debugout and profileout files they are guaranteed to be associated with each task attempt since jvm reuse is disabled when profilingdebugging is enabled
__label__expand the format of the index file is logdir the dir where the task logs are really stored stdout startoffset in the stdout file length stderr startoffset in the stderr file length syslog startoffset in the syslog file length
__label__expand constant representing a c root workspace i workspace root objecta c element with this type can be safely cast to codeic modelcode
__label__expand constant representing a c project i project objecta c element with this type can be safely cast to codeic projectcode
__label__expand constant representing a folder ic container objecta c element with this type can be safely cast to codeic containercode
__label__expand virtual container serving as a place holder
__label__expand constant representing a cc children of a translation unit
__label__expand declaration of a class without the definitionclass c
__label__expand declaration of a structure without the definitionstruct c
__label__expand constant representing a struct structure
__label__expand declaration of a union without the definitionstruct c
__label__expand constant representing a union structure
__label__expand a method definition part of a structureclass struct union
__label__expand a method declaration part of a structureclass struct union
__label__expand a field definition part of a structureclass struct union
__label__expand a cc function prototype
__label__expand a cc function definition
__label__expand preprocessor #include directive
__label__expand c template class declaration without a definition
__label__expand c template class with definition
__label__expand c template struct
__label__expand c template struct
__label__expand c template union
__label__expand c template union
__label__expand c template function declaration
__label__expand c template function
__label__expand c template method
__label__expand c template method
__label__expand c template variable
__label__expand an unknown ic element mainly used to determine what elements are not yet implementedie the new dom parser supports open declaration on labels while the old parser did not
__label__expand returns the path to the innermost resource enclosing this element if this element is not included in an external archivethe path returned is the full absolute path to the underlying resourcerelative to the workbench if this element is included in an external archivethe path returned is the absolute path to the archive in the file system this is a handleonly method
__label__expand returns whether the structure of this element is known for example for atranslation unit that could not be parsed @code false is returned if the structure of an element is unknown navigations will return reasonabledefaults for example @code get children will return an empty collectionp note this does not imply anything about consistency with theunderlying resourcebuffer contents
__label__expand returns a string representation of this element handle the format of thestring is not specified however the identifier is stable acrossworkspace sessions and can be used to recreate this handle via thecode core modelcreate stringcode methodp some element types like binaries do not support handle identifiers andreturn @code null
__label__expand this is required because an incremental build will trigger make to do nothing for a missing source since the state after the file removal is uptodate as far as make is concerned a full build will clean and ultimately trigger a relink without the object generated from the deleted source which is what we want
__label__expand there is no point in checking anything else since we have decided to do a full build anyway
__label__expand this is required because an incremental build will trigger make to do nothing for a missing source since the state after the file removal is uptodate as far as make is concerned a full build will clean and ultimately trigger a relink without the object generated from the deleted source which is what we want
__label__expand there is no point in checking anything else since we have decided to do a full build anyway
__label__expand p this saves memory over creating a new output stream and byte array output stream each time data is writtenp typical usage is something like the followingpre output buffer buffer new output bufferwhile loop condition bufferreset write buffer using output stream methods byte data bufferget dataint data length bufferget length write data to its ultimate destination pre
__label__expand this interface can be implemented by clients to contribute custom buildoptioneditors to the cdt build settings page in the project properties dialog in addition to implementing this interface the custom buildoption editor classmust also extend the @link orgeclipsejfacepreference field editor class thecustom buildoption editor class should be contributed through the field editorelement of the orgeclipsecdtmanagedbuilderuibuild definitions ui extensionpointand then referenced by its id from the optionfield editor id attribute of theorgeclipsecdtmanagedbuildercorebuild definitions extensionpoint@since 
__label__expand we allow rollback to a state which is either consistent with the namespace state or can be further upgraded to it in another word we can only roll back when stored lv software lv dnprevious c time nnctime
__label__expand rename sdcurrentbpidprevioustmp to sdcurrentbpidprevious
__label__expand rename sdcurrentbpidcurrent to sdcurrentbpidprevioustmp
__label__expand do transitions each storage directory is treated individually during startup some of them can upgrade or roll back while others could be uptodate for the regular startup
__label__expand gets resource as streamp note that this method is called while the session is locked to preventrace conditions but the methods in the returned @link download streamare assumed to be unrelated to the vaadin session and are called withoutholding session locks to prevent locking the session during long filedownloadsp@return a download stream which produces the resource content
__label__expand subtract one from the width and height in the case of draw oval because that method adds a pixel to each value for some reason
__label__expand mapredoutdirtemporarytaskidname
__label__expand mapredoutdir
__label__expand b id side effect files tasks side effect filesbpi notei the following is valid only if the @link output committeris @link file output committer if code output committercode is nota code file output committercode the tasks temporary outputdirectory is same as @link #get output path job conf iettmapreduceoutputfileoutputformatoutputdirttpp some applications need to createwriteto sidefiles which differ fromthe actual joboutputsp in such cases there could be issues with instances of the same tiprunning simultaneously eg speculative tasks trying to openwriteto thesame file path on hdfs hence the applicationwriter will have to pickunique names per taskattempt eg using the attemptid sayttattemptmtt not just per tippp to get around this the map reduce framework helps the applicationwriterout by maintaining a specialttmapreduceoutputfileoutputformatoutputdirtemporarytaskidttsubdirectory for each taskattempt on hdfs where the output of thetaskattempt goes on successful completion of the taskattempt the filesin the ttmapreduceoutputfileoutputformatoutputdirtemporarytaskidtt onlyare ipromotedi to ttmapreduceoutputfileoutputformatoutputdirtt of course theframework discards the subdirectory of unsuccessful taskattempts thisis completely transparent to the applicationpp the applicationwriter can take advantage of this by creating anysidefiles required in ttmapreducetaskoutputdirtt during executionof his reducetask ie via @link #get work output path job conf and theframework will move them out similarly thus she doesnt have to pickunique paths per taskattemptppi notei the value of ttmapreducetaskoutputdirtt duringexecution of a particular taskattempt is actuallyttmapreduceoutputfileoutputformatoutputdirtemporarytaskidtt and this value isset by the mapreduce framework so just create any sidefiles in thepath returned by @link #get work output path job conf from mapreducetask to take advantage of this featurepp the entire discussion holds true for maps of jobs withreducernone ie reduces since output of the map in that casegoes directly to hdfsp
__label__expand original set of values so we can see what has really changed on the save and perform appropriate change operations we only really want to operate on changed values to avoid generating churn
__label__expand an acl entry to be applied to a directorys children that do not otherwisehave their own acl defined unlike an access acl entry a default ac lentry is not inspected as part of permission enforcement on the directorythat owns it
__label__expand an acl entry that is inspected during permission checks to enforcepermissions
__label__expand integer constants written in binary are a nonstandard extension supported by gcc since and by some other c compilers they consist of a prefix b or b followed by a sequence of and digits see httpgccgnuorgonlinedocsgcc binaryconstantshtml
__label__expand executor used to synchronize data access in this cache manager it has to be the same executor that is used by the data generators inorder to guarantee data consistency
__label__expand make sure that if clients are currently waiting for a count they are notified of the update their request monitors will be completed with an error they shoudl then rerequest data from provider again
__label__expand this specific implementation might provide resource management as wellas resource metrics functionality we need to ensure that the sameinstance is used for both
__label__expand returns a possibly null reference to a c groups handler this handler isnonnull only if one or more of the known cgroupsbased resourcehandlers are in use and have been initialized
__label__expand represents expansions of the qenums macro within a class declarationpreclass b public q objectqobjec tenum e enumerator qenums e class q public q objectqobjectqenums be e qenums e enum e ea eb enum e e prenote httpqtprojectorgdocqtqobjecthtml#qenumsblockquote if you want to register an enum that is declared in another class the enum must be fully qualifiedwith the name of the class defining it in addition the class defining the enum has to inherit q object as well as declare the enum using qenumsblockquote so the lookup for the c enum only needs to look in the same class spec when the name is notqualified when it is qualified then it needs to find the q object and then look at its qenums
__label__expand returns the name of the enumerator as referenced in parameter in the qenum smacro expansion in the sample code in the class declaration this would returnbe e or e
__label__expand returns an unsorted collection of the enumerators contained in the enum referencesin the qenums macro expansionpnote it would be nice if the textual order of the enumerators was preserved by theunderlying cdt index but it is not the @link enumerator#get ordinal method canbe used to recover some ordering information
__label__expand returns true if this enumeration was introduced to the qt metaobject system witha qflags expansion and false if it was introduced with qenums
__label__expand a small wrapper class for the enumerators that are declared within the enum that isreferenced by the parameter of the qenums macro expansion
__label__expand always ensure the selected tab is visible if server prevents a tab change we might end up here with visible widget new visible but its parent is still hidden
__label__expand last recs might have been set to an object already by another thread track the fact that last recs has been reset once to make sure refresh is correctly triggered
__label__expand operation which selects a random file and attempts to delete that file if itexists this operation will capture statistics on success the time taken to deleteand the number of successful deletions that occurred and on failure or errorit will capture the number of failures and the amount of time taken to fail
__label__expand entry kind constant describing a path entry identifying alibrary a library is an archive containingconsisting of precompiled binaries
__label__expand entry kind constant describing a path entry identifying arequired project
__label__expand entry kind constant describing a path entry identifying afolder containing source code to be compiled
__label__expand entry kind constant describing a path entry identifying ainclude path
__label__expand entry kind constant describing a path entry representinga container id
__label__expand entry kind constant describing a path entry representinga macro definition
__label__expand entry kind constant describing output location
__label__expand entry kind constant describing a path entry representinga file that will be process file as if #include file appeared asthe first line of the source file
__label__expand entry kind constant describing a path entry representinga file that will be process file as if #include file appeared asthe first line of the source file but only the macro definitions are kept
__label__expand returns the kind of this path entry@return one ofullicodecdtsourcecode this entry describes a source root in its projectlicodecdtlibrarycode this entry describes a librarylicodecdtprojectcode this entry describes another projectlicodecdtincludecode this entry describes a include pathlicodecdtmacrocode this entry describes a macro definitionlicodecdtcontainercode this entry describes a container idlicodecdtoutputcode this entry describes output locationlicodecdtincludefilecode this entry describes a file to be process as an includelicodecdtmacrofilecode this entry describes a file containing macro definitions
__label__expand a test class for testing grid layout expand ratio the class is empty becausethe name convention is ui class name test grid layout expand ratio test and grid layout hide middle cells test behave the same way but on different u iclasses thats why they have different names and zero code
__label__expand cache the collection of bean properties for a given type to avoid doing aquite expensive lookup multiple times will be used from any thread thathappens to process vaadin requests so it must be protected fromcorruption caused by concurrent access
__label__expand decodes a value that is of an internal typep ensures the encoded value is of the same type as target typepp allows restricting collections so that they must be declared usinggenerics if this is used then all objects in the collection are encodedusing the declared type otherwise only internal types are allowed incollectionsp
__label__expand this method transfers data using local buffer it transfers data froma disk to a local buffer in memory and then it transfers data from thebuffer to the target this is used only if transfer to is disallowed inthe configuration file super transfer to does not perform well on windowsdue to a small io request generated custom shuffle transfer can controlthe size of the io requests by changing the size of the intermediatebuffer
__label__expand we can read more than we need if the actual count is not multiple of the byte buffer size and file is big enough in that case we cannot use flip method but we need to set buffer limit manually to trans
__label__expand the map output field list spec is under attributemapreducefieldselmapoutputkeyvaluefieldsspec the value is expected to be like key fields specvalue fields speckeyvalue fields spec are comma separated field spec field specfield specfield spec each field spec can be a simple number eg specifying a specific field or a rangelike to specify a range of fields or an open range like specifying allthe fields starting from field the open range field spec applies value fields only they have no effect on the key fields
__label__expand the reduce output field list spec is under attributemapreducefieldselreduceoutputkeyvaluefieldsspec the reducer extracts output keyvalue pairs in a similar manner except thatthe key is never ignored
__label__expand pcode task idcode represents the unique identifier for a map or reduce taskpp task id consists of parts first part is code job idcode that this taskbelongs to second part of the task id is either m or r representingwhether the task is a map task or a reduce task and the third part is thetask numberp
__label__rational if dfsnamenodehttpsbindhostkey exists then it overrides the
__label__rational safely computes context information objects of all computers of this category through theirextension if an extension is disabled throws an exception or otherwise does not adhere tothe contract described in @link i completion proposal computer it is disabled
__label__rational this method just stops the output of the process from showing up in the local logs the childs output will still be read and thus the redirect thread will still bealive to avoid the child process hanging because of lack of output buffer
__label__rational ulliif selection is of type codei text selectioncode thencoderuni text selectioncode and codeselection changedi text selectioncodeis calledliliif selection is of type codei structured selectioncode thencoderuni structured selectioncode and codeselection changedi structured selectioncode is calledlilidefault is to call coderuni selectioncode and codeselection changedi selectioncodeliulp note this class is not intended to be subclassed outside the cdt ui pluginp
__label__rational let see if we can move the cursor at the position also
__label__rational if the command send is one of ours check if it is one that is missing a secondary prompt
__label__rational even if the previous check didnt kick in we may already be in the missing
__label__rational deal with missing secondary prompt if needed
__label__rational if so well need to pretend we are receiving the secondary prompt
__label__rational we should get incremental block report
__label__rational we should not receive any more incremental or incremental block reports since the interval we configured is so long
__label__rational by jar spec if there is a manifest it must be the first entry in the zip
__label__rational returns the full path to the jar containing the class it always return a jar
__label__rational internal class designed to delete the output directory meant solely foruse before and after the test is run this is so next iterations of thetest do not encounter a file already exists error
__label__rational if cookie persistence is configured to false
__label__rational if the token is an old one renew the its max inactive interval
__label__rational if response code is then www authenticate header should be
__label__rational if the request has a valid authentication token it allows the request to continue to the target resource
__label__rational if this method returns codenullcode the filter will invoke the configured @link authentication handler
__label__rational if it was a step instruction set state running
__label__rational return true if the operation is a stepping operation
__label__rational return true if the operation is a attaching operation
__label__rational if a process restarts we must reset the thread id
__label__rational this class is used on the server side calls come across the wire for thefor protocol @link client namenode protocol pb this class translates the pb data typesto the native data types used inside the nn as specified in the generic client protocol
__label__rational otherwise if on finish is false the project is temporary and can be removedif cancel is pressed
__label__rational note this method is for internal use only clients should not call this method
__label__rational when serialized this header is written out as a protocol buffer precededby a byte integer representing the full packet length and a byte shortrepresenting the header length
__label__rational only set sync block if it is specified
__label__rational we should only have a nonpositive data length for the last packet
__label__rational the last packet should not contain data
__label__rational seqnos should always increase by with each packet received
__label__rational platforms spelling service uses a spelling engine that is independentof the content type see httpsbugseclipseorgbugsshowbugcgiid we are providing our own spelling service to be able to use the cc specificspelling engine even when it is not selected in preferences general editors text editors spelling
__label__rational why integers and not enums cross platform serialization as json
__label__rational the third element in each entry the path must be the same in each entrya client reading the addresses of an endpoint is free to pick anyof the set so they must be the same
__label__rational for internal use only may be removed or replaced in the future
__label__rational for internal use only may be removed or replaced in the future
__label__rational for internal use only may be removed or replaced in the future
__label__rational for internal use only may be removed or replaced in the future
__label__rational the current position of the split handle in either percentages or pixelsp for internal use only may be removed or replaced in the future
__label__rational for internal use only may be removed or replaced in the future
__label__rational for internal use only may be removed or replaced in the future
__label__rational size below will be overridden in update from uidl initial size needed to keep ie alive
__label__rational for internal use only may be removed or replaced in the future
__label__rational for internal use only may be removed or replaced in the future
__label__rational have to temporarily turn off the remove terminated launches when new one created preference because it does not work well for multilaunch
__label__rational since the template engine consists of ui wizarda test wizard is created to which the dynamically generated ui pages are added the wizard is launched from here the test cases created to test the template engine is initialized here
__label__rational now that we added the launch in our list we have already received the real launch changed event and did not know it was part of our list so fake another event now
__label__rational now we need to override the history to make multilaunch appear last if we dont do it last launch would be our childs launch which is not correct for repeating the experience
__label__rational you can inject the app in views if needed
__label__rational param is milliseconds
__label__rational this is borrowed and slightly modified from guavas @link unsigned bytesclass to be able to compare arrays that start at nonzero offsets
__label__rational uses reflection to gracefully fall back to the java implementation if@code unsafe isnt available
__label__rational yes unsafe comparer does implement comparerbyte
__label__rational ensure we really catcheverything
__label__rational used via reflection
__label__rational the offset to the first element in a byte array
__label__rational it doesnt matter what we throw its swallowed in get best comparer
__label__rational sanity check this should never fail
__label__rational get our added instance or another instance that was added by another thread between previous get and put if absent
__label__rational not build for this one
__label__rational make sure the value is within the range
__label__rational p because a bimap has unique values this method returns a @link setinstead of the @link javautil collection specified in the @link mapinterface
__label__rational give the updater thread some time to update the resource
__label__rational give the updater thread some time to update the resource
__label__rational class parameters must be raw so we cant create a proxy with generictype arguments the created proxy only records calls and returns null sothe type is irrelevant at runtime
__label__rational hml columnsha column with ml attributes attached is called an ml column the data in ml columns are stored as double values ie an ml column is either a scalar columnof double values or a vector column columns of other types must be encoded into ml columns using transformers we use @link orgapachesparkmlattribute attribute to describe a scalar ml column and@link orgapachesparkmlattribute attribute group to describe a vector ml columnml attributes are stored in the metadata field of the column schema
__label__rational see bugzilla for the discussion of dependency management that led tothe creation of this dependency calculator note also that this techniqueexhibits the failure modes discussed in comment #
__label__rational this dependency calculator uses the class default gcc dependency calculator commandswhich implements the persource command information
__label__rational when a container acquired by am after it increaseddecreased
__label__rational 
__label__rational true if the positive range set is empty or bounded below
__label__rational true if the positive range set is empty or bounded above
__label__rational we catch cces
__label__rational if its contained its definitely a c
__label__rational there are overloads of q objectconnect qt they can be distinguished by examining the type of the forth parameter connect const char connect q meta method connect qt connection type 
__label__rational we are expecting this
__label__rational this has no effect
__label__rational q meta method cannot be statically analyzed
__label__rational there are overloads of q objectdisconnect qt they can be distinguished by examining the type of the second parameter the number of parameters is used to disambiguate one conflict disconnect const char params disconnect q meta method disconnect const q object disconnect const char params
__label__rational bad path should also fail
__label__rational the simplest way to convert from the cli trace info to a mi break insert info is to list the breakpoints and take the proper output
__label__rational by default the tracepoint is enabled at creation if it wasnt supposed to be then disable it right away also tracepoints are created with no passcount we have to set the passcount manually now same for commands
__label__rational at this point we know their are ok so there is no need to revalidate
__label__rational ignore count is not supported by tracepoints
__label__rational this can be different from the designated replication factor of the filebecause the namenode does not maintain replication for the blocks which arecurrently being written to depending on the configuration the client maycontinue to write to a block even if a few datanodes in the write pipelinehave failed or the client may add a new datanodes once a datanode hasfailed
__label__rational this is a very inefficient implementation for getting all the identifiers for a class
__label__rational it makes all properties defined in the codesuper class namecodeavailable for codebase class namecode as well
__label__rational first line of input has key tab value second line of input starts with a tab character so it has empty key and the whole line as value third line of input does not have any tab character so the whole line is the key and value is empty
__label__rational during tests the default configuration will use a local mapred so dont specify config or cluster
__label__rational in nonstop mode threads that are running have no state change reason
__label__rational this is a regression test for hadoop
__label__rational if an identifier is added that already exists in an outer scopethen it will be shadowed
__label__rational a\n
__label__rational bb\n
__label__rational \n
__label__rational ccc\r
__label__rational dddd\r
__label__rational \r
__label__rational \r\n
__label__rational \r\n
__label__rational eeeeeeof
__label__rational contributions by racks are rack rack rack so rack hosts host and host should be returned even if their individual contribution is not the highest
__label__rational host makes the highest contribution among all hosts so that should be returned before others
__label__rational its okay to mark even if mark isnt supported as reset wont work
__label__rational the maps are incrementally updated as described below initialize the maps as empty incrementally update the maps when shell based id mapping is requested for user or group name givenan id or for id given a user or group name do look up in the mapfirst if it doesnt exist find the corresponding entry with shellcommand and insert the entry to the maps when group id is requested for a given group name and if thegroup name is numerical the full group map is loaded because wedont have a good way to find the entry for a numerical group nameloading the full map helps to get in all entries periodically refresh the maps for both user and group egdo step 
__label__rational if cant update the maps will keep using the old ones
__label__rational because user or group id are treated as integer signed integer or inthere the number is out of range the solution is to convertuint to int so to map the outofrange id to the negative side of integer eg maps to and maps to 
__label__rational if the static mapping file was modified after last update load the map again did not exist but was added since last update load the map existed before but deleted since last update clear the map
__label__rational if were in the column value modify the register data otherwise call the superclass to edit the watch expression
__label__rational if were in the column value modify the register data otherwise call the superclass to edit the watch expression
__label__rational if were in the column value modify the register data otherwise call the superclass to edit the watch expression
__label__rational this class is just to replace a category reference in orgeclipsecdtui that we exclude because we do not bring in the orgeclipsecdtmanagedbuildui plugin
__label__rational subsnapshotsfile should no longer exist
__label__rational instead subsnapshotsfile should exist
__label__rational that what may be configured
__label__rational check only when the content has not changed in the middle
__label__rational iff we dont run as a j unit plugin test
__label__rational if the logged number of nonok status objectsdiffers from the last value passed the test is failed if this method is not calledat all the expected number defaults to zero
__label__rational project reference updated may throw an exception if unable to write cdtproject file update project references if necessary
__label__rational ensure that if changed the order is consistent
__label__rational a concrete implementation of this class is generated by widget map generator orone of its subclasses during widgetset compilation
__label__rational if there is a mismatch between what was written and what was expecteda small range of bytes either side of the first error are logged to aiddiagnosing what problem occurred whether it was a previous fileor a corrupting of the current file this assumes that twosequential runs to the same path use datasets with different charactermoduli
__label__rational deleteonerror if deleteonerror is mentioned as a target anywhere in themakefile then make will delete the target of a rule if it haschanged and its commands exit with a nonzero exit status just asit does when it receives a signal
__label__rational since the bimap is immutable immutable bi map doesnt require special logicfor keeping the bimap and its inverse in sync during serialization the way abstract bi map does
__label__rational casting to any type is safe because the set will never hold any elements
__label__rational looking for of with entries use the builder instead
__label__rational p the sort order is stable that is if two entries have values that compareas equivalent the entry that was inserted first will be first in the built mapsiteration order
__label__rational if entries is full then this implementation may end up using the entries arraydirectly and writing over the entry objects with nonterminal entries but this issafe if this builder is used further it will grow the entries array so it cantaffect the original array and future build calls will always copy any entryobjects that cannot be safely reused
__label__rational p despite the method name this method attempts to avoid actually copyingthe data when it is safe to do so the exact circumstances under which acopy will or will not be performed are undocumented and subject to change
__label__rational lock the @link fs namesystem lock in @link fs namesystem before callinginto @link snapshot manager methodsbr lock the @link fs directory lock for the @link snapshot manager methodsif necessary
__label__rational if the path is already a snapshottable directory update the quota
__label__rational no more needed according to httpsbugseclipseorgbugsshowbugcgiid launch ui pluginset dialog shellparentget shell
__label__rational during initialization we dont want to use the default values of the connection but we want to use the ones that are part of the configuration
__label__rational check if the date is in the range we need
__label__rational check if the slot is taken
__label__rational if width is undefined use the width of the first cell otherwise use distributed sizes
__label__rational if overwritten not specified it should be which user specified
__label__rational if they are both template functions we can order them that way
__label__rational li when adding a layout version with an ancestor that is not same asits immediate predecessor use the constructor where a specific ancestorcan be passed
__label__rational can be called by a thread other than the one that acquired the ast
__label__rational ib rs are asynchronously processed by name node the next client protocol#add block may throw not replicated yet exception
__label__rational ib rs are asynchronously processed by name node the next client protocol#add block may throw not replicated yet exception
__label__rational do not renamerefactor this to rm view as it will wreak havoc on mac os hfs as its caseinsensitive
__label__rational if this method returns false then the c project description storage type createsa cproject containing this data
__label__rational if crc types are mixed in a file
__label__rational we should never get here since the validity was checked when get crc type was called above
__label__rational if there is no block allocated for the file return one with the magic entry that matches what previous hdfs versions return
__label__rational shouldnt happen there should at least be the readonly config can only select the initial working set
__label__rational we have a mostrecentlyused working set just take the first in tree order
__label__rational yarn doesnt have the concept of slots per task set it as 
__label__rational the am should decode both parts of the message the @link strict preemption contract specifies particular allocations that the r mrequires back the am can checkpoint containers state adjust its executionplan to move the computation or take no action and hope that conditions thatcaused the rm to ask for the container will changep in contrast the @link preemption contract also includes a description ofresources with a set of containers if the am releases containers matchingthat profile then the containers enumerated in @link preemption contract#get containers may not be killedp each preemption message reflects the rms current understanding of thecluster state so a request to return emnem containers may notreflect containers the am is releasing recently exited containers the rm hasyet to learn about or new containers allocated before the message wasgenerated conversely an rm may request a different profile of containers insubsequent requestsp the policy enforced by the rm is part of the scheduler generally onlycontainers that have been requested consistently should be killed but thedetails are not specified
__label__rational the decl spec may be null so use get decl spec
__label__rational if adapter installed for breakpoint call adapter
__label__rational checks if the breakpoint type is a hardware breakpoint if so return the hardware breakpoint image
__label__rational there is no associated editor id for this breakpoint see if an alternative can be supplied from an adapter
__label__rational if adapter installed for breakpoint call the adapter
__label__rational if there are already free resources for the container to start and there are no queued containers waiting to be executed start this container immediately
__label__rational if container is null and distributed scheduling is enabled container might be queued otherwise container might not be handled by this nm
__label__rational if container was indeed running update allocated resource utilization
__label__rational please note that this method should be called even if the profiler is notenabled because it will then remove a logger function that might havebeen included in the html page and that would leak memory unless removed
__label__rational if this editor is for a project file remove this editor as a property change listener
__label__rational if there isnt already a node for this names linkage then the new name can be inserted in the normal way
__label__rational otherwise update the nodes head field to point to the given name
__label__rational if a node is found that has a name in the list then update this iterator to point to the next linkages node this is so the next call to advance starts at the right place
__label__rational if nothing is found then there is no more iterating
__label__rational why not just use objto string that method is often overridden and socannot be relied on for a representation that uniquely identifies theobject in the vm space
__label__rational if we are right before the text start line end and already after the insertion point then just shift to the right
__label__rational if there were no expected audiences configured then just consider any audience acceptable
__label__rational if any of the configured audiences is found then consider it acceptable
__label__rational if the hover offset falls within the selection range return theregion for the whole selection
__label__rational user class
__label__rational if version is not stored previously treat it as currentversioninfo
__label__rational group class
__label__rational if is done is true during the call to listen in pool threadlisten in pool thread doesnt start a thread make sure its false thefirst time through and forever after since no one else cares aboutit
__label__rational other class
__label__rational if the parent subcomponent already has a tooltip open and it hasnt changed we ignore the event
__label__rational if a binding has already been persisted for this instance then return it now
__label__rational if a pdom binding was created then add it to the linkage before returning it
__label__rational otherwise fall back to looking in the c linkage
__label__rational if the new name was created for a qml registration then put it into the index
__label__rational if this is a name for a qml registration then the registration must be removed from the index
__label__rational if the block is corrupted it means all its available replicas are corrupted we dont mark it as missing given these available replicas might still be accessible as the block might be incorrectly marked as corrupted by client machines
__label__rational if there were internal errors during the fsck operation we want to return failurestatus even if those errors were not immediately fatal otherwise many unit tests will pass even when there are bugs
__label__rational if no last configuration or user has changed the executable we need to create a new configuration and remove artifacts from the old one
__label__rational we should only need to backup the length of qproperty but allow extra to deal with whitespace
__label__rational if the previous token is an attribute name that has a parameter then suggest appropriate values for that parameter otherwise suggest the other attribute names
__label__rational if the cursor is in whitespace then the current identifier is null scan backward to find the start of this whitespace
__label__rational note that if the nested form is the first or last field in the parent form styles from the parent padding may leak to its contents
__label__rational if no users are present consider am limit for that queue
__label__rational this page can be displayed either for project or for folder
__label__rational cannot work with multi cfg
__label__rational this class should hold elements for source location tree
__label__rational if there exists a scaladoc comment that immediately precedes this annotation the firstline of the comment must be developer api with no trailing blank line this is becauseof the known issue that scaladoc displays only either the annotation or the comment whichevercomes first
__label__rational an edge is never adjacent to itself
__label__rational to ensure atomicity of updates to index file write to temporary index file first and then rename
__label__rational if any builder is managed pessimistic
__label__rational if a meaningful resource was removed then force a full build
__label__rational if the project has changed then a build is needed and we can stop
__label__rational if any builder is managed pessimistic
__label__rational caller of this method must hold that lock
__label__rational if a meaningful resource was removed then force a full build
__label__rational if the project has changed then a build is needed and we can stop
__label__rational the executable name needs to be expressed as a shell path for the shell to find it
__label__rational the executable name needs to be expressed as a shell path for the shell to find it
__label__rational dont reindex the project if it already has a qt linkage the index will be updated by the normal triggers
__label__rational we need to force the index to be rebuilt the first time the qt nature is added if this doesnt happen then the pdom could have the current version so nothing would trigger an update but no qt content
__label__rational custom job conf properties for this class are prefixed with this namespace
__label__rational implementation should seek forward in to the first byte of the next record the initial byte offset in the stream is arbitrary
__label__rational a marker file that is created on each root directory if a rolling upgradeis in progress the nn does not inform the dn when a rolling upgrade isfinalized all the dn can infer is whether or not a rolling upgrade iscurrently in progress when the rolling upgrade is not in progress if the marker file is present then a rolling upgrade just completed if a previous directory exists it can be deleted now if the marker file is absent then a regular upgrade may be inprogress do not delete the previous directory
__label__rational if sdprevious directory exists delete it
__label__rational olli if sdcurrentbpidprevious exists then delete itlili rename sdcurrentbpidcurrent tosdcurrentbpidcurrentprevioustmplili create new sdcurrentbpidcurrent directoryliolli hard links for block files are created from previoustmp to currentlili save new version file in current directoryliolli rename previoustmp to previousli ol
__label__rational rollback if previous lv layoutversion prev c time namenodec time upgrade if thislv layoutversion thisc time namenodec time regularstartup if thislv layoutversion thisc time namenodec time
__label__rational rollback if applicable
__label__rational check if zlib has consumed all input compress should be invoked if keep uncompressed buf true
__label__rational check if we have consumed all userinput
__label__rational check if zlib says its finished and all compressed data has been consumed
__label__rational check if there is compressed data
__label__rational check if zlib consumed all input buffer set keep uncompressed buf properly
__label__rational returns true if the given annotation is retained at runtime
__label__rational returns the scoping annotation or null if there isnt one
__label__rational returns the scope annotation on @code type or null if none is specified
__label__rational returns true if annotations of the specified type are binding annotations
__label__rational if the annotation is an instance of @code javaxinject named canonicalizes tocomgoogleguicename named returns the given annotation otherwise
__label__rational if the annotation is the class @code javaxinject named canonicalizes tocomgoogleguicename named returns the given annotation class otherwise
__label__rational we only expect an exception if x was not a perfect square
__label__rational now figure out what rounding mode we should behave like it depends if floor was oddeven
__label__rational now figure out what rounding mode we should behave like it depends if floor was oddeven
__label__rational we only expect an exception if x was not a power of 
__label__rational check if nativehadoop code is loaded for this platform
__label__rational returns true only if this build was compiled with support for snappy
__label__rational returns true only if this build was compiled with support for isal
__label__rational returns true only if this build was compiled with support for openssl
__label__rational if it has an associated debugger add a marker for now every thread is debugged
__label__rational draw selection marker if any
__label__rational this should not be the case anyhow
__label__rational if this is a local job runnerbased job this will be a mapping from map task attempts to their output files this will be null in other cases
__label__rational add in the new ones if any
__label__rational if the @link ic breakpoint#sourcehandle resolves to the same file onthe filesystem as the preferred resource the preferred resource is used
__label__rational if not return as many as we can
__label__rational verify if the blocks placement meets requirement of placement policyie replicas are placed on no less than min racks racks in the system
__label__rational if we successfully replaced the variable continue if this line is not executed it means we failed to replace and the file will be added in the subsequent code for the added case
__label__rational we cant update a project file if it doesnt exist
__label__rational if we get in here then the number literal is charactersbut hasnt had the last character checked if its a suffix
__label__rational sccsget the application shall ensure that this special target is specified withoutprerequesites the commands specifeied with this target shall replace the defaultcommands associated with this special target
__label__rational p if @code swallow io exception is true then we dont rethrow @code io exception but merelylog it
__label__rational if there were problems writing out the date ignore and continue since that shouldnt stop us from losing the rest of the information
__label__rational if there were problems writing out the date ignore and continue since that shouldnt stop us from losing the rest of the information
__label__rational if the directory checkpoint does not exist eg running for the first time it will createa new streaming context will print creating new context to the console otherwise ifcheckpoint data exists in checkpoint then it will create streaming context fromthe checkpoint data refer to the online documentation for more details
__label__rational this option will make the dsfgdb launch fail and on linux we have a problem where it will hang since this option was added for multiprocess but it has not been completed for linux yet just hide it completely for now
__label__rational note painting is done in order objects were addedso objects added last are drawn on top of others use raiselower methods to change the object zordering if needed
__label__rational number of ids should be about after scrolling down the table
__label__rational this helper method will invoke the specified function in parallel for eachend point in the specified list using a thread pool and return theresponses received from the function it implements the logic required fordispatching requests in parallel and waiting for the responses if any ofthe function call fails or times out it will ignore and proceed with therest so the responses returned can be less than the number of end pointsspecified
__label__rational create a request intercepter pipeline for testing the last one in the chain will call the mock resource manager the others in the chain will simply forward it to the next one in the chain
__label__rational note we add the scannerconfig even if the resource doesnt actually exist below this project which may happen when reading existing build logs because resources can be created as part of the build and may not exist at the time of analyzing the config but rebuilt later on if get projectexistsrel path 
__label__rational the field separator is under attribute mapreducefieldseldatafieldseparator
__label__rational no rules applied these should pass
__label__usage @param sub launch
__label__usage @param fs image fs image to set
__label__usage @param prog startup progress to set
__label__usage @param name node address inet socket address to set
__label__usage @param context servlet context to get
__label__usage @return startup progress associated with context
__label__usage @since 
__label__usage @param contentthe content for the panel
__label__usage @param captionthe caption used in the panel html
__label__usage @param captionthe caption of the panel html
__label__usage @param contentthe content used in the panel
__label__usage @return the list of container tokens to be used for authorization duringcontainer resource increase
__label__usage @param containers to increase the list of container tokens to be usedfor container resource increase
__label__usage @param selection the new selection
__label__usage @param layout new layout to use
__label__usage @param selected candidates already selected candidates from previous policies
__label__usage @param cluster resource
__label__usage @param total preempted resource allowed how many resources allowed to bepreempted in this round
__label__usage @return merged selected candidates
__label__usage @return i path
__label__usage @since 
__label__usage @param selection the new selection
__label__usage @param value the element to be checked
__label__usage @param attribute the attribute
__label__usage @return returns the id
__label__usage @return returns the name
__label__usage @return returns the name
__label__usage @return the image descriptor of the described category
__label__usage @param enabled the new enabled state
__label__usage @return the enablement state of the category
__label__usage @param included the included
__label__usage @return included
__label__usage @param selection the new selection
__label__usage @return @code true if the category contains any computers @code false
__label__usage @param partition the partition
__label__usage @return @code true if the category contains any computers @code false otherwise
__label__usage @return sort order
__label__usage @param sort order the sort order
__label__usage @param partition the partition type where to invocation occurred
__label__usage @param context the invocation context passed on to the extension
__label__usage @param monitor the progress monitor passed on to the extension
__label__usage @return the list of computed completion proposals element type
__label__usage @param context the invocation context passed on to the extension
__label__usage @param selection the selection this action is working on
__label__usage @param partition the partition type where to invocation occurred
__label__usage @param monitor the progress monitor passed on to the extension
__label__usage @return the list of computed context information objects element type
__label__usage @return the error message from the computers in this category
__label__usage @return the sites selection provider
__label__usage @return the sites shell
__label__usage @return the sites selection
__label__usage @param remote root log dir
__label__usage @return the site owning this action
__label__usage @param app id
__label__usage @param user
__label__usage @param node id
__label__usage @param suffix
__label__usage @return the remote log file
__label__usage @param remote root log dir
__label__usage @param app id
__label__usage @param user
__label__usage @param suffix
__label__usage @return the remote application specific log dir
__label__usage @param site the site this action is working on
__label__usage @param remote root log dir
__label__usage @param user
__label__usage @param suffix
__label__usage @return the remote suffixed log dir
__label__usage @param remote root log dir
__label__usage @param user
__label__usage @return the remote per user log dir
__label__usage @param conf
__label__usage @return the suffix which will be appended to the user log dir
__label__usage @param node id
__label__usage @since 
__label__usage @return the node string to be used to construct the file name
__label__usage @noextend this class is not intended to be subclassed by clients
__label__usage @since 
__label__usage @since 
__label__usage @return boolean
__label__usage @param dirty represents the new state
__label__usage @return boolean
__label__usage @param changed represents the new change state
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @return the folding action group or codenullcode if there is none
__label__usage @since 
__label__usage @param listener the reconcile listener to be removed
__label__usage @since 
__label__usage @param listener the reconcile listener to be added
__label__usage @return the findreplace document adapter
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @param klass class
__label__usage @return path to the jar containing the class
__label__usage @since 
__label__usage @param dir the directory to delete
__label__usage @return returns whether the deletion was successful or not
__label__usage @return a registry operations instance
__label__usage @param conf configuration
__label__usage @return a registry operations instance
__label__usage @param conf configuration
__label__usage @param name name of the instance
__label__usage @return an anonymous registry operations instance
__label__usage @param conf configuration
__label__usage @return a registry operations instance
__label__usage @param jaas context the jaas context of the account
__label__usage @param conf configuration
__label__usage @param password password
__label__usage @param id user id
__label__usage @param conf configuration
__label__usage @since 
__label__usage @param v the result type returned by this futures @code get method
__label__usage @param x the type of the exception thrown by the futures @code checked get method
__label__usage @since 
__label__usage @param filter config filter configuration
__label__usage @param resp the response object
__label__usage @param token authentication token for the cookie
__label__usage @param domain the cookie domain
__label__usage @param path the cookie path
__label__usage @param expires unix timestamp that indicates the expire date of thecookie it has no effect if its value lt 
__label__usage @param is secure is the cookie secure
__label__usage @param is cookie persistent whether the cookie is persistent or not
__label__usage @param response the response object
__label__usage @param request the request object
__label__usage @param filter chain the filter chain object
__label__usage @param filter chain the filter chain object
__label__usage @param response the response object
__label__usage @param request the request object
__label__usage @noextend this class is not intended to be subclassed by clients
__label__usage @noimplement this interface is not intended to be implemented by clients
__label__usage @return command line
__label__usage @since 
__label__usage @since 
__label__usage @return
__label__usage @param operation
__label__usage @since 
__label__usage @return
__label__usage @param operation
__label__usage @return
__label__usage @param operation
__label__usage @param server the nn server
__label__usage @noextend this class is not intended to be subclassed by clients
__label__usage @param count number of bookies required
__label__usage @param timeout number of seconds to wait for bookies to start
__label__usage @since 
__label__usage @param name name of the project
__label__usage @param location location uri for the project
__label__usage @return the project
__label__usage @param name name of the project
__label__usage @param location location uri for the project
__label__usage @param monitor progress monitor
__label__usage @return the project
__label__usage @return array of file content types
__label__usage @return array of file extension specifications
__label__usage @return array of languages
__label__usage @return the last project created
__label__usage @param defaults true if called from the first wizard page
__label__usage @noextend this class is not intended to be subclassed by clients
__label__usage @return the newly created project
__label__usage @param defaults true if called from the first wizard page
__label__usage @param on finish true if the method is called when finish is pressed false
__label__usage @return the newly created project
__label__usage @param config the configuration element
__label__usage @param data not used
__label__usage @param property name not used
__label__usage @since 
__label__usage @return array of project natures
__label__usage @param editor the c editor
__label__usage @param listenerthe sort order change listener to remove
__label__usage @param listenerthe sort order change listener to add
__label__usage @param group name the group name to add the action to
__label__usage @param eventthe sort order change event
__label__usage @return true if sort event originated from user interaction
__label__usage @return the sort order list
__label__usage @param user originatedcodetruecode if event is a result of user interactioncodefalsecode if from api call
__label__usage @param sort orderthe new sort order list
__label__usage @param sourcethe component from which the event originates
__label__usage @since 
__label__usage @noreference this constructor is not intended to be referenced by clients
__label__usage @since 
__label__usage @param page the page that owns this action group
__label__usage @param part the view part that owns this action group
__label__usage @param bindings bindings being renamed
__label__usage @return a set of files containing references to the bindings
__label__usage @param site the site that will own the action group
__label__usage @since 
__label__usage @param attribute infos attributes for the label
__label__usage @since 
__label__usage @since 
__label__usage @param selection provider the selection provider used instead of thepage selection provider
__label__usage @since 
__label__usage @param properties map of properties to use to generate the label
__label__usage @param status result of the properties update
__label__usage @param column index column to write label information under
__label__usage @param update update to write to
__label__usage @since 
__label__usage @noreference this method is not intended to be referenced by clients
__label__usage @since 
__label__usage @version @version@
__label__usage @since 
__label__usage @inherit doc
__label__usage @since 
__label__usage @param servicethe portlet service to which the new session belongs
__label__usage @return portlet session
__label__usage @return portlet configuration
__label__usage @param listenerto add
__label__usage @param listenerto remove
__label__usage @param u ia window in which a temporary action url can be opened ifnecessary
__label__usage @param nameevent name
__label__usage @param valueevent value object that is serializable and if appropriatehas a valid jaxb annotation
__label__usage @param u ia window in which a temporary action url can be opened ifnecessary
__label__usage @param nameparameter identifier
__label__usage @param valueparameter value
__label__usage @param u ia window in which the render url can be opened if necessary
__label__usage @param portlet modethe portlet mode to switch to
__label__usage @param actionthe action parameter javaxportletaction parameter value in jsr
__label__usage @return action url or null if called outside a mime request outside a uidl request or similar
__label__usage @since 
__label__usage @return the value
__label__usage @param launch
__label__usage @return the number of bytes necessary to write out this headerincluding the lengthprefixing of the payload and header
__label__usage @param last seq no the previous sequence number received we expect thecurrent sequence number to be larger by 
__label__usage egprenamenodeexampleorg pre
__label__usage prehttpexampleorgpre
__label__usage preusersexampledatasetpre
__label__usage a single element would beprezkregistrypre an endpoint with multiple elements would list them asprezkregistryzkregistrypre
__label__usage @value
__label__usage @value
__label__usage @value
__label__usage @value
__label__usage @value
__label__usage @param pos
__label__usage @param pos
__label__usage @param pos position of the splitter as a css string either pixels or apercentage
__label__usage @return minimum position if pos is less than minimum positionmaximum position if pos is greater than maximum position posotherwise
__label__usage @param posposition to be converted
__label__usage @return converted position string
__label__usage @return the first container
__label__usage @return the second container
__label__usage @return true if the browser requires a dragging curtain
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @return
__label__usage @return
__label__usage @since 
__label__usage @since 
__label__usage @return
__label__usage @return string
__label__usage @return the created project resource or codenullcode if the projectwas not created
__label__usage @returns the c project
__label__usage @return i status
__label__usage @param project field contents
__label__usage @since 
__label__usage @noextend this class is not intended to be subclassed by clients
__label__usage @noimplement this interface is not intended to be implemented by clients
__label__usage @param buffer left operand
__label__usage @param buffer right operand
__label__usage @param offset where to start comparing in the left buffer
__label__usage @param offset where to start comparing in the right buffer
__label__usage @param length how much to compare from the left buffer
__label__usage @param length how much to compare from the right buffer
__label__usage @return if equal if left is less than right etc
__label__usage @return the default fs permission
__label__usage @param value the parameter value
__label__usage @param str a string representation of the parameter value
__label__usage @return the represented fs permission
__label__usage @param config configuration reference
__label__usage @param status status describing the current page error state
__label__usage @return codetruecode if it is a valid reference codefalsecode if launch configuration should be filtered
__label__usage @param parent parent composite
__label__usage @return created preview
__label__usage @param composite composite to create in
__label__usage @param num columns number of columns to use
__label__usage @return created composite
__label__usage @param composite composite to create in
__label__usage @param num columns number of columns to use
__label__usage @param parent the parent composite
__label__usage @return created content control
__label__usage @param composite the composite on which the swt widgets are added@param num columns the number of columns in the composites grid layout@param preferences the map to store the values@param key the key to store the values@param min value the minimum value which is valid input@param max value the maximum value which is valid input@param text the label text for this preference
__label__usage @param composite the composite on which the swt widgets are added@param num columns the number of columns in the composites grid layout@param preferences the map to store the values@param key the key to store the values@param values an array of n elements indicating the values to store for each selection@param text the label text for this preference@param items an array of n elements indicating the text to be written in the combo box
__label__usage @param composite the composite on which the swt widgets are added@param num columns the number of columns in the composites grid layout@param preferences the map to store the values@param key the key to store the values@param values an array of two elements indicating the values to store on uncheckedchecked@param text the label text for this preference@param style swt style flag for the button
__label__usage @return the main control
__label__usage @return gets the currently used key which is used to store the value
__label__usage @param key new value
__label__usage @param enabled new value
__label__usage @return gets the enabled state of all swt widgets of this preference
__label__usage @return gets the map of this preference
__label__usage @param preferences the map where the value is written@param key the key for which a value is managed
__label__usage @since 
__label__usage @since 
__label__usage see the guava user guide article on a hrefhttpsgithubcomgoogleguavawiki new collection types explained#bimap
__label__usage @return the inverse view of this bimap
__label__usage @param key the key with which the specified value is to be associated@param value the value to be associated with the specified key@return the value which was previously associated with the key which may
__label__usage pb warningb the results of calling this method may vary depending onthe iteration order of @code map
__label__usage p note that a successful call to this method could cause the size of thebimap to increase by one stay the same or even decrease by one
__label__usage pb warningb if an existing entry with this value is removed the keyfor that entry is discarded and not returned
__label__usage pb noteb there is no guaranteed correspondence between the iterationorder of a bimap and that of its inverse
__label__usage @param patha concatenation of this nodes location the path seperator and its name
__label__usage @param name this nodes name can be null must not contain @link #pathseparator@param location this nodes location
__label__usage @param name this nodes name can be null must not contain @link #pathseparator@param location this nodes location@param parent this nodes parent node@param level this nodes level in the tree
__label__usage @param name the nullable name which cannot contain the @link #pathseparator@param location the location
__label__usage @return this nodes name
__label__usage @return this nodes network location
__label__usage @param location the location
__label__usage @param node a nonnull node@return the path of a node
__label__usage @return this nodes path as its string representation
__label__usage @param path path to normalize@return the normalised path
__label__usage @return this nodes parent
__label__usage @param parent the parent
__label__usage @return this nodes level in the tree
__label__usage @param level the level
__label__usage eg the root of a tree returns and its children return 
__label__usage @value
__label__usage @value
__label__usage @value
__label__usage @since 
__label__usage @param error messagethe message to display in case the value does not validate
__label__usage @param min value the minimum value to accept or null for no limit
__label__usage @param max value the maximum value to accept or null for no limit
__label__usage @noextend this interface is not intended to be extended by clients
__label__usage @noimplement this interface is not intended to be implemented by clients
__label__usage @return boolean
__label__usage @return boolean
__label__usage @return boolean
__label__usage @param member the binding specifying the member
__label__usage @param visibility the visibility of the codemembercode
__label__usage this package is a part of the opensource a hrefhttpsgithubcomgoogleguava guavaalibrary
__label__usage @noextend this interface is not intended to be extended by clients
__label__usage @noimplement this interface is not intended to be implemented by clients
__label__usage @param request request to release a resource in the shared cache@return empty response on releasing the resource
__label__usage @param request request to claim a resource in the shared cache@return response indicating if the resource is already in the cache
__label__usage note this method is an optimization and the client is not required to callit for correctness
__label__usage currently the code shared cache managercode sends an empty response
__label__usage @since 
__label__usage can be subclassed and used for queries in the index
__label__usage @since 
__label__usage @since 
__label__usage @param linkage id the id of the linkage whose bindings should be retained@return an index filter instance
__label__usage @param linkage a linkage to be tested
__label__usage @return whether to include objects of the given linkage in the query
__label__usage @param linkage id the id of the linkage whose bindings should be retained or to accept all linkages
__label__usage @return an index filter instance
__label__usage @param linkage id the id of the linkage whose bindings should be retained or to accept all linkages
__label__usage @return an index filter instance
__label__usage @param binding the binding being checked for validity
__label__usage @return whether or not the binding is valid
__label__usage @since 
__label__usage @noextend this interface is not intended to be extended by clients
__label__usage @since 
__label__usage @noextend this class is not intended to be subclassed by clients@noinstantiate this class is not intended to be instantiated by clients
__label__usage @noimplement this interface is not intended to be implemented by clients
__label__usage @param detect preprocessor
__label__usage @param chars
__label__usage @param chars
__label__usage @param chars
__label__usage @param query string the actual query to perform@param connection poolthe jdbc connection pool to use to open connections to the sq ldatabase@param primary key columns the primary key columns readonly mode is forced if none areprovided optional
__label__usage @param query string the actual query to perform
__label__usage @param primary key columns the primary key columns readonly mode is forced if thisparameter is null or empty
__label__usage @param connection poolthe jdbc connection pool to use to open connections to the sq ldatabase
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @param queue fair share fairshare in the queue@param queue usage resources used in the queue@param max available available resource in cluster for this queue@return calculated headroom
__label__usage @param usage @link resource the resource used by application masters@param max am resource @link resource the maximum allowed resource forapplication masters
__label__usage @return true if am resource usage is over the limit
__label__usage @param usage @link resource the resource usage@param fair share @link resource the fair share
__label__usage @return true if check passes is over or false otherwise
__label__usage @param queues @link fs queues whose shares are to be updated
__label__usage @param total resources total @link resources in the cluster
__label__usage @since 
__label__usage @since 
__label__usage @param policy canonical class name or drf or fair or fifo
__label__usage @return resource calculator instance to use
__label__usage @return returns the name of @link scheduling policy
__label__usage @return depth equal to one of fields
__label__usage @param policy @link scheduling policy we are checking thedepthapplicability for@param depth queues depth in the hierarchy
__label__usage @return true if policy is applicable to passed depth false otherwise
__label__usage @return the comparator to sort by
__label__usage @param schedulables @link schedulables whose shares are to be updated@param total resources total @link resources in the cluster
__label__usage @since 
__label__usage @param element
__label__usage @return ui element
__label__usage @since 
__label__usage @since 
__label__usage @param t property data type
__label__usage @param itemcurrently handled item@param item iditem id for currently handled item@param property idid for this property
__label__usage @return generated value
__label__usage @return type of generated property
__label__usage @param ordera sort order for this property
__label__usage @return an array of sort orders describing how this property is sorted
__label__usage @param filteroriginal filter for this property
__label__usage @return modified filter that is compatible with the underlying container
__label__usage @since 
__label__usage @return the value
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage pb noteb @code aas setdequalsbas setd does not imply @code aequalsb forexample @code a and @code b could be @code and @code or the emptyranges @code and @code 
__label__usage pb warningb be extremely careful what you do with the @code as set view of a largerange set such as @code immutable range setof rangegreater than certain operations onsuch a set can be performed efficiently but others such as @link set#hash code or@link collections#frequency can cause major performance problems
__label__usage @code immutable range set
__label__usage @code range
__label__usage @code copy of
__label__usage @code true
__label__usage @code 
__label__usage @param ctx trace context
__label__usage @link object#to string
__label__usage @link set#hash code
__label__usage @code as set
__label__usage @code 
__label__usage @code aequalsb
__label__usage @code 
__label__usage @code 
__label__usage code immutable range setof rangegreater than
__label__usage code 
__label__usage @code 
__label__usage @code b
__label__usage @code aas setdequalsbas setd
__label__usage @code a
__label__usage @link collections#frequency
__label__usage @code range
__label__usage @code range set
__label__usage @code range set
__label__usage @code range set
__label__usage @code range set
__label__usage @code count
__label__usage @param rm the request monitor indicating that gdb has been terminated
__label__usage @param rm the request monitor indicating that the final steps ifinitialization are completed
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @param rm
__label__usage @since 
__label__usage @param enabled if codetruecode printing errors is turned on
__label__usage @param rm
__label__usage @since 
__label__usage @since 
__label__usage @param viewer the text viewer
__label__usage @param viewer the text viewer
__label__usage @param xscreen xcoordinate@param yscreen ycoordinate@param absoluteif codetruecode coordinates are expected to beabsolute screen coordinates
__label__usage @return text offset
__label__usage @param widget offset
__label__usage @return document offset
__label__usage @return true if the document may be changed by the drag
__label__usage @param enabled
__label__usage @since 
__label__usage @since 
__label__usage @since since as @code funnelsstring funnel
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @code primitive sink
__label__usage @code primitive sink
__label__usage @code output stream
__label__usage @code close
__label__usage @code flush
__label__usage @code output stream
__label__usage @code io exception
__label__usage @code iterable
__label__usage @code char sequence
__label__usage @code char sequence
__label__usage @code byte
__label__usage @since 
__label__usage @param v any type to be returned by the visit method use @link void with@code return null if no return type is needed
__label__usage @code return null
__label__usage @since 
__label__usage @param context@param breakpoint@param final rm
__label__usage @param context@param breakpoint@param drm
__label__usage @param dmc@param properties@param rm@param generate update event
__label__usage @since 
__label__usage note that breakpoint commands actions are not handled by the backend which is why we dont check for changes here
__label__usage for example suppose the path is foobarbaz no matter baz is a file or a directorythe parent path is foobar if bar exists then the ancestor path is also foobar if bar does not exist and foo existsthen the ancestor path is foo further if both foo and bar do not existthen the ancestor path is 
__label__usage @since 
__label__usage @param context@param reference@param ignore count@param rm
__label__usage @param sync flags indicate the detailed semantic and actions of the hsync
__label__usage @return the number of valid replicas of the current block
__label__usage @param output streamprcess stdout is written to this stream cannot be codenullcode@param error streamprcess stderr is written to this stream cannot be codenullcode
__label__usage @param type
__label__usage @return
__label__usage @param propertythe property to check
__label__usage @since 
__label__usage @return codetruecode if the property has a no layout annotationotherwise codefalsecode
__label__usage @param methodthe rpc method to check
__label__usage @since 
__label__usage @return codetruecode if the method has a no layout annotationotherwise codefalsecode
__label__usage @since 
__label__usage @param clazzthe connector type
__label__usage @param methodthe state change method data
__label__usage @since 
__label__usage @param typethe connector type
__label__usage @return a map of state property names to handler method data
__label__usage @return a string for throwing
__label__usage @since 
__label__usage @param indicator@param string
__label__usage @return
__label__usage @noextend this interface is not intended to be extended by clients
__label__usage @noimplement this interface is not intended to be implemented by clients
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @param mask a bit mask used to identify the namespace of the identifier
__label__usage @param mask a bit mask used to identify the namespace of the identifier
__label__usage @param scope an i scope object that will be used to represent this scope
__label__usage @return a string for throwing
__label__usage @since 
__label__usage @param args
__label__usage @param in the input stream to be wrapped
__label__usage @param key key to put in reference map
__label__usage @return referenced instance
__label__usage @param key key to remove the reference
__label__usage @return
__label__usage type e should implement @link reference counterbr
__label__usage note this class is not threadsafe
__label__usage note for testing purpose step may initial the maps with full mappingwhen using constructor
__label__usage @param conf the configuration
__label__usage @param construct full map at init initialize the maps with full mapping whentrue otherwise initialize the maps to empty this parameter isintended for testing only its default is false
__label__usage @param conf the configuration
__label__usage @param do check owner require user to be the owner of the path
__label__usage @since 
__label__usage check permission
__label__usage @param job the configuration
__label__usage @return the model presentation to be used for this view
__label__usage @param context the object context
__label__usage @return context id
__label__usage @return swt style
__label__usage @param selection
__label__usage @noextend this interface is not intended to be extended by clients
__label__usage @noimplement this interface is not intended to be implemented by clients
__label__usage @param type id
__label__usage @since 
__label__usage @since 
__label__usage @param auto dispose on display dispose if codetruecode the color managerautomatically disposes all managed colors when the current display gets disposedand all calls to @link orgeclipsejfacetextsourcei shared text colors#dispose areignored
__label__usage @param class type@link component connector class to instantiate
__label__usage @since 
__label__usage @return the namespace and storagespace and typespace consumed
__label__usage @return new instance of the connector
__label__usage @param namespace size of the directory to be set@param storagespace storage space take by all the nodes under this directory@param typespaces counters of storage type usage
__label__usage @param delta the change of the namespacespacetype usage
__label__usage @param ts quotas type space counts for all storage types supporting quota
__label__usage @param counts counts to be added with current quota usage
__label__usage @return counts that have been added with the current qutoa usage
__label__usage @return the quota set or if it is not set
__label__usage @param ns quota namespace quota to be set
__label__usage @param ss quota storagespace quota to be set
__label__usage @param type storage type of the storage space quota to be set to set storagespacenamespace quota type must be null
__label__usage @param fullyqualified namefully qualified name of the server side component class
__label__usage @return component connector class to use
__label__usage @noextend this class is not intended to be extended by clients
__label__usage @noinstantiate this class is not intended to be instantiated by clients
__label__usage @param ancestor access the access required by the ancestor of the path
__label__usage @return component connector class to load after the initial widgetsetloading
__label__usage @param string
__label__usage @param args
__label__usage @param class typecomponent connector class
__label__usage @param ps the @link print stream to print to
__label__usage @param count the expected number of logged error and warning messages
__label__usage @since
__label__usage @since 
__label__usage @since 
__label__usage @param parent access the access required by the parent of the path
__label__usage @param conf configuration
__label__usage @param props property set
__label__usage @param key property name
__label__usage @param expected expected value if null the property must not be in the set
__label__usage @param fs filesystem
__label__usage @param path path to write to
__label__usage @param len length of data
__label__usage @param overwrite should the create option allow overwrites
__label__usage @param delete should the file be deleted afterwards with a verificationthat it worked deletion is not attempted if an assertion has failedearlier it is not in a codefinallycode block
__label__usage @param fs filesystem
__label__usage @param path path to write to
__label__usage @param len length of data
__label__usage @param overwrite should the create option allow overwrites
__label__usage @param fs filesystem
__label__usage @param path path to read from
__label__usage @param len length of data to read
__label__usage @return the bytes
__label__usage @param len length of bytes to compare
__label__usage @param src source data
__label__usage @param dest actual
__label__usage @param b byte
__label__usage @return the printable character string
__label__usage @param message text message
__label__usage @param failure what failed
__label__usage @param message message to use in the text
__label__usage @param message message to use in the text
__label__usage @param fs filesystem
__label__usage @param path path of the file
__label__usage @param expected expected length
__label__usage @param fs filesystem
__label__usage @param path path of the directory
__label__usage @param file status stats to check
__label__usage @param fs filesystem
__label__usage @param path path of file
__label__usage @param overwrite should the operation overwrite any existing file
__label__usage @param text text to write
__label__usage @return the read bytes
__label__usage @param fs filesystem
__label__usage @param path path
__label__usage @param fs filesystem
__label__usage @param path path to read
__label__usage @param length #of bytes to read
__label__usage @return the bytes read and converted to a string
__label__usage @param file system filesystem to resolve path against
__label__usage @param filename name of the file
__label__usage @param len length of data
__label__usage @param base base of the data
__label__usage @return the newly generated dataset
__label__usage @param modulo the modulo
__label__usage @param file system filesystem to examine
__label__usage @param message message to include in the assertion failure message
__label__usage @param path path in the filesystem
__label__usage @param file system filesystem to examine
__label__usage @param message message to include in the assertion failure message
__label__usage @param path path in the filesystem
__label__usage @param fs filesystem
__label__usage @param dir directory to scan
__label__usage @param subdir full path to look for
__label__usage @since 
__label__usage @since 
__label__usage @param the uri which must be that of local fs
__label__usage @param conf
__label__usage @noextend this class is not intended to be subclassed by clients
__label__usage @noimplement this interface is not intended to be implemented by clients
__label__usage @param access the access required by the path
__label__usage @param message message
__label__usage @param message detailed message
__label__usage @param cause the cause can be retried by the @link #get cause methoda ttnulltt value is permitted and indicates that the causeis nonexistent or unknown
__label__usage @noextend this interface is not intended to be extended by clients
__label__usage @noimplement this interface is not intended to be implemented by clients
__label__usage @return the type of the marker which would be associated to the problem
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @param sub access if path is a directoryit is the access required of the path and all the subdirectories if path is not a directory there is no effect
__label__usage @return vertical ruler information
__label__usage @return workbench part a text editor or a disassembly view
__label__usage @return breakpoint associated with activity in the ruler or codenullcode
__label__usage @param part a text editor or disassembly view
__label__usage @param info vertical ruler information
__label__usage @since 
__label__usage @since 
__label__usage @return return an array of the unique objects the return value isexpected to be used by the a combiner
__label__usage @return the set of the unique objects
__label__usage @return return the number of unique objects aggregated
__label__usage @param valan object
__label__usage @param max num the limit in the number of unique values to keep
__label__usage @param n the desired limit on the number of unique values
__label__usage @return the new limit on the number of unique values
__label__usage @param index the index of the journal to take offline
__label__usage @return the original code edit log output streamcode of the journal
__label__usage @return true if the operation was successful false otherwise
__label__usage @return aggregated logs blockclass
__label__usage @param ignore empty dir ignore permission checking for empty directory
__label__usage @return snapshottable directories that are owned by the current userrepresented as an array of @link snapshottable directory status if@code user name is null return all the snapshottable dirs
__label__usage @param user name current user name
__label__usage @param new snapshot name new name of the snapshot
__label__usage @param old snapshot name old name of the snapshot
__label__usage @param reclaim context used to collect information to reclaim blocksand inodes
__label__usage @param snapshot name name of the snapshot to be deleted
__label__usage @param snapshot name the name of the snapshot
__label__usage @param iip the i nodes resolved from the snapshottable directorys path
__label__usage @return snapshottable directory
__label__usage @since 
__label__usage @param event bus the @link event bus that handled the event and the subscriber useful forbroadcasting a a new event based on the error
__label__usage @param event the event object that caused the subscriber to throw
__label__usage @param subscriber the source subscriber context
__label__usage @param subscriber method the subscribed method
__label__usage @return the @link event bus that handled the event and the subscriber useful for broadcastinga a new event based on the error
__label__usage @return the event object that caused the subscriber to throw
__label__usage @return the object context that the subscriber was called on
__label__usage @return the subscribed method that threw the exception
__label__usage @since 
__label__usage note you must hold the cache lock to call this function
__label__usage @param evictable time ns the evictable time in nanoseconds or nullto set no evictable time
__label__usage @return the evictable time in nanoseconds
__label__usage note you must hold the cache lock to call this function
__label__usage @return true if we successfully added a nochecksum anchor
__label__usage @throws access control exception
__label__usage @return distributed scheduler register response
__label__usage @param request application master registration request
__label__usage @return distribtued scheduler allocate response
__label__usage @param request application master allocate request
__label__usage @return bloom filter the active standard bloom filtercode nullcode otherwise
__label__usage writable
__label__usage @param nr the threshold for the maximum number of keys to record in adynamic bloom filter row
__label__usage @param hash type type of the hashing function see@link orgapachehadooputilhash hash
__label__usage @param nb hash the number of hash function to consider
__label__usage @param vector size the number of bits in the vector
__label__usage nb should wait at least second to ensure the timestamp of the master index will change upon the writing because linux seems to update the file modification time with second accuracy
__label__usage nb har suffix is necessary
__label__usage nb to run this test from an ide make sure the folderhadoopcommonprojecthadoopcommonsrcmainresources is added as asource path this will allow the system to pick up the coredefaultxml andmetain fservices resources from the classpath in the runtime
__label__usage this suite is for tests to be run with gdb 
__label__usage add your test class here
__label__usage @since 
__label__usage @param connection pool
__label__usage @param connection pool
__label__usage @return code node reportcode for all nodes in the cluster
__label__usage @param protocol the protocol class
__label__usage @param name of the rate metric
__label__usage @param elapsed time
__label__usage @return codeiast problemcode
__label__usage @param pcodeiast problemcode
__label__usage @noextend this interface is not intended to be extended by clients
__label__usage @noimplement this interface is not intended to be implemented by clients
__label__usage @since 
__label__usage @noextend this interface is not intended to be extended by clients
__label__usage @noimplement this interface is not intended to be implemented by clients
__label__usage @param filename the file to process
__label__usage @return an array of headers one for each object within the archive
__label__usage @since 
__label__usage @param line reader line reader to read the line from
__label__usage @param out text to read into
__label__usage @return number of bytes read
__label__usage @since 
__label__usage @param split pos the split pos
__label__usage @param val contains value upon the method is returned
__label__usage @param key contains key upon the method is returned
__label__usage @param utf utf encoded string
__label__usage @param separator length the length of the separator between key and value
__label__usage @param split pos the split pos
__label__usage @param val contains value upon the method is returned
__label__usage @param key contains key upon the method is returned
__label__usage @param utf utf encoded string
__label__usage @param split pos the split pos
__label__usage @param sizecodeiast expressioncode
__label__usage @param val contains value upon the method is returned
__label__usage @param key contains key upon the method is returned
__label__usage @param length no of bytes
__label__usage @param start starting offset
__label__usage @param utf utf encoded string
__label__usage @param separator length the length of the separator between key and value
__label__usage @param split pos the split pos
__label__usage @param val contains value upon the method is returned
__label__usage @param key contains key upon the method is returned
__label__usage @param length no of bytes
__label__usage @return size of bit field or null
__label__usage @param start starting offset
__label__usage @param utf utf encoded string
__label__usage @param utf a byte array containing a utf encoded string
__label__usage @return position that first tab occures otherwise 
__label__usage @param utf a byte array containing a utf encoded string
__label__usage @param start starting offset
__label__usage @param length no of bytes
__label__usage @return position that first tab occures otherwise 
__label__usage @code null
__label__usage @since 
__label__usage @return codetruecode iff the selection state was changed by thiscall
__label__usage @param handlethe handle to deselect by
__label__usage @return codetruecode iff the selection state was changed by thiscall
__label__usage @param handlethe handle to select by
__label__usage @param t the grids row type
__label__usage @since 
__label__usage em noteem this method may not fire selection change events
__label__usage em noteem this method may not fire selection change events
__label__usage @param str a string representation of the parameter value
__label__usage @since 
__label__usage @param entry the dirty cache entry that is missing the given requestedproperty
__label__usage @param property property missing from cache
__label__usage @return if codetruecode cache can update the given missing propertyin the dirty cache entry with data from the vm node
__label__usage @noextend this interface is not intended to be extended by clients
__label__usage @noimplement this interface is not intended to be implemented by clients
__label__usage @return reference to a start node a graph
__label__usage @return a clone of the instance
__label__usage @param api api name
__label__usage @param list list
__label__usage @return the endpoint or null if there was no match
__label__usage @param key key to look up
__label__usage @param def val default value
__label__usage @return the value as a stringor codedefvalcode if the value was not present
__label__usage @param key key to look up
__label__usage @return the value or null
__label__usage @return a map of any unknown attributes in the deserialized json
__label__usage @param key attribute name
__label__usage @param value attribute value
__label__usage @param api api
__label__usage @return the endpoint or null if there was no match
__label__usage @param endpoint endpoint to set
__label__usage @param endpoint endpoint to set
__label__usage @param that service record source
__label__usage @param api api
__label__usage @return the endpoint or null if there was no match
__label__usage @param expressionthe expression representing a location within a memory space this can be a simple numeric expression like x orsomething more complex eaxg customer count
__label__usage @param memory space i da string which represents the memory space
__label__usage @return the encoded string representation of the address or null toindicate no custom encoding is required
__label__usage @noextend this interface is not intended to be extended by clients
__label__usage @param strthe encoded string
__label__usage @noimplement this interface is not intended to be implemented by clients
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @return the result of decoding the string into its components never null
__label__usage @param lv new layout version with the addition of this feature
__label__usage @param contexta debug context
__label__usage @param description description of the feature
__label__usage @param lv new layout version with the addition of this feature
__label__usage @param ancestor lv layout version from which the new lv is derived from
__label__usage @param description description of the feature
__label__usage @param reserved true when this is a layout version reserved for previousversion
__label__usage @param features set of features that are to be enabled for this version
__label__usage @param requestthe asynchronous data request object
__label__usage @since 
__label__usage @param lang the language with which the ast has been created
__label__usage @param ast the translation unit ast may be codenullcode
__label__usage @return a status object
__label__usage @param t unit the translation unit
__label__usage @param index the index used to create the ast needs to be readlocked
__label__usage @return an array of memory space identifiers
__label__usage @param wait if codetruecode wait for ast to be computed might compute a new ast
__label__usage @param progress monitor the progress monitor or codenullcode
__label__usage @return the ast or codenullcode if the ast is not available
__label__usage @param t unitthe translation unit
__label__usage @param waitcodetruecode if the ast should be computed or waited
__label__usage @param monitor a progress monitor may be codenullcode
__label__usage @param ast runnable the runnable taking the ast
__label__usage @return the status returned by the ast runnable
__label__usage @param t unit the translation unit
__label__usage @param index the index used to create the ast needs to be readlocked
__label__usage @param expressionexpression to be evaluated to an address
__label__usage @param wait if codetruecode wait for ast to be computedmight compute a new ast
__label__usage @param progress monitor the progress monitor or codenullcode
__label__usage @return the ast or codenullcode if the ast is not available
__label__usage @param ast the ast to release
__label__usage @param ast the ast
__label__usage @param t unit the translation unit
__label__usage @param t unit the translation unit for which to create the ast
__label__usage @param index the index for ast generation needs to be readlocked
__label__usage @param progress monitor a progress monitor may be codenullcode
__label__usage @return an ast for the translation unit or codenullcode if the operation was cancelled
__label__usage @param contexta debug context
__label__usage @param t unit the translation unit
__label__usage @param t unit the translation unit
__label__usage @return codetruecode if this cache manages the given translation unit
__label__usage @param t unit the translation unit
__label__usage @param ast the translation unit ast
__label__usage @param t unit the translation unit
__label__usage @param t unit the translation unit
__label__usage @return codetruecode if reported as currently being reconciled
__label__usage @param t unit the translation unit
__label__usage @return a string used for debugging
__label__usage @param memory space i dthe memory space the block is being requested for or null ifna
__label__usage @param ast the translation unit ast
__label__usage @return a string used for debugging
__label__usage @return a memory block based on the given parameters
__label__usage @return the value
__label__usage @param name the name to use in the exception message
__label__usage @param value integer value
__label__usage @return the value
__label__usage @param name the name to use in the exception message
__label__usage @param value integer value
__label__usage @return the value
__label__usage @param name the name to use in the exception message
__label__usage @param value long value
__label__usage @return the value
__label__usage @param name the name to use in the exception message
__label__usage @param value integer value
__label__usage @return the value
__label__usage @param name the name to use in the exception message
__label__usage @param max len maximun length
__label__usage @param value string to check if it is a valid identifier
__label__usage @return the variable
__label__usage @param name the name to use in the exception message
__label__usage @param list the list to check
__label__usage @return the variable
__label__usage @param name the name to use in the exception message
__label__usage @param str the variable to check
__label__usage @return the list
__label__usage @param name the name to use in the exception message
__label__usage @param list the list to check
__label__usage @return the variable
__label__usage @param name the name to use in the exception message
__label__usage @param obj the variable to check
__label__usage @since 
__label__usage @since 
__label__usage @return the code task infocode for the given taskattempt
__label__usage @return the total runtime for the taskattempt
__label__usage @return the final code statecode of the taskattempt
__label__usage @since 
__label__usage @param listener a property change listener
__label__usage @param listener a property change listener
__label__usage @param action the controller method
__label__usage @since 
__label__usage @param cls the controller class
__label__usage @param path spec the path spec in the form of controlleractionargs etc
__label__usage @param method the http method for the route
__label__usage @param path the path to redirect to
__label__usage @return inet socket address
__label__usage @param expression
__label__usage @since 
__label__usage @return codeiast expressioncode that represents the array
__label__usage @param layout class
__label__usage @param args arguments
__label__usage @param ops per thread number of inputs for each thread
__label__usage @param daemon id id of the daemon calling this method
__label__usage @param daemon id id of the daemon calling this method
__label__usage @param input idx serial index of the operation called by the deamon
__label__usage @param arg operation specific argument
__label__usage @return time of the individual namenode call
__label__usage @return the argument
__label__usage @param args argument list
__label__usage @return true if operation is all which means that options not relatedto this operation should be ignored or false otherwise meaningthat usage should be printed when an unrelated option is encountered
__label__usage @noextend this interface is not intended to be extended by clients
__label__usage @noimplement this interface is not intended to be implemented by clients
__label__usage @param a args command line parameters
__label__usage @param args arguments
__label__usage @param ops per thread number of inputs for each thread
__label__usage @param daemon id id of the daemon calling this method
__label__usage @param daemon id id of the daemon calling this method
__label__usage @param input idx serial index of the operation called by the deamon
__label__usage @param arg operation specific argument
__label__usage @return time of the individual namenode call
__label__usage @return the argument
__label__usage @param args argument list
__label__usage @return true if operation is all which means that options not relatedto this operation should be ignored or false otherwise meaningthat usage should be printed when an unrelated option is encountered
__label__usage @return property id not null
__label__usage @param property idthe identifier not null of the property whose value to check
__label__usage @since 
__label__usage @param a args command line parameters
__label__usage @param cluster the minicluster
__label__usage @return the ugi for isinki
__label__usage @param data transfer protection supported qo ps
__label__usage @return configuration for starting a secure cluster
__label__usage @since 
__label__usage @return the checkpoint name
__label__usage @param ps the @link print stream to print to
__label__usage @noextend this interface is not intended to be extended by clients
__label__usage @noinstantiate this class is not intended to be instantiated by clients
__label__usage @param type proxy which created this
__label__usage @param project i project
__label__usage @param version version number of the description as reported by the abstract c project description storageon last save
__label__usage @return abstract c project description storage
__label__usage @return boolean indicating whether this storage type writes a compatible cproject file
__label__usage @param name
__label__usage @param storage type
__label__usage @param version
__label__usage @param minversion
__label__usage @param maxversion
__label__usage @param el
__label__usage @since 
__label__usage @return the kind of the modification
__label__usage @return the edit group or codenullcode
__label__usage @since 
__label__usage @param name job name
__label__usage @param elements
__label__usage @return whether or not this action should be run in the background
__label__usage @return view part or codenullcode
__label__usage @param action the presentation for this action
__label__usage @return whether the action was initialized
__label__usage @return structured selection
__label__usage @parm selection structured selection
__label__usage @since 
__label__usage @param treemy tree viewer
__label__usage @param add buttonmy add button
__label__usage @param remove buttonmy remove button
__label__usage @param rename buttonmy rename button
__label__usage @param activate buttonmy activate button
__label__usage @param build buttonmy build button
__label__usage @param controllermy project configurations controller
__label__usage @param projectthe project configuration whose active configuration selections have changed
__label__usage @since 
__label__usage @noimplement this interface is not intended to be implemented by clients
__label__usage @noextend this interface is not intended to be extended by clients
__label__usage @since orgeclipserseremotecdt 
__label__usage @since 
__label__usage @return true if the policy is inheritonly
__label__usage @return fallback storage types for replicating existing block replicas
__label__usage @return fallback storage types for new block replicas
__label__usage @return preferred storage types used for placing block replicas
__label__usage @return the name of the storage policy
__label__usage @noextend this class is not intended to be subclassed by clients
__label__usage @noinstantiate this class is not intended to be instantiated by clients
__label__usage @since 
__label__usage @param viewer input the input to the viewer for the given cache entry
__label__usage @param path the viewer tree path for the given cache entry
__label__usage @param is dirty codetruecode if the given cache entry is already dirty
__label__usage @return collection of properties which should be flushed orcodenullcode if none
__label__usage p note a code partitionercode is created only when there are multiplereducersp
__label__usage @param key the key to be paritioned
__label__usage @param num partitions the total number of partitions
__label__usage @param value the entry value
__label__usage @return the partition number for the codekeycode
__label__usage @return specific resources that may be killed by thecode resource managercode
__label__usage @return contract describing resources to return to the cluster
__label__usage @param visitor to call back on
__label__usage @param binder to apply configuration element to
__label__usage @since 
__label__usage @since 
__label__usage @param project
__label__usage @param monitor
__label__usage @param proj the project to add the autotools nature to
__label__usage @param proj the project to add the nature to
__label__usage @param nature id the id of the nature to assign to the project
__label__usage @param monitor a progress monitor to indicate the duration of the operation orcodenullcode if progress reporting is not required
__label__usage @param monitor a progress monitor to indicate the duration of the operation orcodenullcode if progress reporting is not required
__label__usage @param project to remove the autotools nature from
__label__usage @param mon progress monitor to indicate the duration of the operation orcodenullcode if progress reporting is not required
__label__usage @param project to remove the old autotools nature from
__label__usage @param mon progress monitor to indicate the duration of the operation orcodenullcode if progress reporting is not required
__label__usage @param proj the project to remove the nature from
__label__usage @param nature id the nature id to remove
__label__usage @param monitor a progress monitor to indicate the duration of the operation orcodenullcode if progress reporting is not required
__label__usage @param test dir path root testing directory
__label__usage @param t type of the input key
__label__usage @param list the list
__label__usage @param key the input key
__label__usage @return the index to the desired element if it exists or listsizeotherwise
__label__usage @return the index to the desired element if it exists or listsizeotherwise
__label__usage @param key the input key
__label__usage @param list the list
__label__usage @param t type of the input key
__label__usage @return the index to the desired element if it exists or listsizeotherwise
__label__usage @param cmp comparator for the key
__label__usage @param key the input key
__label__usage @param list the list
__label__usage @param t type of the input key
__label__usage @return the index to the desired element if it exists or listsizeotherwise
__label__usage @param cmp comparator for the key
__label__usage @param key the input key
__label__usage @param list the list
__label__usage @param t type of the input key
__label__usage @return true if both versions have the same major version number falseotherwise
__label__usage @param other the version object to test compatibility with
__label__usage @return serialized size of the version object
__label__usage @return the minor version
__label__usage @return major version
__label__usage @param out the data output object
__label__usage @param ininput stream
__label__usage @param majormajor version
__label__usage @param minorminor version
__label__usage @param in the input stream
__label__usage @return the string
__label__usage @param inode i node attributes accessed inode
__label__usage @param out
__label__usage @param s
__label__usage @param ininput stream
__label__usage @return the decoded long integer
__label__usage @param ininput stream
__label__usage @return the decoded integer
__label__usage @param outoutput stream
__label__usage @param nthe integer number
__label__usage @param outoutput stream
__label__usage @param n the integer to be encoded
__label__usage @since 
__label__usage @noextend this class is not intended to be subclassed by clients
__label__usage @param name
__label__usage @return itruei is the name is a valid directory name with no whitespaces
__label__usage @param snapshot id int snapshot id
__label__usage functions replace or \ by systems separator replace multiple separators by single one skip skip quotes note is left untouched on purpose in order to work properly undercircumstances such as thisheader file at includevector is supposed to find the stl vector header#include extvectorgcc include treeincludegccextvectorls includeextvector does not work either
__label__usage @param original path path to process
__label__usage @return reconciled path
__label__usage @version revision date
__label__usage @return true if the container was found in one of the queues
__label__usage @param access fs action requested permission
__label__usage @param allocated cont infothe container whose execution needs to start by freeing upresources occupied by opportunistic containers
__label__usage @param container to start idthe container whose execution needs to start by freeing upresources occupied by opportunistic containers
__label__usage @return the additional opportunistic containers that need to be killed
__label__usage @param container to start idthe container id of the guaranteed container for which we need tofree resources so that its execution can start
__label__usage @return the resources that need to be freed up for the given guaranteedcontainer to start
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @param name
__label__usage @return the name of the node
__label__usage @param namethe name of the child
__label__usage @param path include path
__label__usage @param timestampthe timestamp for when the node is entered
__label__usage @return the child node object
__label__usage @return the total time spent in milliseconds
__label__usage @return the time spent for the fastest invocation in milliseconds
__label__usage @return the time spent for the slowest invocation in milliseconds
__label__usage @return the number of times the node has been entered
__label__usage @return the total time spent in milliseconds
__label__usage @return a collection of child nodes
__label__usage @param timestamp
__label__usage @return codetruecode if the profiling is enabled elsecodefalsecode
__label__usage @param file name include file name
__label__usage @param namethe name of the entered block
__label__usage @param namethe name of the left block
__label__usage @since 
__label__usage @since 
__label__usage @return codetruecode if the profiling is enabled elsecodefalsecode
__label__usage @since 
__label__usage @param profiler result consumerthe consumer that gets profiler data
__label__usage @return reconciled path
__label__usage @param mode fs permission mode from inode
__label__usage all of the public methods are simply accessors for the instance variables wewant to write out in the json files
__label__usage @since 
__label__usage @param tthe row type of the target grid
__label__usage @since 
__label__usage @param cell reference the cell to generate a style for
__label__usage @return the style name to add to this cell or @code null to not setany style
__label__usage @return a scanner for creating autoconf partitions
__label__usage @return the viewport generator class
__label__usage @return a scanner for creating autoconf partitions
__label__usage @return the autoconf code scanner
__label__usage @return the autoconf code scanner
__label__usage @param source viewer
__label__usage @since 
__label__usage @since 
__label__usage @param resource bundle the resource bundle
__label__usage @param prefix the prefix
__label__usage @param text operation action the text operation action
__label__usage @param source viewer the source viewer to display the hover over
__label__usage @param text hover the hover to make focusable
__label__usage @return codetruecode if successful codefalsecode otherwise
__label__usage @param source viewer the source viewer to display the hover over
__label__usage @param annotation hover the hover to make focusable
__label__usage @return codetruecode if successful codefalsecode otherwise
__label__usage @param listener the reconcile listener to be added
__label__usage @param listener the reconcile listener to be removed
__label__usage @return codetruecode if folding is enabled codefalsecode otherwise
__label__usage @param parent parent composite of the control
__label__usage @since 
__label__usage @param acl feature acl feature of inode
__label__usage @noextend this interface is not intended to be extended by clients
__label__usage @noimplement this interface is not intended to be implemented by clients
__label__usage @since 
__label__usage @return @code true if there are threads waiting for read locks
__label__usage @since 
__label__usage @param k key type for map output
__label__usage @param v value type for map output
__label__usage @return the merger
__label__usage @throws access control exception if the acl denies permission
__label__usage @param viewer the viewer providing shell for ui
__label__usage @return the @link transfer type that this listener can accept adrop operation for
__label__usage @param operation incoming operation
__label__usage @return changed operation
__label__usage @param operation incoming operation
__label__usage @return changed operation
__label__usage @param drop object object to drop
__label__usage @param drop container container where to drop the object
__label__usage @param operation drop operation
__label__usage @param make target transfer data incoming data
__label__usage @param drop container a container where the targets are being created
__label__usage @param operation droppaste operation
__label__usage @param shell a shell to display warnings to the user
__label__usage @since 
__label__usage @since 
__label__usage @param strthe string
__label__usage @return the string without trailing newlines
__label__usage @since 
__label__usage @param stringsthe array of string
__label__usage @return the flattened representation
__label__usage @param objthe object reference to stringify
__label__usage @param simple class nameif true use the classs simple name otherwise the package
__label__usage @return the stringified representation of the object reference
__label__usage @since 
__label__usage @return the current selection never codenullcode
__label__usage @return the current document or codenullcode
__label__usage @return codetruecode if smart mode is on codefalsecode otherwise
__label__usage @return codetruecode if the selection is valid for an indent operation
__label__usage @return the editors selection provider or codenullcode
__label__usage @return the codeic projectcode of the current editor input orcodenullcode if it cannot be found
__label__usage @since 
__label__usage @return the value of the preference
__label__usage @param def the default value
__label__usage @param key the key of the preference
__label__usage @return the value of the preference
__label__usage @param key the key of the preference
__label__usage @return codetruecode if line comments at column should be indented inside codefalsecode otherwise
__label__usage @return codetruecode if empty lines should be indented codefalsecode otherwise
__label__usage @return the indent size as defined in the current formatter preferences
__label__usage @return the tab size as defined in the current formatter preferences
__label__usage @return codetruecode if tabs and spaces should be used
__label__usage @return an i index binding for this index that is equivalent to the specified binding
__label__usage @return codetruecode if only spaces should be used
__label__usage @return the size in characters of a string
__label__usage @param indent the string to be measured
__label__usage @return the indent or codenullcode if not computable
__label__usage @param partition the comment partition
__label__usage @param line the line in document
__label__usage @param document the document
__label__usage @return the indent or codenullcode if not computable
__label__usage @param partition the comment partition
__label__usage @param line the line in document
__label__usage @param binding an ast or an index binding
__label__usage @param scanner the scanner
__label__usage @param document the document
__label__usage @return string with trailing spaces removed
__label__usage @param indent
__label__usage @param bundle the resource bundle
__label__usage @param prefix the prefix to use for keys in codebundlecode
__label__usage @param editor the text editor
__label__usage @param binding a binding for which declarations are searched for@return an array of names@throws core exception
__label__usage @param is tab action whether the action should insert tabs if over the indentation
__label__usage @param new offset the selection offset
__label__usage @param new length the selection range
__label__usage @param document the document
__label__usage @param line the line to be indented
__label__usage @param caret the caret position
__label__usage @param indenter the indenter
__label__usage @param multi line codetruecode if more than one line is being indented
__label__usage @param scanner the heuristic scanner
__label__usage @return codetruecode if codedocumentcode was modified codefalsecode otherwise
__label__usage @param binding a binding for which declarations are searched for@return an array of names@throws core exception
__label__usage @param binding a binding for which references are searched for@return an array of names@throws core exception
__label__usage @noreference this method is not intended to be referenced by clients
__label__usage @noreference this method is not intended to be referenced by clients
__label__usage @throws core exception
__label__usage @param viewer the viewer
__label__usage @param configuration the configuration
__label__usage @param preference store the preference store
__label__usage @param viewer
__label__usage @param configuration
__label__usage @param store
__label__usage @param val the value to be added
__label__usage @return the string representation of the agregator
__label__usage @return an array of values as the outputs of the combiner
__label__usage @since 
__label__usage @since 
__label__usage @return valid true if the token has not expired false otherwise
__label__usage @param jwt token the token that contains the expiration date to validate
__label__usage @return true if an expected audience is present otherwise false
__label__usage @param jwt tokenthe jwt token where the allowed audiences will be found
__label__usage @return valid true if signature verifies successfully false otherwise
__label__usage @param jwt token the token that contains the signature to be validated
__label__usage @return true if valid
__label__usage @param jwt token the token to validate
__label__usage @return url to use as login url for redirect
__label__usage @param request for getting the original request url
__label__usage @return serialized jwt token
__label__usage @param req servlet request to get the jwt token from
__label__usage @param configconfiguration properties to initialize the handler
__label__usage @param pk public key for the token signtature verification
__label__usage @return string
__label__usage @return string
__label__usage @return the affordance string or codenullcode if disabled or nokey binding is defined
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @param obj the schedulable to use
__label__usage @return string identity or null if no identity could be made
__label__usage @param interrupt check period ms interrupt check period passed to domain socket watcher
__label__usage @return new domain socket watcher
__label__usage @noextend this class is not intended to be subclassed by clients
__label__usage @noinstantiate this class is not intended to be instantiated by clients
__label__usage @param key of the property
__label__usage @return self
__label__usage @param filename to save
__label__usage @return self
__label__usage @param prefix of the subset
__label__usage @return the subset config
__label__usage this method is never called
__label__usage @noreference this class is not intended to be referenced by clients
__label__usage @noextend this class is not intended to be subclassed by clients
__label__usage @param conf
__label__usage @param store
__label__usage @param metrics
__label__usage @param cleaner task lock lock that ensures a serial execution of cleanertask
__label__usage @return an instance of a cleaner task
__label__usage @param updates each update specifies the element and contextfor which annotations are requested and stores the results
__label__usage @param location an i index file location representing the location of the file@return the file in the index or @code null@throws core exception@deprecated use
__label__usage @param linkage id the id of the linkage in which the file has been parsed@param location the i index file location representing the location of the file@param macro dictionary the names and definitions of the macros used to disambiguate betweenvariants of the file contents corresponding to different inclusion points@return the file for the location or @code null if the file is not present inthe index@throws core exception
__label__usage @since 
__label__usage @param linkage id the id of the linkage in which the file has been parsed@param location the i index file location representing the location of the file@return the files for the location and the linkage@throws core exception@since 
__label__usage @return the maximum width the tooltip popup in pixels
__label__usage @param max width the maximum width the tooltip popup in pixels
__label__usage @param open delay the open delay in ms
__label__usage @param location an i index file location representing the location of the file@return an array of fileobjects@throws core exception
__label__usage @param quick open delay the quick open delay in ms
__label__usage @return the quick open delay in ms
__label__usage @param quick open timeout the quick open timeout in ms
__label__usage @return the quick open timeout in ms
__label__usage @return the close timeout in ms
__label__usage @param file the file containing the include directives@return an array of include relations@throws core exception
__label__usage @return string containing the unique id of the tooltip which always hasa value
__label__usage @param widget widget which dom handlers are connected
__label__usage @param element element used in search
__label__usage @return tooltip info if connector and tooltip found null if not
__label__usage @return boolean
__label__usage @param offset height
__label__usage @return the final ycoordinate
__label__usage @param offset height
__label__usage @return the final ycoordinate
__label__usage @param offset width
__label__usage @param file the file included by the directives to be found@return an array of include relations@throws core exception
__label__usage @return the final xcoordinate
__label__usage @param offset width
__label__usage @return the final xcoordinate
__label__usage @since 
__label__usage @param infowith the content of the tooltip
__label__usage @param infowith the content of the tooltip
__label__usage @param file the file containing the include directives@param depth depth to which includes are followed should be one of@link #depthzero or @link #depthinfinite@return an array of include relations@throws core exception
__label__usage @param file the file the include directives point to@param depth depth to which includes are followed should be one of@link #depthzero or @link #depthinfinite@return an array of include relations@throws core exception
__label__usage @param include@return the file included or @code null@throws core exception@since 
__label__usage @param name a name that has to be matched by the macros@param filter a filter that allows for skipping parts of the index@param monitor a monitor to report progress may be @code null@return an array of macros matching the name@throws core exception@since 
__label__usage @param close timeout the close timeout in ms
__label__usage @param prefix the prefix with which all returned macros must start@param filter a filter that allows for skipping parts of the index@param monitor a monitor for progress reporting and cancellation may be @code null@return an array of bindings with the prefix@throws core exception@since 
__label__usage @return the open delay in ms
__label__usage @since 
__label__usage @param name a name to find the binding for@return the binding or @code null@throws core exception
__label__usage @param fs
__label__usage @param file
__label__usage @param fs
__label__usage @param history file
__label__usage @param pattern the pattern the name of the binding has to match@param is fully qualified if @code true binding must be in global scope@param filter a filter that allows for skipping parts of the index@param monitor a monitor to report progress may be @code null@return an array of bindings matching the pattern@throws core exception
__label__usage @param in
__label__usage @return the populated job info object
__label__usage @return the parse exception if any
__label__usage @return the job submit time
__label__usage @return the job finish time
__label__usage @return the job id
__label__usage @return the user name
__label__usage @return the job name
__label__usage @return the job queue name
__label__usage @return the path for the job configuration file
__label__usage @param patterns an array of patterns the components of the qualified name of the bindingshave to match@param is fully qualified if @code true the array of pattern specifies the fullyqualified name@param filter a filter that allows for skipping parts of the index@param monitor a monitor to report progress may be @code null@return an array of bindings matching the pattern@throws core exception
__label__usage @return the job launch time
__label__usage @return the total number of maps
__label__usage @return the total number of reduces
__label__usage @return the total number of failed maps
__label__usage @return the number of failed reduces
__label__usage @return the number of finished maps
__label__usage @return the number of finished reduces
__label__usage @return the job status
__label__usage @return the counters for the job
__label__usage @return the map counters for the job
__label__usage @param pattern a pattern the name of the bindings have to match@param filter a filter that allows for skipping parts of the index@param monitor a monitor to report progress may be @code null@return an array of bindings matching the pattern@throws core exception
__label__usage @return the reduce counters for the job
__label__usage @return the map of all tasks in this job
__label__usage @return the map of all completed task attempts in this job
__label__usage @return the priority of this job
__label__usage @return the uberized status of this job
__label__usage @return the am info for the jobs app master
__label__usage @return the am info for the newest app master
__label__usage @return the task id
__label__usage @return the start time of this task
__label__usage @return the finish time of this task
__label__usage @param names an array of names which has to be matched by the qualified name ofthe bindings@param filter a filter that allows for skipping parts of the index@param monitor a monitor to report progress may be @code null@return an array of bindings matching the pattern@throws core exception
__label__usage @return the task type
__label__usage @return the split locations
__label__usage @return the counters for this task
__label__usage @return the task status
__label__usage @return the attempt id that caused this task to fail
__label__usage @return the attempt id that caused this task to succeed
__label__usage @return the error
__label__usage @return the map of all attempts for this task
__label__usage @return the attempt id
__label__usage @return the start time of the attempt
__label__usage @param name a name which has to be matched by the qualified name of the bindings@param filter a filter that allows for skipping parts of the index@param monitor a monitor to report progress may be @code null@return an array of bindings matching the pattern@throws core exception
__label__usage @return the finish time of the attempt
__label__usage @return the shuffle finish time applicable only for reduce attempts
__label__usage @return the sort finish time applicable only for reduce attempts
__label__usage @return the map finish time applicable only for map attempts
__label__usage @return the error string
__label__usage @return the state
__label__usage @return the task status
__label__usage @return the task type
__label__usage @return the tracker name where the attempt executed
__label__usage @return the host name
__label__usage @param name a name which has to be matched by the qualified name of the bindings@param file scope only if true only bindings at file scope are returned@param filter a filter that allows for skipping parts of the index@param monitor a monitor to report progress may be @code null@return an array of bindings matching the pattern@throws core exception
__label__usage @return the port
__label__usage @return the rack name
__label__usage @return the counters for the attempt
__label__usage @return the http port for the tracker
__label__usage @return the shuffle port for the tracker
__label__usage @return the container id for the tracker
__label__usage @return the http port for the node manager running the am
__label__usage @return the port for the node manager running the am
__label__usage @return the host name for the node manager on which the am is running
__label__usage @return the container id for the am
__label__usage @param prefix the prefix with which all returned bindings must start@param file scope only if true only bindings at file scope are returned@param filter a filter that allows for skipping parts of the index@param monitor a monitor for progress reporting and cancellation may be @code null@return an array of bindings with the prefix@throws core exception
__label__usage @return the start time of the am
__label__usage @return the application attempt id
__label__usage @noreference this method is not intended to be referenced by clients
__label__usage @param binding a binding for which names are searched for@param flags a combination of @link #finddeclarations @link #finddefinitions@link #findreferences and @link #searchacrosslanguageboundaries@return an array of names@throws core exception
__label__usage this api ignores partial records and stops parsing on encountering one@link #get parse exception can be used to fetch the exception if any
__label__usage only used for unit tests
__label__usage @param conf configuration namenode config
__label__usage @param namenode namenode that this fsck is going to use
__label__usage @param pmap keyvalue map passed to the http servlet as url parameters
__label__usage @param out output stream to write the fsck output
__label__usage @param total datanodes number of live datanodes
__label__usage @param remote address source address of the fsck request
__label__usage @noimplement this interface is not intended to be implemented by clients
__label__usage @noextend this interface is not intended to be extended by clients
__label__usage @since 
__label__usage @since 
__label__usage @return the proxy object to invoke methods upon
__label__usage @param current proxythe proxy object which was being used before this failover event
__label__usage @return the interface implemented by the proxy objects returned by@link failover proxy provider#get proxy
__label__usage @since mar 
__label__usage @param view signals view
__label__usage @since 
__label__usage @param data transfer protection supported qo ps
__label__usage @return configuration for starting a secure cluster
__label__usage @param action owner
__label__usage @param top
__label__usage @param left
__label__usage @param ao
__label__usage @param clito be set as an owner of menu
__label__usage @param file to search for
__label__usage @return the editor or null
__label__usage @return the active visible text editor
__label__usage @return the file from the active editor
__label__usage @return the document from the currently active editor
__label__usage @return the document opened in the editor
__label__usage @return get the document that corresponds to the file
__label__usage @return return the file that contains the selection or theactive file if there is no present selection
__label__usage @return the file at the specified path string
__label__usage @since 
__label__usage @noextend this class is not intended to be subclassed by clients
__label__usage @noimplement this interface is not intended to be implemented by clients
__label__usage @param macro name macro name
__label__usage @param context type context type
__label__usage @param context data context data
__label__usage @return i build macro
__label__usage @param context type context type
__label__usage @param context data context data
__label__usage @return i build macro
__label__usage @noextend this class is not intended to be subclassed by clients
__label__usage @noimplement this interface is not intended to be implemented by clients
__label__usage @noextend this interface is not intended to be extended by clients
__label__usage @noimplement this interface is not intended to be implemented by clients
__label__usage p note debug elements which support restart should implement this interface adopting to this interface is not enoughpp note debugger can also implement the asynchronous@link orgeclipsedebugcorecommandsi restart handlerp
__label__usage to iterate over the true bits in a bit set use the following loopprecodefor long i bsnext set bit size in words i gt i bsnext set biti size in words operate on index i here
__label__usage @return whether this element can currently be restarted
__label__usage @param from index the index to start checking from inclusive
__label__usage @since 
__label__usage @param section tag namethe name of the tag
__label__usage @param section datathe scetion data
__label__usage @since 
__label__usage @param paintablethe paintable to start
__label__usage @param tagthe name of the start tag
__label__usage @return @link paint status ready to paint or already cached on theclient also used for sub paintables that are painted laterseparately
__label__usage @since previously using start tag paintable string
__label__usage @param bitset size in words the size of the bitset measured in byte words
__label__usage @param paintablethe paintable to close
__label__usage @param tag namethe name of the start tag
__label__usage @param tag namethe name of the end tag
__label__usage @param namethe attribute name
__label__usage @param valuethe attribute value
__label__usage @param namethe attribute name
__label__usage @param valuethe attribute value
__label__usage @param namethe attribute name
__label__usage @param valuethe attribute value
__label__usage @param ownerthe receiver owner that can track the progress of streaming tothe given stream variable
__label__usage @return the index of the next set bit or if there is no such bit
__label__usage @param namean identifying name for the stream variable
__label__usage @param valuethe stream variable to paint
__label__usage @param namethe attribute name
__label__usage @param valuethe attribute value
__label__usage @param namethe attribute name
__label__usage @param valuethe attribute value
__label__usage @param namethe attribute name
__label__usage @param valuethe attribute value
__label__usage @param namethe boolean attribute name
__label__usage @param valuethe boolean attribute value
__label__usage @param name
__label__usage @param value
__label__usage @param namethe name of the attribute
__label__usage @param valuethe component to be referenced on client side
__label__usage @param ownerthe listener for variable changes
__label__usage @param namethe variable name
__label__usage @param valuethe variable initial value
__label__usage @param ownerthe listener for variable changes
__label__usage @param namethe variable name
__label__usage @param valuethe variable initial value
__label__usage @param ownerthe listener for variable changes
__label__usage @param namethe variable name
__label__usage @param valuethe variable initial value
__label__usage @param ownerthe listener for variable changes
__label__usage @param valuethe variable initial value
__label__usage @param ownerthe listener for variable changes
__label__usage @param namethe variable name
__label__usage @param valuethe variable initial value
__label__usage @param ownerthe listener for variable changes
__label__usage @param namethe variable name
__label__usage @code true
__label__usage @param valuethe variable initial value
__label__usage @param ownerthe listener for variable changes
__label__usage @param namethe variable name
__label__usage @param valuethe variable initial value
__label__usage @param ownerthe listener for variable changes
__label__usage @param namethe name of the variable
__label__usage @param valuethe initial value of the variable
__label__usage @param ownerthe listener for variable changes
__label__usage @param namethe variable name
__label__usage @param section tag namethe tag name
__label__usage @code false
__label__usage @param section datathe section data to be printed
__label__usage @param namespacethe namespace
__label__usage @param uidlthe uidl to be added
__label__usage @param textthe text to add
__label__usage @param textthe character data to add
__label__usage @since 
__label__usage @return the tag string used in communication to present given@link client connector type terminal may define how to presentthe connector
__label__usage @return true if a full repaint has been requested eg refresh in abrowser window or such
__label__usage @code true
__label__usage @code true
__label__usage @since previously using eng tag string
__label__usage @code 
__label__usage @param identifier a unique identifier for this resourcesuch as orgapachehadoopblacklist
__label__usage @param handler the object to register
__label__usage @param identifier the resource to unregister
__label__usage @return the true if removed
__label__usage @param identifier the resource to refresh
__label__usage @param args the arguments to pass on not including the program name
__label__usage @return the response from the appropriate handler
__label__usage @param provider language settings provider
__label__usage @return @code true if clearing is allowed or @code false if not
__label__usage @param provider language settings provider
__label__usage @return @code true if editing is allowed or @code false if not
__label__usage @param provider instance of provider to create options page for
__label__usage @return image or @code null
__label__usage @param provider class class to find language settings provider image
__label__usage @return image or @code null
__label__usage @param provider id id of language settings provider
__label__usage @return image url or @code null
__label__usage @noextend this class is not intended to be subclassed by clients
__label__usage @noinstantiate this class is not intended to be instantiated by clients
__label__usage @param part the workbench part
__label__usage @param part the part to filter debug context change event
__label__usage @param debug context the debug context that filter should stick to
__label__usage @return the debug context provider that handles the filtering
__label__usage @param context id context menu id in the console view a caller needs to definea distinct one for own use
__label__usage @param name name of console to appear in the list of consoles in context menuin the console view
__label__usage @param icon url a @link url of the icon for the context menu of the consoleview the url is expected to point to an image in eclipse os gi bundle@code icon url can be bnullb in that case the default image is supposed to be used
__label__usage @since 
__label__usage common interface for events that are directly caused by some mi event
__label__usage note this method is synchronized because i element editorget cell modifier can be called on any thread even though in practice it should be only called on the ui thread
__label__usage @since 
__label__usage @param event contains new coordinates for the v window
__label__usage @param text flags flags defined in codec element labelscode
__label__usage @param image flags flags defined in codec element image providercode
__label__usage @param decorator the decorator to add
__label__usage @param text flags the text flags to set
__label__usage @param image flags the image flags to set
__label__usage @return returns a int
__label__usage @return returns a int
__label__usage @param element the element to compute the image flags for
__label__usage @return returns a int
__label__usage @param element the element to compute the text flags for
__label__usage @return returns a int
__label__usage @since 
__label__usage @noextend this interface is not intended to be extended by clients
__label__usage @noimplement this interface is not intended to be implemented by clients
__label__usage @since 
__label__usage @since 
__label__usage @return @code true if this element exists in the c model
__label__usage @param ancestor type the given type
__label__usage @return the first ancestor of this c element that has the given type @code null if no suchan ancestor can be found
__label__usage @since 
__label__usage @return the element name
__label__usage @return the kind of element one of the constants declared in @link ic element
__label__usage @return the c model
__label__usage @return the containing c project or @code null if this element isnot contained in a c project
__label__usage @return the parent element or @code null if this element has no parent
__label__usage @since 
__label__usage @return the uri corresponding to the location
__label__usage @return the underlying resource or @code null if none
__label__usage @return the corresponding resource or @code null if none
__label__usage @return @code true if this element is readonly
__label__usage @return @code true if the structure of this element is known
__label__usage @param visitor
__label__usage @return the string handle identifier or @code null if the element type is not supported
__label__usage @since 
__label__usage @param pool cache pool being accessed
__label__usage @noextend this interface is not intended to be extended by clients
__label__usage @noimplement this interface is not intended to be implemented by clients
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @return true if it is a complex number false otherwise
__label__usage @since 
__label__usage @return true if it is an imaginary number false otherwise
__label__usage @param access type of action being performed on the cache pool
__label__usage @since 
__label__usage @param taskid the id of the task to read the log file for
__label__usage @param kind the kind of log to read
__label__usage @param start the offset to read from negative is relative to tail
__label__usage @param end the offset to read upto negative is relative to tail
__label__usage @param is cleanup whether the attempt is cleanup attempt or not
__label__usage @throws access control exception if pool cannot be accessed
__label__usage @param conf the job to look in
__label__usage @return the number of bytes to cap the log files at
__label__usage @param setup the setup commands for the execed process
__label__usage @param cmd the command and the arguments that should be run
__label__usage @param stdout filename the filename that stdout should be saved to
__label__usage @param stderr filename the filename that stderr should be saved to
__label__usage @param build type
__label__usage @param tail length the length of the tail to be saved
__label__usage @param status
__label__usage @param config name
__label__usage @param use setsid should setsid be used in the command or not
__label__usage @return the modified command that should be run
__label__usage @param setup the setup commands for the execed process
__label__usage @param cmd the command and the arguments that should be run
__label__usage @param stdout filename the filename that stdout should be saved to
__label__usage @param stderr filename the filename that stderr should be saved to
__label__usage @param tail length the length of the tail to be saved
__label__usage @return the command line as a string
__label__usage @param cmd the command and the arguments that should be run
__label__usage @param stdout filename the filename that stdout should be saved to
__label__usage @param build type
__label__usage @param stderr filename the filename that stderr should be saved to
__label__usage @param status
__label__usage @param config name
__label__usage @param tail length the length of the tail to be saved
__label__usage @return the command line as a string
__label__usage @param cmd the command to be quoted
__label__usage @param is executable makes shell path if the firstargument is executable
__label__usage @noimplement this interface is not intended to be implemented by clients
__label__usage @noextend this interface is not intended to be extended by clients
__label__usage @since 
__label__usage @since 
__label__usage @return returns the quoted string
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @return base log directory
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @param jobid
__label__usage @since 
__label__usage @since 
__label__usage @since 
__label__usage @return user log directory for the job
__label__usage @param conn the @link http url connection instance to configure
__label__usage @return the configured @link http url connection instance
__label__usage @since 
__label__usage @param target
__label__usage @param drag event
__label__usage @since 
__label__usage @return the vaadin request
__label__usage @return the vaadin service
__label__usage @param requestthe request for which the event is ui provider is invoked
__label__usage @noextend this class is not intended to be subclassed by clients
__label__usage @noimplement this interface is not intended to be implemented by clients
__label__usage @param container container name
__label__usage @param object object ref underneath the container
__label__usage @param path path string
__label__usage @return true iff the objects name matches the path
__label__usage @param possible child possible child dir
__label__usage @return true iff the possible child is under this object
__label__usage @param uri uri to start from
__label__usage @param path path underneath
__label__usage @return a new instance
__label__usage @param uri uri to start from
__label__usage @param path path underneath
__label__usage @param add trailing slash should a trailing slash be added if there isnt one
__label__usage @return a new instance
__label__usage @since 
__label__usage @return the fsimage with highest transaction id in the cluster
__label__usage @return the current status message
__label__usage @noimplement this interface is not intended to be implemented by clients
__label__usage @noextend this interface is not intended to be extended by clients
__label__usage @since 
__label__usage @since 
__label__usage @param option the underlying buildoption
__label__usage @param extra argument an optional @link i option#get field editor extra argument extra argumentfor the fieldeditor may be @code null
__label__usage @param preference name the name of the preference this field editor binds to
__label__usage @param parent the parent of the field editors control
__label__usage @return @code true iff the custom fieldeditor can be successfully displayed returning @code falsewould cause the builtin fieldeditor to be displayed based on the options @link i option#get value type value type
__label__usage @return the list of controls for which tooltips should automatically be displayed by the build settings dialogpage may return @code null to signify that tooltips are handled by the custom fieldeditor itself
__label__usage @param is cleanuptrue if the task is cleanup attempt false otherwise
__label__usage @return true if the task is cleanup attempt false otherwise
__label__usage @return the target directory to restore a previously deleted block file
__label__usage @return the trash directory for a given block file that is being deleted
__label__usage @return root directory for block pool storage
__label__usage @param dn cur dir data node storage root directory
__label__usage @param bp id block pool id
__label__usage @param from dir directory where the snapshot is stored
__label__usage @param to dir the current data directory
__label__usage @param bp sd block pool storage directory at sdcurrentbpid
__label__usage @param detach dir detach directory
__label__usage @param bp sd storage directory sdcurrentbpid
__label__usage @param ns info namespace info from the namenode
__label__usage @param sd storage directory sdcurrentbpid
__label__usage @param ns info namespace info
__label__usage @param start opt startup option
__label__usage @return true if the new properties has been written
__label__usage @param abs path to remove the absolute path of the root for the block poollevel storage to remove
__label__usage @param bp sdir the block pool storage
__label__usage @param ns info the name space info
__label__usage @param dn cur dir data storage current directory
__label__usage @param ns info the name space info
__label__usage @param ns info namespace information
__label__usage @param data dirs storage directories of block pool
__label__usage @param start opt startup option
__label__usage @param ns info namespace information
__label__usage @param data dirs storage directories of block pool
__label__usage @param start opt startup option
__label__usage @return an array of loaded block pool directories
__label__usage @param ns info namespace information
__label__usage @param data dir the root path of the storage directory
__label__usage @param start opt startup option
__label__usage @return the storage directory successfully loaded
__label__usage @noextend this class is not intended to be subclassed by clients
__label__usage @noinstantiate this class is not intended to be instantiated by clients
__label__usage @author louis wasserman
__label__usage @param t type to inject members of
__label__usage @author crazybob@googlecom bob lee
__label__usage @since 
__label__usage @param instance to inject members on may be @code null
__label__usage @return the total nonnegative number of uncompressed bytes input so far
__label__usage @return the total nonnegative number of compressed bytes output so far
__label__usage @param conf configuration storing new settings
__label__usage @param direct buffer size size of the direct buffer to be used
__label__usage @param header compression header # compression header
__label__usage @param strategy compression strategy # compression strategy
__label__usage @param level compression level # compression level
__label__usage @version @version@
__label__usage @since 
__label__usage @return a download stream which produces the resource content
__label__usage @return the file name associated to this resource
__label__usage @return a unique path accross all tasks of the job
__label__usage @return i build macro status
__label__usage @since 
__label__usage @noextend this class is not intended to be subclassed by clients
__label__usage @param status the status object to be associated with this exception
__label__usage @param name the name for the file
__label__usage @param conf the configuration for the job
__label__usage @return a unique name accross all tasks of the job
__label__usage @return i project
__label__usage @param proj i project
__label__usage @param name the name to make unique
__label__usage @since jul 
__label__usage @param conf the configuration for the job
__label__usage @param conf jobconfiguration
__label__usage @param name temporary taskoutput filename
__label__usage @return path to the tasks temporary output file
__label__usage @noextend this interface is not intended to be extended by clients
__label__usage @noimplement this interface is not intended to be implemented by clients
__label__usage @return the @link path to the tasks temporary output directoryfor the mapreduce job
__label__usage @since 
__label__usage @param shell shell
__label__usage @param tree viewer tree viewer
__label__usage @return the @link path to the output directory for the mapreduce job
__label__usage @param shell provider a provider for a shell
__label__usage @param tree viewer tree viewer
__label__usage @param conf the configuration of the job
__label__usage @param output dir the @link path of the output directoryfor the mapreduce job
__label__usage @param conf the configuration of the job
__label__usage @param output dir the @link path of the output directory forthe mapreduce job
__label__usage @param conf the @link job conf to look in
__label__usage @param default value the @link compression codec to return if not set
__label__usage @return the @link compression codec to be used to compress thejob outputs
__label__usage @param conf the @link job conf to modify
__label__usage @return codetruecode if nativehadoop is loadedelse codefalsecode
__label__usage @param codec class the @link compression codec to be used tocompress the job outputs
__label__usage @param conf the @link job conf to look in
__label__usage @return codetruecode if the job output should be compressedcodefalsecode otherwise
__label__usage @param conf the @link job conf to modify
__label__usage @param compress should the output of the job be compressed
__label__usage @since 
__label__usage @param state the starting state
__label__usage @return the state
__label__usage @param proposed proposed new state
__label__usage @return the state
__label__usage @param expected state the desired state
__label__usage @param proposed proposed new state
__label__usage @return the original state
__label__usage @param name name of the service can be null
__label__usage @param state current state
__label__usage @param proposed proposed new state
__label__usage @param current current state
__label__usage @return true if the transition to a new state is valid
__label__usage @param proposed proposed new state
__label__usage @return the current states description
__label__usage @param context display string the string to be used when presenting the context
__label__usage @param information display string the string to be displayed when presenting the context information
__label__usage @param image the image to display when presenting the context information
__label__usage @param context display string the string to be used when presenting the context
__label__usage @param information display string the string to be displayed when presenting the context informationmay not be codenullcode
__label__usage @since
__label__usage @param inputthe tree input
__label__usage @param filtera filter
__label__usage @param parentthe parent composite
__label__usage @return the tree viewer
__label__usage @return opcode bytes as code big integercode
__label__usage @param stringspace separated hexadecimal byte array
__label__usage @return address value as code big integercode
__label__usage @param stringdecimal or hexadecimal representation of an nonnegative integer
__label__usage @since 
__label__usage @param viewer
__label__usage @param operation code
__label__usage @param text action label
__label__usage @param tool tip text action tool tip
__label__usage @param description action description
__label__usage @param preferredresource to use if it matches the sourcehandle
__label__usage @return resource to install marker on or codenullcode for notavailable
__label__usage @param conf
__label__usage @noextend this interface is not intended to be extended by clients
__label__usage @noimplement this interface is not intended to be implemented by clients
__label__usage @return the command line exit code
__label__usage @param src path the file to which this choose targets is being invoked
__label__usage @param num of replicas additional number of replicas wanted
__label__usage @param writer the writers machine null if not in the cluster
__label__usage @param chosen datanodes that have been chosen as targets
__label__usage @param return chosen nodes decide if the chosen nodes are returned
__label__usage @param excluded nodes datanodes that should not be considered as targets
__label__usage @param blocksize size of the data to be written
__label__usage @param flags block placement flags
__label__usage @return array of datanode descriptor instances chosen as targetand sorted as a pipeline
__label__usage @param favored nodes datanodes that should be favored as targets thisis only a hint and due to cluster state namenode may not beable to place the blocks on these datanodes
__label__usage @param locs block with locations
__label__usage @param num of replicas replica number of file to be verified
__label__usage @return the result of verification
__label__usage @param available replicasavailable replicas
__label__usage @param del candidates candidates for deletion for normal replication this set is thesame with available replicas for striped blocks this set is asubset of available replicas
__label__usage @param expected num of replicas the expected number of replicas remaining in the del candidates
__label__usage @param excess typestype of the storagepolicy
__label__usage @param added node new replica reported
__label__usage @param del node hint hint for excess storage selection
__label__usage @return returns the list of excess replicas chosen for deletion
__label__usage @param conf the configuration object
__label__usage @param stats retrieve cluster status from here
__label__usage @param cluster map cluster topology
__label__usage @param candidates all replicas including source and target
__label__usage @param source source replica of the move
__label__usage @param target target replica of the move
__label__usage @param rack map a map from rack to replica
__label__usage @param more than one the list of replica nodes on rack which has more thanone replica
__label__usage @param exactly one the list of replica nodes on rack with only one replica
__label__usage @param cur current replica to remove
__label__usage @return rack of data node
__label__usage @param available set all the available data nodesstorages of the block
__label__usage @param candidates datanode storage info datanode info to be splitinto two sets
__label__usage @param rack map a map from rack to datanodes
__label__usage @param more than one contains nodes on rack with more than one replica
__label__usage @param exactly one remains contains the remaining nodes
__label__usage @since 
__label__usage @param name category name
__label__usage @since 
__label__usage @param modify dialog
__label__usage @param working values
__label__usage @return create the categories tree
__label__usage @param error messagethe message to display in case the value does not validate
__label__usage @param min value the minimum value to accept or null for no limit
__label__usage @param max value the maximum value to accept or null for no limit
__label__usage @since 
__label__usage @param window
__label__usage @param resource may be null to indicate all cdt editors should be reopened
__label__usage @return an array of @link i editor part objects that might need to be reinitializedbased on doccomment ownership of the specified resource changing
__label__usage @since 
__label__usage @return i build macrovaluexxx
__label__usage @noextend this class is not intended to be subclassed by clients
__label__usage @noimplement this interface is not intended to be implemented by clients
__label__usage @param index index of value to return
__label__usage @return cache object for given value
__label__usage @param name attribute name
__label__usage @param value attribute value
__label__usage @param jar filename file name of the jar in which the manifest is written
__label__usage @return on success nonzero value on error
__label__usage @param flushable the @code flushable object to be flushed
__label__usage @param flushable the @code flushable object to be flushed
__label__usage @param swallow io exception if true dont propagate io exceptions thrown by the @code flushmethod
__label__usage @since 
__label__usage @since 
__label__usage @param indexthe index of the widget to be shown
__label__usage @param before indexthe index before which it will be inserted
__label__usage @param wthe widget to be inserted
__label__usage @return the visible widgets index
__label__usage @param wthe widget to be added
__label__usage @since 
__label__usage @since 
__label__usage @return scanner discovered entries level 
__label__usage @param empty values infos list to which unresolved entries are added
__label__usage @return user entry info never null
__label__usage @since 
__label__usage @return true iff a keyvalue pair was read
__label__usage @return the number of apps submitted
__label__usage @param num apps submittedthe number of apps submitted
__label__usage @return the number of running apps
__label__usage @param num apps runningthe number of running apps
__label__usage @return the number of pending apps
__label__usage @param num apps pendingthe number of pending apps
__label__usage @return the number of completed apps
__label__usage @param num apps completedthe number of completed apps
__label__usage @return the number of killed apps
__label__usage @param num apps killedthe number of killed apps
__label__usage @return the number of failed apps
__label__usage @param num apps failedthe number of failed apps
__label__usage @return the number of active users
__label__usage @param num active usersthe number of active users
__label__usage @return the available memory
__label__usage @param available memory m bthe available memory
__label__usage @return the allocated memory
__label__usage @param allocated memory m bthe allocate memory
__label__usage @return the pending memory
__label__usage @param pending memory m bthe pending memory
__label__usage @return the reserved memory
__label__usage @param reserved memory m bthe reserved memory
__label__usage @return the available vcores
__label__usage @param available v coresthe available vcores
__label__usage @return the allocated vcores
__label__usage @param allocated v coresthe allocated vcores
__label__usage @return the pending vcores
__label__usage @param pending v coresthe pending vcores
__label__usage @return the number of pending containers
__label__usage @param pending containers the pending containers
__label__usage @return the number of allocated containers
__label__usage @param allocated containers the allocated containers
__label__usage @return the number of reserved containers
__label__usage @param reserved containers the reserved containers
__label__usage @return the reserved vcores
__label__usage @param reserved v coresthe reserved vcores
__label__usage @param project
__label__usage @return the file to be opened in the editor
__label__usage @param results
__label__usage @param is code completion completion is in code not preprocessor etc
__label__usage @return filtered proposals
__label__usage @return i path
__label__usage @return true if exported
__label__usage @return one of
__label__usage @since 
__label__usage @since 
__label__usage @param viewer the viewer
__label__usage @param operation code the opcode
__label__usage @param parent the shell parent of the dialog
__label__usage @param template the template to edit
__label__usage @param edit whether this is a new template or an existing being edited
__label__usage @param is name modifiable whether the name of the template may be modified
__label__usage @param is context type modifiable whether the context type of the template may be modified
__label__usage @param registry the context type registry to use
__label__usage @param name the string to test
__label__usage @return codetruecode if the name is valid
__label__usage @return the created template
__label__usage @since 
__label__usage @param target type the type that should be returned by this method
__label__usage @param value and type the encoded value and type array
__label__usage @param application a reference to the application
__label__usage @param enforce generics in collectionstrue if generics should be enforce false to only allowinternal types in collections
__label__usage @return
__label__usage @param target type
__label__usage @param restrict to internal types
__label__usage @param type index the index of a generic type to use to define the child typethat should be decoded
__label__usage @param encoded value and type
__label__usage @param application
__label__usage @return
__label__usage @param field value
__label__usage @param reference value
__label__usage usage java recoverable network word count hostname port checkpointdirectory outputfilehostname and port describe the tcp server that spark streaming would connect to receivedata checkpointdirectory directory to hdfscompatible file system which checkpoint dataoutputfile file to which the word counts will be appendedcheckpointdirectory and outputfile must be absolute paths to run this on your local machine you need to first run a netcat server nc lk and run the example as binrunexample orgapachesparkexamplesstreaming java recoverable network word count \localhost checkpoint out
__label__usage @return
__label__usage @since 
__label__usage @param athe first json value to check may not be null
__label__usage @param bthe second json value to check may not be null
__label__usage @return codetruecode if both json values are the samecodefalsecode otherwise
__label__usage @param exprthe expression to be evaluated
__label__usage @noextend this class is not intended to be subclassed by clients
__label__usage @noinstantiate this class is not intended to be instantiated by clients
__label__usage @param name
__label__usage @param label
__label__usage @param sel
__label__usage @param opts
__label__usage @param parent
__label__usage @param name
__label__usage @param label
__label__usage @param tooltip
__label__usage @param context id
__label__usage @param sel
__label__usage @param opts
__label__usage @param parent
__label__usage @param string the new tool tip text or null
__label__usage @return the field editors tool tip text
__label__usage this file is autogenerated by code in orgapachesparksqlapijava function registration
__label__usage @param enabled the enabled state
__label__usage @param parent the parent of the controls in the group
__label__usage @return the text control or codenullcode if notext field is created yet
__label__usage @return the text control or codenullcode if notext field is created yet
__label__usage @param test context
__label__usage @param func
__label__usage @return
__label__usage @param test app id
__label__usage @return
__label__usage @param test contexts used to identify the requests
__label__usage @return
__label__usage @param app id
__label__usage @param status
__label__usage @return
__label__usage @param test app id
__label__usage @return
__label__usage @param test app id
__label__usage @param test app id
__label__usage @return
__label__usage @param application id
__label__usage @param user
__label__usage @return
__label__usage here is an example it specifies to use fields and for keysand use fields and above for values
__label__usage @return returns the f project
__label__usage @return the f entry
__label__usage @return returns the f entry kind
__label__usage @param entry kind the f entry kind to set
__label__usage @return returns the f removed
__label__usage @param removed the f removed to set
__label__usage @return returns the f parent
__label__usage @param parent the f parent to set
__label__usage @return children of the discovered element
__label__usage @return the hosts new state
__label__usage @since 
__label__usage @noextend this interface is not intended to be extended by clients
__label__usage @noimplement this interface is not intended to be implemented by clients
__label__usage @since 
__label__usage @since 
__label__usage @param project
__label__usage @param des
__label__usage @param project
__label__usage @param des
__label__usage @param force
__label__usage @param monitor
__label__usage @param project
__label__usage @param des
__label__usage @param monitor
__label__usage @param flags
__label__usage @param project
__label__usage @param write if true the writable description copy is returned
__label__usage @param project project for which the description is requested
__label__usage @return @link ic project description or null if the project does not contain the
__label__usage @param project
__label__usage @param ids the ids of external settins provider extensions
__label__usage @param prefs preferences to be applied
__label__usage @param update projects if codetruecode all project descriptions within the workspace will be updated
__label__usage @param monitor
__label__usage @return @code true if new @code prefs differ from the old ones ie preferences changed
__label__usage @since 
__label__usage @return the workspace project description preferences
__label__usage @param write if true the writable preferences copy is returned
__label__usage @param listener
__label__usage @param event types see the event types in @link c project description event
__label__usage @param listener
__label__usage @return whether the given project is a newstyle project ie c configuration data providerdriven
__label__usage @param des
__label__usage @return whether the given project is a newstyle project ie c configuration data providerdriven
__label__usage @param project
__label__usage @param monitor
__label__usage @param projects
__label__usage @return @link ic project description or @code null if the project does not containthe cdt data associated with it
__label__usage @param flags some combination of @link #getwritable @link #getifloadded@link #getemptyprojectdescription @link #getcreatedescriptionand @link #projectcreating
__label__usage @return a writable copy of the ic project description or null if the project does not contain the cdt data associated with it
__label__usage @param project project for which the project description is requested
__label__usage @param load if exists if true the method first tries to load and return the project description
__label__usage @param creating if true the created project description will be contain the true is cdt project creating state
__label__usage @return @link ic project description
__label__usage @noextend this class is not intended to be subclassed by clients
__label__usage @noinstantiate this class is not intended to be instantiated by clients
__label__usage @return the associated code job idcode
__label__usage @return the type of the task mapreduce
__label__usage @return the task number
__label__warning @deprecated as of replaced by
__label__warning @deprecated as of replaced by
__label__warning nonnls
__label__warning nonnls
__label__warning nonnls
__label__warning nonnls
__label__warning nonnls
__label__warning nonnls
__label__warning nonnls
__label__warning nonnls
__label__warning nonnls
__label__warning @deprecated use is union is class is struct
__label__warning @deprecated as of 
__label__warning @deprecated unsupported operation
__label__warning @deprecated unsupported operation
__label__warning @deprecated unsupported operation
__label__warning @deprecated use @link #add template parametericppast template parameter
__label__warning @deprecated unsupported operation
__label__warning @deprecated as of use @link #get properties as array type insteadfor improved performance
__label__warning @deprecated all constants must be defined in this interface
__label__warning @deprecated unsupported operation
__label__warning @deprecated use @link elf binary archive#create archive membersar header
__label__warning @deprecated replaced by @link #get clauses
__label__warning @deprecated replaced by @link #add clauseiast initializer clause
__label__warning @deprecated replaced by @link #get argument
__label__warning @deprecated replaced by @link #set argumentiast initializer clause
__label__warning @deprecated as of cdt does not seem to be used anywhere looks likeremnant of x style new project wizard
__label__warning @deprecated as of cdt this wizard was used in property pagesfor x style projects
__label__warning for debugging purpose only@see javalang object#to string
__label__warning @deprecated use @link i method declaration#is friend
__label__warning @deprecated use @link i member#get visibility
__label__warning @deprecated use @link i member#get visibility
__label__warning @deprecated use @link i member#get visibility
__label__warning @deprecated not used anymore
__label__warning @deprecated use @link i declaration#is static
__label__warning @deprecated use @link i method declaration#is destructor
__label__warning @deprecated use @link i method declaration#is constructor
__label__warning @deprecated use the typesafe version get kind instead
__label__warning @deprecated types dont have values
__label__warning @deprecated use the typesafe version get kind instead
__label__warning @deprecated use the typesafe version get kind instead
__label__warning @deprecated use the typesafe version get kind instead
__label__warning @deprecated use the typesafe version get kind instead
__label__warning @deprecated use the typesafe version get kind instead
__label__warning @deprecated use the typesafe version get kind instead
__label__warning @deprecated use add virt specifier instead
__label__warning @deprecated use add virt specifier instead
__label__warning @deprecated use @link icppast function definition#get member initializers instead
__label__warning @deprecated
__label__warning @deprecated as of cdt this class was used for property pagesfor x style projects
__label__warning @deprecated use @link appearance aware label provider instead
__label__warning @deprecated as of cdt this page was used to set preferencespropertiesfor x style projects
__label__warning @deprecated as of cdt this option block was used to set preferencesproperties
__label__warning @deprecated as of cdt this class was used to set preferencespropertiesfor x style projects